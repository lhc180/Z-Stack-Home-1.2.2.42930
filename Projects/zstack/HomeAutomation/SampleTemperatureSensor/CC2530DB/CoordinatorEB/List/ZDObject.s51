///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.20.1.2476 for 8051               08/Aug/2015  11:42:20
// Copyright 2004-2015 IAR Systems AB.
// Evaluation license - IAR Embedded Workbench for 8051, Evaluation version 9.20
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Components\stack\zdo\ZDObject.c
//    Command line       =  
//        -f
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=10000 -DQUEUED_POLL_RATE=1000 -DRESPONSE_POLL_RATE=1000
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Components\stack\zdo\ZDObject.c
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D xNV_RESTORE -D
//        xHOLD_AUTO_START -D ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC
//        -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D
//        ZCL_READ -D ZCL_WRITE -D ZCL_REPORT -D ZCL_EZMODE -D ZCL_BASIC -D
//        ZCL_IDENTIFY -D ZCL_TEMPERATURE_MEASUREMENT -lC
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List\
//        -lA
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List\
//        --diag_suppress Pe001,Pa010 -o
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\Obj\
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\Source\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\Source\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes
//    List file          =  
//        C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List\ZDObject.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V5
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_SUB_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?UL_GE_X
        EXTERN ?VB
        EXTERN ?XLOAD_R0123
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??NLME_PermitJoiningTimeout::?relay`
        FUNCTION `??NLME_PermitJoiningTimeout::?relay`,0203H
        PUBLIC `??ZDMatchSendState::?relay`
        FUNCTION `??ZDMatchSendState::?relay`,0203H
        PUBLIC `??ZDO_AnyClusterMatches::?relay`
        FUNCTION `??ZDO_AnyClusterMatches::?relay`,0203H
        PUBLIC `??ZDO_BuildSimpleDescBuf::?relay`
        FUNCTION `??ZDO_BuildSimpleDescBuf::?relay`,0203H
        FUNCTION `??ZDO_CompareClusterLists::?relay`,0203H
        PUBLIC `??ZDO_ConvertOTAClusters::?relay`
        FUNCTION `??ZDO_ConvertOTAClusters::?relay`,0203H
        FUNCTION `??ZDO_CopyMatchInfo::?relay`,0203H
        FUNCTION `??ZDO_EndDeviceBindMatchTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_EndDeviceTimeoutCB::?relay`
        FUNCTION `??ZDO_EndDeviceTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_Init::?relay`
        FUNCTION `??ZDO_Init::?relay`,0203H
        PUBLIC `??ZDO_MatchEndDeviceBind::?relay`
        FUNCTION `??ZDO_MatchEndDeviceBind::?relay`,0203H
        PUBLIC `??ZDO_ParseAddrRsp::?relay`
        FUNCTION `??ZDO_ParseAddrRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseBindUnbindReq::?relay`
        FUNCTION `??ZDO_ParseBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseDeviceAnnce::?relay`
        FUNCTION `??ZDO_ParseDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParseEPListRsp::?relay`
        FUNCTION `??ZDO_ParseEPListRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceBindReq::?relay`
        FUNCTION `??ZDO_ParseEndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmNwkDiscRsp::?relay`
        FUNCTION `??ZDO_ParseMgmNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtBindRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtLqiRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtRtgRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseNodeDescRsp::?relay`
        FUNCTION `??ZDO_ParseNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseParentAnnce::?relay`
        FUNCTION `??ZDO_ParseParentAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParsePowerDescRsp::?relay`
        FUNCTION `??ZDO_ParsePowerDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseServerDiscRsp::?relay`
        FUNCTION `??ZDO_ParseServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescBuf::?relay`
        FUNCTION `??ZDO_ParseSimpleDescBuf::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ParseSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseUserDescRsp::?relay`
        FUNCTION `??ZDO_ParseUserDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessBindUnbindReq::?relay`
        FUNCTION `??ZDO_ProcessBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtDirectJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtRtgReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtRtgReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessParentAnnce::?relay`
        FUNCTION `??ZDO_ProcessParentAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessParentAnnceRsp::?relay`
        FUNCTION `??ZDO_ProcessParentAnnceRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessServerDiscReq::?relay`
        FUNCTION `??ZDO_ProcessServerDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescReq::?relay`
        FUNCTION `??ZDO_ProcessUserDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescSet::?relay`
        FUNCTION `??ZDO_ProcessUserDescSet::?relay`,0203H
        FUNCTION `??ZDO_RemoveMatchMemory::?relay`,0203H
        PUBLIC `??ZDO_StartDevice::?relay`
        FUNCTION `??ZDO_StartDevice::?relay`,0203H
        PUBLIC `??ZDO_UpdateAddrManager::?relay`
        FUNCTION `??ZDO_UpdateAddrManager::?relay`,0203H
        PUBLIC `??ZDO_UpdateNwkStatus::?relay`
        FUNCTION `??ZDO_UpdateNwkStatus::?relay`,0203H
        FUNCTION `??zdoSendStateChangeMsg::?relay`,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDMatchSendState
        FUNCTION ZDMatchSendState,0a1203H
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 45, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,080203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        FUNCTION ZDO_CompareClusterLists,080203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,080203H
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CopyMatchInfo,0a1203H
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 21, STACK
        FUNCTION ZDO_EndDeviceBindMatchTimeoutCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_MatchEndDeviceBind
        FUNCTION ZDO_MatchEndDeviceBind,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseParentAnnce
        FUNCTION ZDO_ParseParentAnnce,0a1203H
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 66, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessParentAnnce
        FUNCTION ZDO_ProcessParentAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        PUBLIC ZDO_ProcessParentAnnceRsp
        FUNCTION ZDO_ProcessParentAnnceRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        FUNCTION ZDO_RemoveMatchMemory,021203H
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBWEAK __Constant_3e8
        PUBLIC apsChannelMask
        PUBLIC matchED
        FUNCTION zdoSendStateChangeMsg,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zdpExternalStateTaskID
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
`??APSME_BindRequest::?relay` SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
`??APSME_GetRequest::?relay` SYMBOL "?relay", APSME_GetRequest
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
`??APSME_LookupNwkAddr::?relay` SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
`??APSME_UnBindRequest::?relay` SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
`??APS_ReflectorInit::?relay` SYMBOL "?relay", APS_ReflectorInit
APS_SetEndDeviceBindTimeout SYMBOL "APS_SetEndDeviceBindTimeout"
`??APS_SetEndDeviceBindTimeout::?relay` SYMBOL "?relay", APS_SetEndDeviceBindTimeout
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
`??AddrMgrEntryLookupExt::?relay` SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
`??AddrMgrEntryLookupNwk::?relay` SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
`??AddrMgrEntryUpdate::?relay` SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
`??AddrMgrExtAddrSet::?relay` SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
`??AddrMgrExtAddrValid::?relay` SYMBOL "?relay", AddrMgrExtAddrValid
AssocCount          SYMBOL "AssocCount"
`??AssocCount::?relay` SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
`??AssocFindDevice::?relay` SYMBOL "?relay", AssocFindDevice
AssocGetWithExt     SYMBOL "AssocGetWithExt"
`??AssocGetWithExt::?relay` SYMBOL "?relay", AssocGetWithExt
AssocRemove         SYMBOL "AssocRemove"
`??AssocRemove::?relay` SYMBOL "?relay", AssocRemove
HalLcdWriteScreen   SYMBOL "HalLcdWriteScreen"
`??HalLcdWriteScreen::?relay` SYMBOL "?relay", HalLcdWriteScreen
HalLcdWriteString   SYMBOL "HalLcdWriteString"
`??HalLcdWriteString::?relay` SYMBOL "?relay", HalLcdWriteString
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
`??NLME_CheckNewAddrSet::?relay` SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_CoordinatorInit SYMBOL "NLME_CoordinatorInit"
`??NLME_CoordinatorInit::?relay` SYMBOL "?relay", NLME_CoordinatorInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
`??NLME_DirectJoinRequest::?relay` SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
`??NLME_GetCoordExtAddr::?relay` SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
`??NLME_GetCoordShortAddr::?relay` SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetRequest     SYMBOL "NLME_GetRequest"
`??NLME_GetRequest::?relay` SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
`??NLME_IsAddressBroadcast::?relay` SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
`??NLME_LeaveReq::?relay` SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkFormationRequest SYMBOL "NLME_NetworkFormationRequest"
`??NLME_NetworkFormationRequest::?relay` SYMBOL "?relay", NLME_NetworkFormationRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
`??NLME_NwkDiscReq2::?relay` SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
`??NLME_NwkDiscTerm::?relay` SYMBOL "?relay", NLME_NwkDiscTerm
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
`??NLME_PermitJoiningRequest::?relay` SYMBOL "?relay", NLME_PermitJoiningRequest
NLME_StartRouterRequest SYMBOL "NLME_StartRouterRequest"
`??NLME_StartRouterRequest::?relay` SYMBOL "?relay", NLME_StartRouterRequest
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
`??RTG_RemoveRtgEntry::?relay` SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_ChangeState   SYMBOL "ZDApp_ChangeState"
`??ZDApp_ChangeState::?relay` SYMBOL "?relay", ZDApp_ChangeState
ZDApp_GetEmptyPendingBindReq SYMBOL "ZDApp_GetEmptyPendingBindReq"
`??ZDApp_GetEmptyPendingBindReq::?relay` SYMBOL "?relay", ZDApp_GetEmptyPendingBindReq
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
`??ZDApp_NVUpdate::?relay` SYMBOL "?relay", ZDApp_NVUpdate
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_ParentAnnce     SYMBOL "ZDP_ParentAnnce"
`??ZDP_ParentAnnce::?relay` SYMBOL "?relay", ZDP_ParentAnnce
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDSecMgrPermitJoining SYMBOL "ZDSecMgrPermitJoining"
`??ZDSecMgrPermitJoining::?relay` SYMBOL "?relay", ZDSecMgrPermitJoining
ZMacSetReq          SYMBOL "ZMacSetReq"
`??ZMacSetReq::?relay` SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
`??afEndPoints::?relay` SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
`??afFindSimpleDesc::?relay` SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
`??afNumEndPoints::?relay` SYMBOL "?relay", afNumEndPoints
bindAddrIndexGet    SYMBOL "bindAddrIndexGet"
`??bindAddrIndexGet::?relay` SYMBOL "?relay", bindAddrIndexGet
nwkNeighborRemove   SYMBOL "nwkNeighborRemove"
`??nwkNeighborRemove::?relay` SYMBOL "?relay", nwkNeighborRemove
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
`??nwkNeighborRemoveAllStranded::?relay` SYMBOL "?relay", nwkNeighborRemoveAllStranded
osal_build_uint32   SYMBOL "osal_build_uint32"
`??osal_build_uint32::?relay` SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
`??osal_msg_find::?relay` SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
`??osal_set_event::?relay` SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
`??NLME_PermitJoiningTimeout::?relay` SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDMatchSendState    SYMBOL "ZDMatchSendState"
`??ZDMatchSendState::?relay` SYMBOL "?relay", ZDMatchSendState
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
`??ZDO_AnyClusterMatches::?relay` SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
`??ZDO_BuildSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
`??ZDO_ConvertOTAClusters::?relay` SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
`??ZDO_EndDeviceTimeoutCB::?relay` SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_Init            SYMBOL "ZDO_Init"
`??ZDO_Init::?relay` SYMBOL "?relay", ZDO_Init
ZDO_MatchEndDeviceBind SYMBOL "ZDO_MatchEndDeviceBind"
`??ZDO_MatchEndDeviceBind::?relay` SYMBOL "?relay", ZDO_MatchEndDeviceBind
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
`??ZDO_ParseAddrRsp::?relay` SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
`??ZDO_ParseBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
`??ZDO_ParseDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
`??ZDO_ParseEPListRsp::?relay` SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
`??ZDO_ParseEndDeviceBindReq::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
`??ZDO_ParseMgmNwkDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
`??ZDO_ParseMgmtBindRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
`??ZDO_ParseMgmtLqiRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
`??ZDO_ParseMgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
`??ZDO_ParseMgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
`??ZDO_ParseMgmtRtgRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
`??ZDO_ParseNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParseParentAnnce SYMBOL "ZDO_ParseParentAnnce"
`??ZDO_ParseParentAnnce::?relay` SYMBOL "?relay", ZDO_ParseParentAnnce
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
`??ZDO_ParsePowerDescRsp::?relay` SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
`??ZDO_ParseServerDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
`??ZDO_ParseSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
`??ZDO_ParseSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
`??ZDO_ParseUserDescRsp::?relay` SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
`??ZDO_ProcessBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
`??ZDO_ProcessMgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
`??ZDO_ProcessMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
`??ZDO_ProcessMgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
`??ZDO_ProcessMgmtRtgReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessParentAnnce SYMBOL "ZDO_ProcessParentAnnce"
`??ZDO_ProcessParentAnnce::?relay` SYMBOL "?relay", ZDO_ProcessParentAnnce
ZDO_ProcessParentAnnceRsp SYMBOL "ZDO_ProcessParentAnnceRsp"
`??ZDO_ProcessParentAnnceRsp::?relay` SYMBOL "?relay", ZDO_ProcessParentAnnceRsp
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
`??ZDO_ProcessServerDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
`??ZDO_ProcessUserDescReq::?relay` SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
`??ZDO_ProcessUserDescSet::?relay` SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
`??ZDO_StartDevice::?relay` SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
`??ZDO_UpdateAddrManager::?relay` SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
`??ZDO_UpdateNwkStatus::?relay` SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN `??APSME_BindRequest::?relay`
        FUNCTION `??APSME_BindRequest::?relay`,00H
        EXTERN `??APSME_GetRequest::?relay`
        FUNCTION `??APSME_GetRequest::?relay`,00H
        EXTERN `??APSME_LookupNwkAddr::?relay`
        FUNCTION `??APSME_LookupNwkAddr::?relay`,00H
        EXTERN `??APSME_UnBindRequest::?relay`
        FUNCTION `??APSME_UnBindRequest::?relay`,00H
        EXTERN `??APS_ReflectorInit::?relay`
        FUNCTION `??APS_ReflectorInit::?relay`,00H
        EXTERN `??APS_SetEndDeviceBindTimeout::?relay`
        FUNCTION `??APS_SetEndDeviceBindTimeout::?relay`,00H
        EXTERN `??AddrMgrEntryLookupExt::?relay`
        FUNCTION `??AddrMgrEntryLookupExt::?relay`,00H
        EXTERN `??AddrMgrEntryLookupNwk::?relay`
        FUNCTION `??AddrMgrEntryLookupNwk::?relay`,00H
        EXTERN `??AddrMgrEntryUpdate::?relay`
        FUNCTION `??AddrMgrEntryUpdate::?relay`,00H
        EXTERN `??AddrMgrExtAddrSet::?relay`
        FUNCTION `??AddrMgrExtAddrSet::?relay`,00H
        EXTERN `??AddrMgrExtAddrValid::?relay`
        FUNCTION `??AddrMgrExtAddrValid::?relay`,00H
        EXTERN `??AssocCount::?relay`
        FUNCTION `??AssocCount::?relay`,00H
        EXTERN `??AssocFindDevice::?relay`
        FUNCTION `??AssocFindDevice::?relay`,00H
        EXTERN `??AssocGetWithExt::?relay`
        FUNCTION `??AssocGetWithExt::?relay`,00H
        EXTERN `??AssocRemove::?relay`
        FUNCTION `??AssocRemove::?relay`,00H
        EXTERN `??HalLcdWriteScreen::?relay`
        FUNCTION `??HalLcdWriteScreen::?relay`,00H
        EXTERN `??HalLcdWriteString::?relay`
        FUNCTION `??HalLcdWriteString::?relay`,00H
        EXTERN `??NLME_CheckNewAddrSet::?relay`
        FUNCTION `??NLME_CheckNewAddrSet::?relay`,00H
        EXTERN `??NLME_CoordinatorInit::?relay`
        FUNCTION `??NLME_CoordinatorInit::?relay`,00H
        EXTERN `??NLME_DirectJoinRequest::?relay`
        FUNCTION `??NLME_DirectJoinRequest::?relay`,00H
        EXTERN `??NLME_GetCoordExtAddr::?relay`
        FUNCTION `??NLME_GetCoordExtAddr::?relay`,00H
        EXTERN `??NLME_GetCoordShortAddr::?relay`
        FUNCTION `??NLME_GetCoordShortAddr::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetRequest::?relay`
        FUNCTION `??NLME_GetRequest::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??NLME_IsAddressBroadcast::?relay`
        FUNCTION `??NLME_IsAddressBroadcast::?relay`,00H
        EXTERN `??NLME_LeaveReq::?relay`
        FUNCTION `??NLME_LeaveReq::?relay`,00H
        EXTERN `??NLME_NetworkFormationRequest::?relay`
        FUNCTION `??NLME_NetworkFormationRequest::?relay`,00H
        EXTERN `??NLME_NwkDiscReq2::?relay`
        FUNCTION `??NLME_NwkDiscReq2::?relay`,00H
        EXTERN `??NLME_NwkDiscTerm::?relay`
        FUNCTION `??NLME_NwkDiscTerm::?relay`,00H
        EXTERN `??NLME_PermitJoiningRequest::?relay`
        FUNCTION `??NLME_PermitJoiningRequest::?relay`,00H
        EXTERN `??NLME_StartRouterRequest::?relay`
        FUNCTION `??NLME_StartRouterRequest::?relay`,00H
        EXTERN `??RTG_RemoveRtgEntry::?relay`
        FUNCTION `??RTG_RemoveRtgEntry::?relay`,00H
        EXTERN `??ZDApp_ChangeState::?relay`
        FUNCTION `??ZDApp_ChangeState::?relay`,00H
        EXTERN `??ZDApp_GetEmptyPendingBindReq::?relay`
        FUNCTION `??ZDApp_GetEmptyPendingBindReq::?relay`,00H
        EXTERN `??ZDApp_NVUpdate::?relay`
        FUNCTION `??ZDApp_NVUpdate::?relay`,00H
        EXTERN `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,00H
        EXTERN `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,00H
        EXTERN `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,00H
        EXTERN `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,00H
        EXTERN `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,00H
        EXTERN `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,00H
        EXTERN `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,00H
        EXTERN `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,00H
        EXTERN `??ZDP_ParentAnnce::?relay`
        FUNCTION `??ZDP_ParentAnnce::?relay`,00H
        EXTERN `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,00H
        EXTERN `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,00H
        EXTERN `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,00H
        EXTERN `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,00H
        EXTERN `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,00H
        EXTERN `??ZDSecMgrPermitJoining::?relay`
        FUNCTION `??ZDSecMgrPermitJoining::?relay`,00H
        EXTERN `??ZMacSetReq::?relay`
        FUNCTION `??ZMacSetReq::?relay`,00H
        EXTERN `??afEndPoints::?relay`
        FUNCTION `??afEndPoints::?relay`,00H
        EXTERN `??afFindSimpleDesc::?relay`
        FUNCTION `??afFindSimpleDesc::?relay`,00H
        EXTERN `??afNumEndPoints::?relay`
        FUNCTION `??afNumEndPoints::?relay`,00H
        EXTERN `??bindAddrIndexGet::?relay`
        FUNCTION `??bindAddrIndexGet::?relay`,00H
        EXTERN `??nwkNeighborRemove::?relay`
        FUNCTION `??nwkNeighborRemove::?relay`,00H
        EXTERN `??nwkNeighborRemoveAllStranded::?relay`
        FUNCTION `??nwkNeighborRemoveAllStranded::?relay`,00H
        EXTERN `??osal_build_uint32::?relay`
        FUNCTION `??osal_build_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_find::?relay`
        FUNCTION `??osal_msg_find::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??osal_set_event::?relay`
        FUNCTION `??osal_set_event::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AIB_MaxBindingTime
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_SetEndDeviceBindTimeout
        FUNCTION APS_SetEndDeviceBindTimeout,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocRemove
        FUNCTION AssocRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteScreen
        FUNCTION HalLcdWriteScreen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteString
        FUNCTION HalLcdWriteString,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CoordinatorInit
        FUNCTION NLME_CoordinatorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkFormationRequest
        FUNCTION NLME_NetworkFormationRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_StartRouterRequest
        FUNCTION NLME_StartRouterRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_ChangeState
        FUNCTION ZDApp_ChangeState,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_GetEmptyPendingBindReq
        FUNCTION ZDApp_GetEmptyPendingBindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 66, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ParentAnnce
        FUNCTION ZDP_ParentAnnce,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_TransID
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDSecMgrPermitJoining
        FUNCTION ZDSecMgrPermitJoining,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bindAddrIndexGet
        FUNCTION bindAddrIndexGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN epList
        EXTERN nwkNeighborRemove
        FUNCTION nwkNeighborRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN pNwkNotMyChildListDelete
        EXTERN runtimeChannel
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgApsUseExtendedPANID
        EXTERN zgChildAgingEnable
        EXTERN zgConfigPANID
        EXTERN zgDefaultStartingScanDuration

// C:\Users\Sears\Documents\GitHub\Z-Stack-Home-1.2.2.42930\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2015-02-12 15:03:08 -0800 (Thu, 12 Feb 2015) $
//    4   Revision:       $Revision: 42535 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2015 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #if defined( LCD_SUPPORTED )
//   67   #include "OnBoard.h"
//   68 #endif
//   69 
//   70 /* HAL */
//   71 #include "hal_lcd.h"
//   72 
//   73 /*********************************************************************
//   74  * MACROS
//   75  */
//   76 
//   77 /*********************************************************************
//   78  * CONSTANTS
//   79  */
//   80 // NLME Stub Implementations
//   81 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   82 
//   83 /*********************************************************************
//   84  * TYPEDEFS
//   85  */
//   86 #if defined ( REFLECTOR )
//   87 typedef struct
//   88 {
//   89   byte SrcTransSeq;
//   90   zAddrType_t SrcAddr;
//   91   uint16 LocalCoordinator;
//   92   byte epIntf;
//   93   uint16 ProfileID;
//   94   byte numInClusters;
//   95   uint16 *inClusters;
//   96   byte numOutClusters;
//   97   uint16 *outClusters;
//   98   byte SecurityUse;
//   99   byte status;
//  100 } ZDO_EDBind_t;
//  101 #endif // defined ( REFLECTOR )
//  102 
//  103 enum
//  104 {
//  105   ZDMATCH_INIT,           // Initialized
//  106   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  107   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  108 };
//  109 
//  110 enum
//  111 {
//  112   ZDMATCH_SENDING_NOT,
//  113   ZDMATCH_SENDING_UNBIND,
//  114   ZDMATCH_SENDING_BIND
//  115 };
//  116 
//  117 /*********************************************************************
//  118  * GLOBAL VARIABLES
//  119  */
//  120 
//  121 /*********************************************************************
//  122  * EXTERNAL VARIABLES
//  123  */
//  124 
//  125 /*********************************************************************
//  126  * EXTERNAL FUNCTIONS
//  127  */
//  128 
//  129 /*********************************************************************
//  130  * LOCAL VARIABLES
//  131  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  132 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  133 
//  134 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  135 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  136 #endif
//  137 
//  138 #if defined ( MANAGED_SCAN )
//  139   uint32 managedScanNextChannel = 0;
//  140   uint32 managedScanChannelMask = 0;
//  141   uint8  managedScanTimesPerChannel = 0;
//  142 #endif
//  143 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  144 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  145 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  146 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  147 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  148 int16 zdpExternalStateTaskID = -1;
zdpExternalStateTaskID:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zdpExternalStateTaskID>`
        REQUIRE __INIT_XDATA_I
//  149 
//  150 /*********************************************************************
//  151  * LOCAL FUNCTIONS
//  152  */
//  153 static void ZDODeviceSetup( void );
//  154 #if defined ( MANAGED_SCAN )
//  155   static void ZDOManagedScan_Next( void );
//  156 #endif
//  157 #if defined ( REFLECTOR )
//  158   static void ZDO_RemoveEndDeviceBind( void );
//  159   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  160 #endif
//  161 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  162   static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  163                                        byte numList2, uint16 *list2, uint16 *pMatches );
//  164   static void ZDO_RemoveMatchMemory( void );
//  165   static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  166   static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  167 #endif
//  168 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  169 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  170 
//  171 /*********************************************************************
//  172  * @fn          ZDO_Init
//  173  *
//  174  * @brief       ZDObject and ZDProfile initialization.
//  175  *
//  176  * @param       none
//  177  *
//  178  * @return      none
//  179  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  180 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  181 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_CoordinatorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  182   // Initialize ZD items
//  183   #if defined ( REFLECTOR )
//  184   ZDO_EDBind = NULL;
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  185   #endif
//  186 
//  187   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  188   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#AIB_apsUseExtendedPANID & 0xff
        MOV     R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV     R2,#ZDO_UseExtendedPANID & 0xff
        MOV     R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  189 
//  190   // Setup the device - type of device to create.
//  191   ZDODeviceSetup();
        ; Setup parameters for call to function NLME_CoordinatorInit
        LCALL   `??NLME_CoordinatorInit::?relay`; Banked call to: NLME_CoordinatorInit
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL   `??APS_ReflectorInit::?relay`; Banked call to: APS_ReflectorInit
//  192 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  193 
//  194 #if defined ( MANAGED_SCAN )
//  195 /*********************************************************************
//  196  * @fn      ZDOManagedScan_Next()
//  197  *
//  198  * @brief   Setup a managed scan.
//  199  *
//  200  * @param   none
//  201  *
//  202  * @return  none
//  203  */
//  204 static void ZDOManagedScan_Next( void )
//  205 {
//  206   // Is it the first time
//  207   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  208   {
//  209     // Setup the defaults
//  210     managedScanNextChannel  = 1;
//  211 
//  212     while( managedScanNextChannel && (runtimeChannel & managedScanNextChannel) == 0 )
//  213       managedScanNextChannel <<= 1;
//  214 
//  215     managedScanChannelMask = managedScanNextChannel;
//  216     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  217   }
//  218   else
//  219   {
//  220     // Do we need to go to the next channel
//  221     if ( managedScanTimesPerChannel == 0 )
//  222     {
//  223       // Find next active channel
//  224       managedScanChannelMask  = managedScanNextChannel;
//  225       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  226     }
//  227     else
//  228     {
//  229       managedScanTimesPerChannel--;
//  230 
//  231       if ( managedScanTimesPerChannel == 0 )
//  232       {
//  233         managedScanNextChannel  <<= 1;
//  234         while( managedScanNextChannel && (runtimeChannel & managedScanNextChannel) == 0 )
//  235           managedScanNextChannel <<= 1;
//  236 
//  237         if ( managedScanNextChannel == 0 )
//  238           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  239       }
//  240     }
//  241   }
//  242 }
//  243 #endif // MANAGED_SCAN
//  244 
//  245 /*********************************************************************
//  246  * @fn      ZDODeviceSetup()
//  247  *
//  248  * @brief   Call set functions depending on the type of device compiled.
//  249  *
//  250  * @param   none
//  251  *
//  252  * @return  none
//  253  */
//  254 static void ZDODeviceSetup( void )
//  255 {
//  256   if ( ZG_BUILD_COORDINATOR_TYPE )
//  257   {
//  258     NLME_CoordinatorInit();
//  259   }
//  260 
//  261 #if defined ( REFLECTOR )
//  262   APS_ReflectorInit();
//  263 #endif
//  264 
//  265   if ( ZG_BUILD_JOINING_TYPE )
//  266   {
//  267     NLME_DeviceJoiningInit();
//  268   }
//  269 }
//  270 
//  271 /*********************************************************************
//  272  * @fn          ZDO_StartDevice
//  273  *
//  274  * @brief       This function starts a device in a network.
//  275  *
//  276  * @param       logicalType     - Device type to start
//  277  *              startMode       - indicates mode of device startup
//  278  *              beaconOrder     - indicates time betwen beacons
//  279  *              superframeOrder - indicates length of active superframe
//  280  *
//  281  * @return      none
//  282  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  283 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  284 {
        FUNCALL ZDO_StartDevice, ZDApp_ChangeState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_NetworkFormationRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, ZDApp_ChangeState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_StartRouterRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     ?V0,R2
        MOV     A,R3
        MOV     R6,A
        MOV     ?V1,R4
//  285   ZStatus_t ret;
//  286 #if defined ( ZIGBEE_FREQ_AGILITY )
//  287   static uint8 discRetries = 0;
//  288 #endif
//  289 #if defined ( ZIGBEE_COMMISSIONING )
//  290   static uint8 scanCnt = 0;
//  291 #endif
//  292 
//  293   ret = ZUnsupportedMode;
//  294 
//  295   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
        MOV     A,R7
        JNZ     ??ZDO_StartDevice_0
//  296   {
//  297     if ( startMode == MODE_HARD )
        MOV     A,#0x2
        XRL     A,?V0
        JNZ     ??ZDO_StartDevice_1
//  298     {
//  299       ZDApp_ChangeState( DEV_COORD_STARTING );
        ; Setup parameters for call to function ZDApp_ChangeState
        MOV     R1,#0x8
        LCALL   `??ZDApp_ChangeState::?relay`; Banked call to: ZDApp_ChangeState
//  300       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, runtimeChannel,
//  301                                           zgDefaultStartingScanDuration, beaconOrder,
//  302                                           superframeOrder, false );
        ; Setup parameters for call to function NLME_NetworkFormationRequest
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,?V1
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R6
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     DPTR,#runtimeChannel
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     DPTR,#zgDefaultStartingScanDuration
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R4,#zgApsUseExtendedPANID & 0xff
        MOV     R5,#(zgApsUseExtendedPANID >> 8) & 0xff
        MOV     DPTR,#zgConfigPANID
        LCALL   ??Subroutine200_0 & 0xFFFF
//  303     }
??CrossCallReturnLabel_412:
        LCALL   `??NLME_NetworkFormationRequest::?relay`; Banked call to: NLME_NetworkFormationRequest
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        SJMP    ??ZDO_StartDevice_2
//  304     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_1:
        MOV     A,#0x1
        XRL     A,?V0
        JNZ     ??ZDO_StartDevice_3
//  305     {
//  306       // Just start the coordinator
//  307       ZDApp_ChangeState( DEV_COORD_STARTING );
        ; Setup parameters for call to function ZDApp_ChangeState
        MOV     R1,#0x8
        LCALL   `??ZDApp_ChangeState::?relay`; Banked call to: ZDApp_ChangeState
//  308       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
        ; Setup parameters for call to function NLME_StartRouterRequest
        MOV     R3,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     R1,A
        LCALL   `??NLME_StartRouterRequest::?relay`; Banked call to: NLME_StartRouterRequest
??ZDO_StartDevice_2:
        MOV     A,R1
//  309     }
//  310     else
//  311     {
//  312 #if defined( LCD_SUPPORTED )
//  313       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  314 #endif
//  315     }
//  316   }
//  317 
//  318   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
//  319   {
//  320     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
//  321     {
//  322       ZDApp_ChangeState( DEV_NWK_DISC );
//  323 
//  324   #if defined( MANAGED_SCAN )
//  325       ZDOManagedScan_Next();
//  326       ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  327 #else
//  328       ret = NLME_NetworkDiscoveryRequest( runtimeChannel, zgDefaultStartingScanDuration );
//  329 #if defined ( ZIGBEE_FREQ_AGILITY )
//  330       if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  331           ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
//  332       {
//  333         // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  334         // change will not be recieved. On these devices or routers that have
//  335         // lost the network, an active scan shall be conducted on the Default
//  336         // Channel list using the extended PANID to find the network. If the
//  337         // extended PANID isn't found using the Default Channel list, an scan
//  338         // should be completed using all channels.
//  339         runtimeChannel = MAX_CHANNELS_24GHZ;
//  340       }
//  341     #endif // ZIGBEE_FREQ_AGILITY
//  342     #if defined ( ZIGBEE_COMMISSIONING )
//  343       if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
//  344       {
//  345         // When ApsUseExtendedPanID is commissioned to a non zero value via
//  346         // application specific means, the device shall conduct an active scan
//  347         // on the Default Channel list and join the PAN with the same
//  348         // ExtendedPanID. If the PAN is not found, an scan should be completed
//  349         // on all channels.
//  350         // When devices rejoin the network and the PAN is not found from
//  351         runtimeChannel = MAX_CHANNELS_24GHZ;
//  352       }
//  353     #endif // ZIGBEE_COMMISSIONING
//  354   #endif
//  355     }
//  356     else if ( startMode == MODE_RESUME )
//  357     {
//  358       if ( logicalType == NODETYPE_ROUTER )
//  359       {
//  360         ZMacScanCnf_t scanCnf;
//  361         ZDApp_ChangeState( DEV_NWK_ORPHAN );
//  362 
//  363         /* if router and nvram is available, fake successful orphan scan */
//  364         scanCnf.hdr.Status = ZSUCCESS;
//  365         scanCnf.ScanType = ZMAC_ORPHAN_SCAN;
//  366         scanCnf.UnscannedChannels = 0;
//  367         scanCnf.ResultListSize = 0;
//  368         nwk_ScanJoiningOrphan(&scanCnf);
//  369 
//  370         ret = ZSuccess;
//  371       }
//  372       else
//  373       {
//  374         ZDApp_ChangeState( DEV_NWK_ORPHAN );
//  375         //set timer for scan and rejoin
//  376         osal_start_timerEx( ZDAppTaskID, ZDO_REJOIN_BACKOFF, zgDefaultRejoinScan );
//  377         ret = NLME_OrphanJoinRequest( runtimeChannel,
//  378                                       zgDefaultStartingScanDuration );
//  379       }
//  380     }
//  381     else
//  382     {
//  383 #if defined( LCD_SUPPORTED )
//  384       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  385 #endif
//  386     }
//  387   }
//  388 
//  389   if ( ret != ZSuccess )
        JNZ     ??ZDO_StartDevice_0
        SJMP    ??ZDO_StartDevice_4
??ZDO_StartDevice_3:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "MODE unknown">` & 0xff
        MOV     R5,#(`?<Constant "MODE unknown">` >> 8) & 0xff
        MOV     R2,#`?<Constant "StartDevice ERR">` & 0xff
        MOV     R3,#(`?<Constant "StartDevice ERR">` >> 8) & 0xff
        LCALL   `??HalLcdWriteScreen::?relay`; Banked call to: HalLcdWriteScreen
//  390   {
//  391     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_0:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
//  392   }
//  393 }
??ZDO_StartDevice_4:
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI R6 SameValue
          CFI VB SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI R7 SameValue
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI EndBlock cfiBlock1
//  394 
//  395 /**************************************************************************************************
//  396  * @fn          zdoSendStateChangeMsg
//  397  *
//  398  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  399  *
//  400  * input parameters
//  401  *
//  402  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  403  * @param       state - The current device state.
//  404  *
//  405  * output parameters
//  406  *
//  407  * None.
//  408  *
//  409  * @return      None.
//  410  **************************************************************************************************
//  411  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  412 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
zdoSendStateChangeMsg:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function zdoSendStateChangeMsg
        CODE
//  413 {
        FUNCALL zdoSendStateChangeMsg, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     R6,A
//  414   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
        ; Setup parameters for call to function osal_msg_find
        MOV     R2,#-0x2f
        MOV     R1,A
        LCALL   `??osal_msg_find::?relay`; Banked call to: osal_msg_find
        MOV     DPL,R2
        MOV     DPH,R3
//  415 
//  416   if (NULL == pMsg)
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??zdoSendStateChangeMsg_0
//  417   {
//  418     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
        ; Setup parameters for call to function osal_msg_allocate
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     A,R2
        ORL     A,R3
        JNZ     ??zdoSendStateChangeMsg_1
//  419     {
//  420       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  421       // try again later when more Heap may be available.
//  422       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x10
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_set_event::?relay`; Banked call to: osal_set_event
        SJMP    ??zdoSendStateChangeMsg_2
//  423     }
//  424     else
//  425     {
//  426       pMsg->event = ZDO_STATE_CHANGE;
??zdoSendStateChangeMsg_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2f
        MOVX    @DPTR,A
//  427       pMsg->status = state;
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  428 
//  429       (void)osal_msg_send(taskId, (uint8 *)pMsg);
        ; Setup parameters for call to function osal_msg_send
        MOV     A,R6
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
        SJMP    ??zdoSendStateChangeMsg_2
//  430     }
//  431   }
//  432   else
//  433   {
//  434     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  435     pMsg->status = state;
??zdoSendStateChangeMsg_0:
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  436   }
//  437 }
??zdoSendStateChangeMsg_2:
        LJMP    ??Subroutine178_0 & 0xFFFF
          CFI EndBlock cfiBlock2
//  438 
//  439 /**************************************************************************************************
//  440  * @fn          ZDO_UpdateNwkStatus
//  441  *
//  442  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  443  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  444  *              than one registered EndPoint, it will only receive one notification per state
//  445  *              change. Although the device may go through a sequence of state changes, the
//  446  *              Application task may only receive notification of the final, steady-state state
//  447  *              because it has the lowest priority and never even runs to receive the intermediate
//  448  *              state change notifications.
//  449  *
//  450  * input parameters
//  451  *
//  452  * @param       state - The current device state.
//  453  *
//  454  * output parameters
//  455  *
//  456  * None.
//  457  *
//  458  * @return      None.
//  459  **************************************************************************************************
//  460  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  461 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  462 {
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     ?V0,R1
//  463   epList_t *pItem = epList;
        MOV     DPTR,#epList
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_259:
        SJMP    ??ZDO_UpdateNwkStatus_0
//  464 
//  465 #if defined MT_ZDO_CB_FUNC
//  466   if ( zdpExternalStateTaskID == -1 )
//  467   {
//  468     zdpExternalStateTaskID = MT_TaskID;
//  469   }
//  470 #endif
//  471 
//  472   while (pItem != NULL)
//  473   {
//  474     if (pItem->epDesc->endPoint != ZDO_EP)
??ZDO_UpdateNwkStatus_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine184_0 & 0xFFFF
??CrossCallReturnLabel_328:
        JZ      ??ZDO_UpdateNwkStatus_2
//  475     {
//  476       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
        ; Setup parameters for call to function zdoSendStateChangeMsg
        INC     DPTR
        LCALL   ??Subroutine187_0 & 0xFFFF
//  477     }
??CrossCallReturnLabel_340:
        MOV     R2,A
        MOV     R1,?V0
        LCALL   `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  478 
//  479     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_2:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine210_0 & 0xFFFF
//  480   }
??CrossCallReturnLabel_455:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
??ZDO_UpdateNwkStatus_0:
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDO_UpdateNwkStatus_1
//  481 
//  482   if ( zdpExternalStateTaskID != -1 )
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_UpdateNwkStatus_3
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDO_UpdateNwkStatus_3:
        JZ      ??ZDO_UpdateNwkStatus_4
//  483   {
//  484     zdoSendStateChangeMsg( state, zdpExternalStateTaskID );
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R1,?V0
        LCALL   `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  485   }
//  486 
//  487   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_4:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ??Subroutine188_0 & 0xFFFF
//  488   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_350:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
//  489 }
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock4
//  490 
//  491 #if defined ( REFLECTOR )
//  492 /*********************************************************************
//  493  * @fn          ZDO_RemoveEndDeviceBind
//  494  *
//  495  * @brief       Remove the end device bind
//  496  *
//  497  * @param  none
//  498  *
//  499  * @return      none
//  500  */
//  501 static void ZDO_RemoveEndDeviceBind( void )
//  502 {
//  503   if ( ZDO_EDBind != NULL )
//  504   {
//  505     // Free the RAM
//  506     if ( ZDO_EDBind->inClusters != NULL )
//  507     {
//  508       osal_mem_free( ZDO_EDBind->inClusters );
//  509     }
//  510     if ( ZDO_EDBind->outClusters != NULL )
//  511     {
//  512       osal_mem_free( ZDO_EDBind->outClusters );
//  513     }
//  514     osal_mem_free( ZDO_EDBind );
//  515     ZDO_EDBind = NULL;
//  516   }
//  517 }
//  518 #endif // REFLECTOR
//  519 
//  520 #if defined ( REFLECTOR )
//  521 /*********************************************************************
//  522  * @fn          ZDO_SendEDBindRsp
//  523  *
//  524  * @brief       Send the end device bind response
//  525  *
//  526  * @param  none
//  527  *
//  528  * @return      none
//  529  */
//  530 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  531 {
//  532   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  533 
//  534 #if defined( LCD_SUPPORTED )
//  535   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  536   if ( Status == ZDP_SUCCESS )
//  537   {
//  538     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  539   }
//  540   else
//  541   {
//  542     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  543   }
//  544 #endif
//  545 
//  546 }
//  547 #endif // REFLECTOR
//  548 
//  549 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  550 /*********************************************************************
//  551  * @fn          ZDO_CompareClusterLists
//  552  *
//  553  * @brief       Compare one list to another list
//  554  *
//  555  * @param       numList1 - number of items in list 1
//  556  * @param       list1 - first list of cluster IDs
//  557  * @param       numList2 - number of items in list 2
//  558  * @param       list2 - second list of cluster IDs
//  559  * @param       pMatches - buffer to put matches
//  560  *
//  561  * @return      number of matches
//  562  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  563 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
ZDO_CompareClusterLists:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
        CODE
//  564                           byte numList2, uint16 *list2, uint16 *pMatches )
//  565 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V3,R1
        MOV     ?V4,R4
//  566   byte x, y;
//  567   uint16 z;
//  568   byte numMatches = 0;
        MOV     ?V0,#0x0
//  569 
//  570   // Check the first in against the seconds out
//  571   for ( x = 0; x < numList1; x++ )
        MOV     ?V1,#0x0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_124:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_122:
        SJMP    ??ZDO_CompareClusterLists_0
//  572   {
//  573     for ( y = 0; y < numList2; y++ )
//  574     {
//  575       z = list2[y];
??ZDO_CompareClusterLists_1:
        MOV     R0,?V2
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_143:
        MOV     ?V6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V7,A
//  576       if ( list1[x] == z )
        MOV     R0,?V1
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_145:
        XRL     A,?V6
        JNZ     ??ZDO_CompareClusterLists_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V7
??ZDO_CompareClusterLists_2:
        JNZ     ??ZDO_CompareClusterLists_3
//  577       {
//  578         pMatches[numMatches++] = z;
        LCALL   ?Subroutine100 & 0xFFFF
//  579       }
//  580     }
??CrossCallReturnLabel_305:
        MOV     A,R6
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_160:
        MOVX    @DPTR,A
        INC     ?V0
??ZDO_CompareClusterLists_3:
        INC     ?V2
??ZDO_CompareClusterLists_4:
        MOV     A,?V2
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_CompareClusterLists_1
        INC     ?V1
??ZDO_CompareClusterLists_0:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V3
        JNC     ??ZDO_CompareClusterLists_5
        MOV     ?V2,#0x0
        SJMP    ??ZDO_CompareClusterLists_4
//  581   }
//  582 
//  583   return ( numMatches );
??ZDO_CompareClusterLists_5:
        MOV     R1,?V0
        LJMP    ??Subroutine194_0 & 0xFFFF
//  584 }
          CFI EndBlock cfiBlock5

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_305
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function ZDO_ConvertOTAClusters
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOV     R0,?V0
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine176_0:
          CFI Block cfiCond9 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_303
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond10 Using cfiCommon0
          CFI (cfiCond10) Function ZDO_ParseAddrRsp
          CFI (cfiCond10) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond10) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond10) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond10) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond10) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond10) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond10) CFA_SP SP+-2
          CFI (cfiCond10) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ZDO_CompareClusterLists
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond11) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond11) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-2
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDO_ConvertOTAClusters
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-2
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_310:
        RET
          CFI (cfiCond9) CFA_SP SP+0
          CFI (cfiCond10) CFA_SP SP+0
          CFI (cfiCond11) CFA_SP SP+0
          CFI (cfiCond12) CFA_SP SP+0
          CFI (cfiPicker13) CFA_SP SP+0
          CFI EndBlock cfiCond9
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine157:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_305
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDO_ConvertOTAClusters
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_306
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-4
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_303
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond16) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond16) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond16) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond16) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond16) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-4
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDO_ParseAddrRsp
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_304
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-4
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ZDO_CompareClusterLists
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_145
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-4
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function ZDO_AnyClusterMatches
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_146
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-4
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function ZDO_CompareClusterLists
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_143
          CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond20) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond20) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond20) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond20) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond20) CFA_SP SP+-4
          CFI (cfiCond20) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ZDO_AnyClusterMatches
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_144
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-4
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function ZDMatchSendState
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_147
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond22) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond22) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-4
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function ZDMatchSendState
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_148
          CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond23) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond23) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond23) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond23) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond23) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond23) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond23) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond23) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond23) CFA_SP SP+-4
          CFI (cfiCond23) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker24 Using cfiCommon1
          CFI (cfiPicker24) NoFunction
          CFI (cfiPicker24) Picker
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        RET
          CFI (cfiCond14) CFA_SP SP+-2
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond17) CFA_SP SP+-2
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond19) CFA_SP SP+-2
          CFI (cfiCond20) CFA_SP SP+-2
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond22) CFA_SP SP+-2
          CFI (cfiCond23) CFA_SP SP+-2
          CFI (cfiPicker24) CFA_SP SP+0
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiPicker24
//  585 #endif // ZG_BUILD_COORDINATOR_TYPE
//  586 
//  587 /*********************************************************************
//  588  * Utility functions
//  589  */
//  590 
//  591 /*********************************************************************
//  592  * @fn          ZDO_CompareByteLists
//  593  *
//  594  * @brief       Compares two lists for matches.
//  595  *
//  596  * @param       ACnt  - number of entries in list A
//  597  * @param       AList  - List A
//  598  * @param       BCnt  - number of entries in list B
//  599  * @param       BList  - List B
//  600  *
//  601  * @return      true if a match is found
//  602  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  603 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  604 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V3,R1
        MOV     ?V2,R4
//  605   byte x, y;
//  606 
//  607   for ( x = 0; x < ACnt; x++ )
        MOV     ?V0,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_125:
        SJMP    ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC     ?V0
??ZDO_AnyClusterMatches_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V3
        JNC     ??ZDO_AnyClusterMatches_2
//  608   {
//  609     for ( y = 0; y < BCnt; y++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC     ?V1
??ZDO_AnyClusterMatches_3:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V2
        JNC     ??ZDO_AnyClusterMatches_1
//  610     {
//  611       if ( AList[x] == BList[y] )
        MOV     R0,?V0
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     R0,?V1
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_144:
        XRL     A,R6
        JNZ     ??ZDO_AnyClusterMatches_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_AnyClusterMatches_5:
        JNZ     ??ZDO_AnyClusterMatches_4
//  612       {
//  613         return true;
        MOV     R1,#0x1
        SJMP    ??ZDO_AnyClusterMatches_6
//  614       }
//  615     }
//  616   }
//  617 
//  618   return false;
??ZDO_AnyClusterMatches_2:
        MOV     R1,#0x0
??ZDO_AnyClusterMatches_6:
        LJMP    ?Subroutine4 & 0xFFFF
//  619 }
          CFI EndBlock cfiBlock25

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond26 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_145
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function ZDO_AnyClusterMatches
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+-2
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker28 Using cfiCommon1
          CFI (cfiPicker28) NoFunction
          CFI (cfiPicker28) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_308:
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI (cfiCond26) CFA_SP SP+0
          CFI (cfiCond27) CFA_SP SP+0
          CFI (cfiPicker28) CFA_SP SP+0
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiPicker28

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond29 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_143
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond30 Using cfiCommon0
          CFI (cfiCond30) Function ZDO_AnyClusterMatches
          CFI (cfiCond30) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond30) CFA_SP SP+-2
          CFI (cfiCond30) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker31 Using cfiCommon1
          CFI (cfiPicker31) NoFunction
          CFI (cfiPicker31) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_307:
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI (cfiCond29) CFA_SP SP+0
          CFI (cfiCond30) CFA_SP SP+0
          CFI (cfiPicker31) CFA_SP SP+0
          CFI EndBlock cfiCond29
          CFI EndBlock cfiCond30
          CFI EndBlock cfiPicker31

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond32 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function ZDO_AnyClusterMatches
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+-2
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker34 Using cfiCommon1
          CFI (cfiPicker34) NoFunction
          CFI (cfiPicker34) Picker
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_404:
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        RET
          CFI (cfiCond32) CFA_SP SP+0
          CFI (cfiCond33) CFA_SP SP+0
          CFI (cfiPicker34) CFA_SP SP+0
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiPicker34
//  620 
//  621 /*********************************************************************
//  622  * Callback functions from ZDProfile
//  623  */
//  624 
//  625 /*********************************************************************
//  626  * @fn          ZDO_ProcessNodeDescReq
//  627  *
//  628  * @brief       This function processes and responds to the
//  629  *              Node_Desc_req message.
//  630  *
//  631  * @param       inMsg - incoming message
//  632  *
//  633  * @return      none
//  634  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  635 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock35 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  636 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine50 & 0xFFFF
//  637   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  638   NodeDescriptorFormat_t *desc = NULL;
//  639 
//  640   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_71:
        JNZ     ??ZDO_ProcessNodeDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ     ??ZDO_ProcessNodeDescReq_1
//  641   {
//  642     desc = &ZDO_Config_Node_Descriptor;
//  643   }
//  644 
//  645   if ( desc != NULL )
//  646   {
//  647     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV     ?V0,#ZDO_Config_Node_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   `??ZDP_NodeDescMsg::?relay`; Banked call to: ZDP_NodeDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessNodeDescReq_2
//  648   }
//  649   else
//  650   {
//  651     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  652               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x2
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine56 & 0xFFFF
//  653   }
??CrossCallReturnLabel_80:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  654 }
??ZDO_ProcessNodeDescReq_2:
        SJMP    ??Subroutine178_0
          CFI EndBlock cfiBlock35

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock36 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
          CFI EndBlock cfiBlock36
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine177_0:
          CFI Block cfiBlock37 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
          CFI EndBlock cfiBlock37
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine178_0:
          CFI Block cfiBlock38 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock38
//  655 
//  656 /*********************************************************************
//  657  * @fn          ZDO_ProcessPowerDescReq
//  658  *
//  659  * @brief       This function processes and responds to the
//  660  *              Node_Power_req message.
//  661  *
//  662  * @param       inMsg  - incoming request
//  663  *
//  664  * @return      none
//  665  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  666 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock39 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  667 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine50 & 0xFFFF
//  668   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  669   NodePowerDescriptorFormat_t *desc = NULL;
//  670 
//  671   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_72:
        JNZ     ??ZDO_ProcessPowerDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ     ??ZDO_ProcessPowerDescReq_1
//  672   {
//  673     desc = &ZDO_Config_Power_Descriptor;
//  674   }
//  675 
//  676   if ( desc != NULL )
//  677   {
//  678     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV     ?V0,#ZDO_Config_Power_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   `??ZDP_PowerDescMsg::?relay`; Banked call to: ZDP_PowerDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessPowerDescReq_2
//  679   }
//  680   else
//  681   {
//  682     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  683               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x3
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine56 & 0xFFFF
//  684   }
??CrossCallReturnLabel_81:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  685 }
??ZDO_ProcessPowerDescReq_2:
        SJMP    ??Subroutine178_0
          CFI EndBlock cfiBlock39

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond40 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-2
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker42 Using cfiCommon1
          CFI (cfiPicker42) NoFunction
          CFI (cfiPicker42) Picker
        MOV     A,R6
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_266:
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#-0x80
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_276:
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI (cfiCond40) CFA_SP SP+0
          CFI (cfiCond41) CFA_SP SP+0
          CFI (cfiPicker42) CFA_SP SP+0
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiPicker42

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond43 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-2
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker45 Using cfiCommon1
          CFI (cfiPicker45) NoFunction
          CFI (cfiPicker45) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_253:
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R4
        RET
          CFI (cfiCond43) CFA_SP SP+0
          CFI (cfiCond44) CFA_SP SP+0
          CFI (cfiPicker45) CFA_SP SP+0
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiPicker45
//  686 
//  687 /*********************************************************************
//  688  * @fn          ZDO_ProcessSimpleDescReq
//  689  *
//  690  * @brief       This function processes and responds to the
//  691  *              Simple_Desc_req message.
//  692  *
//  693  * @param       inMsg - incoming message (request)
//  694  *
//  695  * @return      none
//  696  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  697 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock46 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  698 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  699   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  700   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        MOV     A,R6
        LCALL   ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_362:
        ADDC    A,R7
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_95:
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
//  701   byte endPoint = inMsg->asdu[2];
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
//  702   byte free = false;
        MOV     ?V1,#0x0
//  703   byte stat = ZDP_SUCCESS;
        MOV     ?V0,#0x0
//  704 
//  705   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ      ??ZDO_ProcessSimpleDescReq_0
        MOV     A,#-0x1
        XRL     A,R1
        JNZ     ??ZDO_ProcessSimpleDescReq_1
//  706   {
//  707     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV     ?V0,#-0x7e
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  708   }
//  709   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_ProcessSimpleDescReq_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ     ??ZDO_ProcessSimpleDescReq_4
//  710   {
//  711     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??afFindSimpleDesc::?relay`; Banked call to: afFindSimpleDesc
        MOV     A,R1
        MOV     R2,A
//  712     if ( sDesc == NULL )
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_400:
        JNZ     ??ZDO_ProcessSimpleDescReq_5
//  713     {
//  714       stat = ZDP_NOT_ACTIVE;
        MOV     ?V0,#-0x7d
??ZDO_ProcessSimpleDescReq_5:
        MOV     ?V1,R2
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  715     }
//  716   }
//  717   else
//  718   {
//  719     if ( ZSTACK_ROUTER_BUILD )
//  720     {
//  721       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessSimpleDescReq_4:
        MOV     ?V0,#-0x7f
//  722     }
//  723     else if ( ZSTACK_END_DEVICE_BUILD )
//  724     {
//  725       stat = ZDP_INVALID_REQTYPE;
//  726     }
//  727   }
//  728 
//  729   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R1,?V0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??ZDP_SimpleDescMsg::?relay`; Banked call to: ZDP_SimpleDescMsg
//  730 
//  731   if ( free && sDesc )
        MOV     A,?V1
        JZ      ??ZDO_ProcessSimpleDescReq_6
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_401:
        JZ      ??ZDO_ProcessSimpleDescReq_6
//  732   {
//  733     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine84 & 0xFFFF
//  734   }
??CrossCallReturnLabel_426:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  735 }
??ZDO_ProcessSimpleDescReq_6:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock46
//  736 
//  737 /*********************************************************************
//  738  * @fn          ZDO_ProcessActiveEPReq
//  739  *
//  740  * @brief       This function processes and responds to the
//  741  *              Active_EP_req message.
//  742  *
//  743  * @param       inMsg  - incoming message (request)
//  744  *
//  745  * @return      none
//  746  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  747 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock47 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  748 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  749   byte cnt = 0;
        MOV     ?V0,#0x0
//  750   uint16 aoi;
//  751   byte stat = ZDP_SUCCESS;
        MOV     ?V1,#0x0
//  752 
//  753   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_84:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
//  754 
//  755   if ( aoi == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     A,R2
        XRL     A,?V2
        JNZ     ??ZDO_ProcessActiveEPReq_0
        MOV     A,R3
        XRL     A,?V3
??ZDO_ProcessActiveEPReq_0:
        JNZ     ??ZDO_ProcessActiveEPReq_1
//  756   {
//  757     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL   `??afNumEndPoints::?relay`; Banked call to: afNumEndPoints
        MOV     A,R1
        DEC     A
        MOV     ?V0,A
//  758     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV     R1,#0x1
        MOV     R2,#ZDOBuildBuf & 0xff
        MOV     R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   `??afEndPoints::?relay`; Banked call to: afEndPoints
        SJMP    ??ZDO_ProcessActiveEPReq_2
//  759   }
//  760   else
//  761   {
//  762     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessActiveEPReq_1:
        MOV     ?V1,#-0x80
//  763   }
//  764 
//  765   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  766                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_387:
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V4,#ZDOBuildBuf & 0xff
        MOV     ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V1
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_274:
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_382:
        MOV     R1,A
        MOV     R2,#0x5
        MOV     R3,#-0x80
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
//  767 }
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock47
//  768 
//  769 /*********************************************************************
//  770  * @fn          ZDO_ConvertOTAClusters
//  771  *
//  772  * @brief       This function will convert the over-the-air cluster list
//  773  *              format to an internal format.
//  774  *
//  775  * @param       inMsg  - incoming message (request)
//  776  *
//  777  * @return      pointer to incremented inBuf
//  778  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  779 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock48 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  780 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V1,R1
//  781   uint8 x;
//  782 
//  783   for ( x = 0; x < cnt; x++ )
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ConvertOTAClusters_0
//  784   {
//  785     // convert ota format to internal
//  786     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R6,A
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_108:
        MOV     A,R6
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R7,A
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_306:
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  787     inBuf += sizeof( uint16 );
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDO_ConvertOTAClusters_2
        INC     R3
//  788   }
??ZDO_ConvertOTAClusters_2:
        INC     ?V0
??ZDO_ConvertOTAClusters_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V1
        JC      ??ZDO_ConvertOTAClusters_1
//  789   return ( inBuf );
        LJMP    ??Subroutine178_0 & 0xFFFF
//  790 }
          CFI EndBlock cfiBlock48
//  791 
//  792 /*********************************************************************
//  793  * @fn          ZDO_ProcessMatchDescReq
//  794  *
//  795  * @brief       This function processes and responds to the
//  796  *              Match_Desc_req message.
//  797  *
//  798  * @param       inMsg  - incoming message (request)
//  799  *
//  800  * @return      none
//  801  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  802 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock49 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  803 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V12,R2
        MOV     ?V13,R3
//  804   uint8 epCnt = 0;
        MOV     ?V9,#0x0
//  805   uint8 numInClusters;
//  806   uint16 *inClusters = NULL;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine165 & 0xFFFF
//  807   uint8 numOutClusters;
//  808   uint16 *outClusters = NULL;
??CrossCallReturnLabel_284:
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  809   epList_t *epDesc;
//  810   SimpleDescriptionFormat_t *sDesc = NULL;
//  811   uint8 allocated;
//  812   uint8 *msg;
//  813   uint16 aoi;
//  814   uint16 profileID;
//  815 
//  816   // Parse the incoming message
//  817   msg = inMsg->asdu;
        LCALL   ??Subroutine190_0 & 0xFFFF
??CrossCallReturnLabel_364:
        ADDC    A,?V13
        LCALL   ?Subroutine74 & 0xFFFF
//  818   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_102:
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_588:
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  819   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_126:
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
//  820   msg += 4;
//  821 
//  822   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        XRL     A,#0x1
        JZ      ??ZDO_ProcessMatchDescReq_0
//  823   {
//  824     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  825                           ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
//  826     return;
//  827   }
//  828   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_1
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessMatchDescReq_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessMatchDescReq_2:
        JZ      ??ZDO_ProcessMatchDescReq_1
//  829   {
//  830     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  831                              ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function ZDP_EPRsp
        MOV     A,?V12
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_170:
        ADDC    A,?V13
        LCALL   ??Subroutine182_0 & 0xFFFF
??CrossCallReturnLabel_323:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        CLR     A
        MOV     ?V0,A
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
//  832     return;
        LJMP    ??ZDO_ProcessMatchDescReq_3 & 0xFFFF
//  833   }
//  834 
//  835   if ((numInClusters = *msg++) &&
//  836       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_1:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V8,A
        MOV     A,?V2
        ADD     A,#0x5
        MOV     ?V2,A
        JNC     ??ZDO_ProcessMatchDescReq_4
        INC     ?V3
??ZDO_ProcessMatchDescReq_4:
        MOV     A,?V8
        JZ      ??ZDO_ProcessMatchDescReq_5
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_185:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_351:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_390:
        JZ      ??ZDO_ProcessMatchDescReq_5
//  837   {
//  838     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine89 & 0xFFFF
//  839   }
??CrossCallReturnLabel_128:
        MOV     R1,?V8
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V2,R2
        MOV     ?V3,R3
        SJMP    ??ZDO_ProcessMatchDescReq_6
//  840   else
//  841   {
//  842     numInClusters = 0;
??ZDO_ProcessMatchDescReq_5:
        MOV     ?V8,#0x0
//  843   }
//  844 
//  845   if ((numOutClusters = *msg++) &&
//  846       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_6:
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     ?V7,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
        JZ      ??ZDO_ProcessMatchDescReq_7
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_186:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_26:
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_ProcessMatchDescReq_7
//  847   {
//  848     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine89 & 0xFFFF
//  849   }
??CrossCallReturnLabel_129:
        MOV     R1,?V7
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??ZDO_ProcessMatchDescReq_8
//  850   else
//  851   {
//  852     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_7:
        MOV     ?V7,#0x0
//  853   }
//  854 
//  855   // First count the number of endpoints that match.
//  856   epDesc = epList;
??ZDO_ProcessMatchDescReq_8:
        MOV     DPTR,#epList
        SJMP    ??ZDO_ProcessMatchDescReq_9
//  857   while ( epDesc )
//  858   {
//  859     // Don't search endpoint 0 and check if response is allowed
//  860     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  861     {
//  862       if ( epDesc->pfnDescCB )
//  863       {
//  864         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  865         allocated = TRUE;
//  866       }
//  867       else
//  868       {
//  869         sDesc = epDesc->epDesc->simpleDesc;
//  870         allocated = FALSE;
//  871       }
//  872 
//  873       // Allow specific ProfileId or Wildcard ProfileID
//  874       if ( sDesc && ( ( sDesc->AppProfId == profileID ) || ( profileID == ZDO_WILDCARD_PROFILE_ID ) ) )
//  875       {
//  876         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  877 
//  878         // Are there matching input clusters?
//  879         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  880                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  881             // Are there matching output clusters?
//  882             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  883                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  884         {
//  885           // Notify the endpoint of the match.
//  886           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  887           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  888 
//  889           if (pRspSent)
//  890           {
//  891             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  892             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  893             pRspSent->numInClusters = numInClusters;
//  894             pRspSent->numOutClusters = numOutClusters;
//  895 
//  896             if (numInClusters)
//  897             {
//  898               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  899               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  900             }
//  901             else
//  902             {
//  903               pRspSent->pInClusters = NULL;
//  904             }
//  905 
//  906             if (numOutClusters)
//  907             {
//  908               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  909               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  910             }
//  911             else
//  912             {
//  913               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_10:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  914             }
//  915 
//  916             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_11:
        ; Setup parameters for call to function osal_msg_send
        MOV     R2,?V2
        MOV     R3,?V3
        MOV     DPL,?V14
        MOV     DPH,?V15
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_347:
        INC     DPTR
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_341:
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
//  917           }
//  918 
//  919           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_12:
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     R0,?V9
        MOV     A,#ZDOBuildBuf & 0xff
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,#(ZDOBuildBuf >> 8) & 0xff
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        INC     ?V9
//  920         }
//  921       }
//  922 
//  923       if ( allocated )
??ZDO_ProcessMatchDescReq_13:
        MOV     C,?VB.0
        JNC     ??ZDO_ProcessMatchDescReq_14
//  924       {
//  925         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  926       }
//  927     }
//  928     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_14:
        MOV     DPL,?V14
        MOV     DPH,?V15
??ZDO_ProcessMatchDescReq_9:
        MOVX    A,@DPTR
        MOV     ?V14,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V15,A
        MOV     A,?V14
        ORL     A,?V15
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_15 & 0xFFFF
        MOV     DPL,?V14
        MOV     DPH,?V15
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_463:
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R4,A
        JZ      ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V14
        MOV     DPH,?V15
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V14
        MOV     DPH,?V15
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_464:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,DPL
        ORL     A,DPH
        JZ      ??ZDO_ProcessMatchDescReq_16
        ; Setup parameters for indirect call
        MOV     A,R4
        MOV     R2,A
        MOV     R1,#0x1
        LCALL   ?CALL_IND
        MOV     ?V10,R2
        MOV     ?V11,R3
        SETB    ?VB.0
        SJMP    ??ZDO_ProcessMatchDescReq_17
??ZDO_ProcessMatchDescReq_16:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V11,A
        CLR     ?VB.0
??ZDO_ProcessMatchDescReq_17:
        MOV     A,?V10
        ORL     A,?V11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_18
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_18:
        JZ      ??ZDO_ProcessMatchDescReq_19
        MOV     A,#-0x1
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_20
        MOV     A,#-0x1
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_20:
        JZ      $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_19:
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_413:
        MOV     R1,?V8
        LCALL   `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_21
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_414:
        MOV     R1,?V7
        LCALL   `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_21:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     A,?V7
        ADD     A,?V8
        CLR     C
        RLC     A
        ADD     A,#0xa
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2e
        MOVX    @DPTR,A
        MOV     DPL,?V12
        MOV     DPH,?V13
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_465:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_18:
        INC     DPTR
        MOV     A,?V8
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_6:
        MOV     A,?V7
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x5
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_313:
        MOV     A,?V8
        JZ      ??ZDO_ProcessMatchDescReq_22
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_538:
        ADDC    A,?V3
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_358:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_100:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R4,?V8
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        SJMP    ??ZDO_ProcessMatchDescReq_23
??ZDO_ProcessMatchDescReq_22:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
??ZDO_ProcessMatchDescReq_23:
        MOV     A,?V2
        ADD     A,#0x8
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_314:
        MOV     A,?V7
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_10 & 0xFFFF
        MOV     R0,?V8
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_303:
        MOV     A,?V2
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V3
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        LCALL   ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_534:
        ADDC    A,R1
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_359:
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine73 & 0xFFFF
//  929   }
??CrossCallReturnLabel_101:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R4,?V7
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        LJMP    ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
//  930 
//  931   if ( epCnt )
??ZDO_ProcessMatchDescReq_15:
        MOV     ?V0,#`?<Constant "Match Desc Req">` & 0xff
        MOV     ?V1,#(`?<Constant "Match Desc Req">` >> 8) & 0xff
        MOV     A,?V9
        JZ      ??ZDO_ProcessMatchDescReq_24
//  932   {
//  933     // Send the message if at least one match found.
//  934     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  935               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V2,#ZDOBuildBuf & 0xff
        MOV     ?V3,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     A,?V9
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_25
//  936     {
//  937 #if defined( LCD_SUPPORTED )
//  938       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Rsp Sent">` & 0xff
        MOV     R5,#(`?<Constant "Rsp Sent">` >> 8) & 0xff
        SJMP    ??ZDO_ProcessMatchDescReq_26
//  939 #endif
//  940     }
//  941   }
//  942   else
//  943   {
//  944     // No match found
//  945     if (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi))
??ZDO_ProcessMatchDescReq_24:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_27
//  946     {
//  947       // send response message with match length = 0
//  948       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  949                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V2,#ZDOBuildBuf & 0xff
        MOV     ?V3,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
//  950 #if defined( LCD_SUPPORTED )
//  951       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Rsp Non Matched">` & 0xff
        MOV     R5,#(`?<Constant "Rsp Non Matched">` >> 8) & 0xff
        SJMP    ??ZDO_ProcessMatchDescReq_26
//  952 #endif
//  953     }
//  954     else
//  955     {
//  956       // no response mesage for broadcast message
//  957 #if defined( LCD_SUPPORTED )
//  958       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
??ZDO_ProcessMatchDescReq_27:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Non Matched">` & 0xff
        MOV     R5,#(`?<Constant "Non Matched">` >> 8) & 0xff
??ZDO_ProcessMatchDescReq_26:
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??HalLcdWriteScreen::?relay`; Banked call to: HalLcdWriteScreen
//  959 #endif
//  960     }
//  961   }
//  962 
//  963   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_25:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_391:
        JZ      ??ZDO_ProcessMatchDescReq_28
//  964   {
//  965     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine200_0 & 0xFFFF
//  966   }
??CrossCallReturnLabel_415:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  967 
//  968   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_28:
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_402:
        JZ      ??ZDO_ProcessMatchDescReq_3
//  969   {
//  970     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine84 & 0xFFFF
//  971   }
??CrossCallReturnLabel_427:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  972 }
??ZDO_ProcessMatchDescReq_3:
        MOV     A,#0x4
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock49

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine156:
          CFI Block cfiCond50 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_347
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_342
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond51) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond51) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond51) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond51) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond51) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond51) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond51) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond51) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond51) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-4
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_343
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-4
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_344
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-4
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDO_UpdateNwkStatus
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_340
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-4
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_341
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-4
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker56 Using cfiCommon1
          CFI (cfiPicker56) NoFunction
          CFI (cfiPicker56) Picker
        MOVX    A,@DPTR
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiPicker56
        REQUIRE ??Subroutine179_0
        ; // Fall through to label ??Subroutine179_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine179_0:
          CFI Block cfiCond57 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_346
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond58) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond58) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond58) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond58) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-2
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_342
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-4
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_343
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-4
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_344
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-4
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_UpdateNwkStatus
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_340
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-4
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_341
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-4
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker64 Using cfiCommon1
          CFI (cfiPicker64) NoFunction
          CFI (cfiPicker64) Picker
        MOV     R0,A
        INC     DPTR
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiPicker64
        REQUIRE ??Subroutine180_0
        ; // Fall through to label ??Subroutine180_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine180_0:
          CFI Block cfiCond65 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_345
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function ZDO_ProcessParentAnnce
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond66) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond66) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond66) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond66) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond66) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+-2
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond67) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-2
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_342
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-4
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_343
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-4
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_344
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+-4
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_UpdateNwkStatus
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_340
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-4
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_341
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond72) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond72) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond72) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond72) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-4
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker73 Using cfiCommon1
          CFI (cfiPicker73) NoFunction
          CFI (cfiPicker73) Picker
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI (cfiCond65) CFA_SP SP+0
          CFI (cfiCond66) CFA_SP SP+0
          CFI (cfiCond67) CFA_SP SP+0
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond70) CFA_SP SP+-2
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond72) CFA_SP SP+-2
          CFI (cfiPicker73) CFA_SP SP+0
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiPicker73

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond74 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_313
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond75) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond75) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond75) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond75) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond75) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+-2
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDO_ProcessParentAnnce
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker80 Using cfiCommon1
          CFI (cfiPicker80) NoFunction
          CFI (cfiPicker80) Picker
        MOV     DPL,A
        CLR     A
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiPicker80
        REQUIRE ??Subroutine181_0
        ; // Fall through to label ??Subroutine181_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine181_0:
          CFI Block cfiCond81 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_311
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDO_ProcessUserDescSet
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond83) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond83) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond83) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond83) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond85) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond85) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond85) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond85) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond85) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond86) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDO_ProcessParentAnnce
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond88) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond88) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond88) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker89 Using cfiCommon1
          CFI (cfiPicker89) NoFunction
          CFI (cfiPicker89) Picker
        ADDC    A,?V3
        MOV     DPH,A
        RET
          CFI (cfiCond81) CFA_SP SP+0
          CFI (cfiCond82) CFA_SP SP+0
          CFI (cfiCond83) CFA_SP SP+0
          CFI (cfiCond84) CFA_SP SP+0
          CFI (cfiCond85) CFA_SP SP+-1
          CFI (cfiCond86) CFA_SP SP+-1
          CFI (cfiCond87) CFA_SP SP+0
          CFI (cfiCond88) CFA_SP SP+0
          CFI (cfiPicker89) CFA_SP SP+0
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiPicker89

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond90 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker92 Using cfiCommon1
          CFI (cfiPicker92) NoFunction
          CFI (cfiPicker92) Picker
        MOV     A,?V12
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_267:
        ADDC    A,?V13
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V2,A
        MOV     R0,#?V2
        RET
          CFI (cfiCond90) CFA_SP SP+0
          CFI (cfiCond91) CFA_SP SP+0
          CFI (cfiPicker92) CFA_SP SP+0
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiPicker92

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond93 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_128
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond94) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond94) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond94) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond94) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond94) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-2
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker95 Using cfiCommon1
          CFI (cfiPicker95) NoFunction
          CFI (cfiPicker95) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R2,?V2
        MOV     R3,?V3
        RET
          CFI (cfiCond93) CFA_SP SP+0
          CFI (cfiCond94) CFA_SP SP+0
          CFI (cfiPicker95) CFA_SP SP+0
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiPicker95

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond96 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond97) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond97) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond97) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond97) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond97) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-2
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond98) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond98) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond98) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-2
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker99 Using cfiCommon1
          CFI (cfiPicker99) NoFunction
          CFI (cfiPicker99) Picker
        MOV     A,?V12
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V13
        MOV     R5,A
        MOV     A,?V12
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_277:
        ADDC    A,?V13
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R2,#0x6
        MOV     R3,#-0x80
        RET
          CFI (cfiCond96) CFA_SP SP+0
          CFI (cfiCond97) CFA_SP SP+0
          CFI (cfiCond98) CFA_SP SP+0
          CFI (cfiPicker99) CFA_SP SP+0
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiPicker99

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond100 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-2
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker102 Using cfiCommon1
          CFI (cfiPicker102) NoFunction
          CFI (cfiPicker102) Picker
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI (cfiCond100) CFA_SP SP+0
          CFI (cfiCond101) CFA_SP SP+0
          CFI (cfiPicker102) CFA_SP SP+0
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiPicker102

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond103 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_324
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function ZDMatchSendState
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-2
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker105 Using cfiCommon1
          CFI (cfiPicker105) NoFunction
          CFI (cfiPicker105) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiPicker105
        REQUIRE ??Subroutine182_0
        ; // Fall through to label ??Subroutine182_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine182_0:
          CFI Block cfiCond106 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_323
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+-2
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDMatchSendState
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker109 Using cfiCommon1
          CFI (cfiPicker109) NoFunction
          CFI (cfiPicker109) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiPicker109
        REQUIRE ??Subroutine183_0
        ; // Fall through to label ??Subroutine183_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine183_0:
          CFI Block cfiCond110 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_319
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-2
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-2
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDMatchSendState
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-2
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker117 Using cfiCommon1
          CFI (cfiPicker117) NoFunction
          CFI (cfiPicker117) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI (cfiCond110) CFA_SP SP+0
          CFI (cfiCond111) CFA_SP SP+0
          CFI (cfiCond112) CFA_SP SP+0
          CFI (cfiCond113) CFA_SP SP+0
          CFI (cfiCond114) CFA_SP SP+0
          CFI (cfiCond115) CFA_SP SP+0
          CFI (cfiCond116) CFA_SP SP+0
          CFI (cfiPicker117) CFA_SP SP+0
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiPicker117
//  973 
//  974 #if defined ( REFLECTOR )
//  975 /*********************************************************************
//  976  * @fn      ZDO_ProcessBindUnbindReq()
//  977  *
//  978  * @brief   Called to process a Bind or Unbind Request message.
//  979  *
//  980  * @param   inMsg  - incoming message (request)
//  981  * @param   pReq - place to put parsed information
//  982  *
//  983  * @return  none
//  984  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  985 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock118 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
//  986 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_GetEmptyPendingBindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, bindAddrIndexGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R4
        MOV     ?V1,R5
//  987   zAddrType_t SourceAddr;       // Binding Source addres
//  988   byte bindStat;
//  989 
//  990   SourceAddr.addrMode = Addr64Bit;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  991   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  992 
//  993   // If the local device is not the primary binding cache
//  994   // check the src address of the bind request.
//  995   // If it is not the local device's extended address
//  996   // discard the request.
//  997   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
//  998         (pReq->dstAddress.addrMode != Addr64Bit &&
//  999          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,R6
        ADD     A,#0xf
        MOV     ?V14,A
        CLR     A
        ADDC    A,R7
        MOV     ?V15,A
        MOV     A,R6
        ADD     A,#0xe
        MOV     ?V12,A
        CLR     A
        ADDC    A,R7
        MOV     ?V13,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V10,A
        CLR     A
        ADDC    A,R7
        MOV     ?V11,A
        MOV     A,R6
        ADD     A,#0xc
        MOV     ?V8,A
        CLR     A
        ADDC    A,R7
        MOV     ?V9,A
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_0
        MOV     A,?V0
        ADD     A,#0x13
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x3
        XRL     A,R0
        JZ      ??ZDO_ProcessBindUnbindReq_1
        MOV     A,#0x1
        XRL     A,R0
        JZ      ??ZDO_ProcessBindUnbindReq_1
// 1000   {
// 1001     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1002   }
// 1003   else
// 1004   {
// 1005     // Check source & destination endpoints
// 1006     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
// 1007         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1008             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV     A,?V0
        ADD     A,#0x8
        MOV     ?V6,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V7,A
        MOV     DPL,?V6
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        JZ      ??ZDO_ProcessBindUnbindReq_3
        MOV     A,#-0x1
        XRL     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_3
        MOV     A,?V0
        ADD     A,#0x14
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V3,A
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ProcessBindUnbindReq_4
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R0,A
        JZ      ??ZDO_ProcessBindUnbindReq_3
        MOV     A,#-0x1
        XRL     A,R0
        JNZ     ??ZDO_ProcessBindUnbindReq_4
// 1009     {
// 1010       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1011     }
// 1012     else
// 1013     {
// 1014       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        MOV     A,?V0
        ADD     A,#0x9
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V5,A
        MOV     A,?V0
        ADD     A,#0xb
        MOV     R6,A
        CLR     A
        ADDC    A,?V1
        MOV     R7,A
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        XRL     A,#0x21
        JNZ     ??ZDO_ProcessBindUnbindReq_5
        INC     DPTR
        MOVX    A,@DPTR
??ZDO_ProcessBindUnbindReq_5:
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_6 & 0xFFFF
// 1015       {
// 1016         // Assume the table is full
// 1017         bindStat = ZDP_TABLE_FULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x74
        LCALL   ?Subroutine26 & 0xFFFF
// 1018 
// 1019 #if defined( APP_TP ) || defined( APP_TP2 )
// 1020         // For ZigBee Conformance Testing
// 1021         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1022 #endif
// 1023         {
// 1024 #if !defined ( ZDP_BIND_SKIP_VALIDATION )
// 1025           uint16 nwkAddr;
// 1026 
// 1027           // Verifies that a valid NWK address exists for the device
// 1028           // before creating a Binding entry. If NWK address does not
// 1029           // exist the request is sent out and the BindReq is saved, to
// 1030           // create the Bind Entry once the NwkAddrRsp is received
// 1031           if ( ( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1032                ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE ) )
??CrossCallReturnLabel_27:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP102_8
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??APSME_LookupNwkAddr::?relay`; Banked call to: APSME_LookupNwkAddr
        MOV     A,R1
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
// 1033           {
// 1034             // find an empty bind slot in the pending Bind Req list
// 1035             ZDO_PendingBindReq_t *pPendingBind;
// 1036 
// 1037             if ( ( pPendingBind = ZDApp_GetEmptyPendingBindReq() ) != NULL )
        ; Setup parameters for call to function ZDApp_GetEmptyPendingBindReq
        LCALL   `??ZDApp_GetEmptyPendingBindReq::?relay`; Banked call to: ZDApp_GetEmptyPendingBindReq
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_8 & 0xFFFF
// 1038             {
// 1039               // copy the received request into the empty slot and all required info
// 1040               osal_memcpy( &(pPendingBind->bindReq), pReq, sizeof( ZDO_BindUnbindReq_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,?V0
        MOV     ?V5,?V1
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     R4,#0x15
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1041 
// 1042               pPendingBind->srcAddr = inMsg->srcAddr;
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOV     A,?V2
        ADD     A,#0x15
        MOV     R4,A
        CLR     A
        ADDC    A,?V3
        MOV     R5,A
        MOV     A,#0x9
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1043               pPendingBind->securityUse = inMsg->SecurityUse;
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1e
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_315:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1044               pPendingBind->transSeq = inMsg->TransSeq;
        MOV     DPL,?V14
        MOV     DPH,?V15
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1f
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_316:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1045               pPendingBind->age = MAX_TIME_ADDR_REQ;
        MOV     A,?V2
        ADD     A,#0x20
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_317:
        MOV     A,#0x5
        MOVX    @DPTR,A
// 1046 
// 1047               // create an entry in Address Manager
// 1048               ( void )bindAddrIndexGet( &(pReq->dstAddress) );
        ; Setup parameters for call to function bindAddrIndexGet
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??bindAddrIndexGet::?relay`; Banked call to: bindAddrIndexGet
// 1049 
// 1050               ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV     R5,#0x0
        MOV     R4,#0x0
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??ZDP_NwkAddrReq::?relay`; Banked call to: ZDP_NwkAddrReq
// 1051 
// 1052               osal_start_timerEx( ZDAppTaskID, ZDO_PENDING_BIND_REQ_EVT,
// 1053                                   AGE_OUT_PEND_BIND_REQ_DELAY );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R2,#0x0
        MOV     R3,#0x10
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1054               return;
        LJMP    ??ZDO_ProcessBindUnbindReq_9 & 0xFFFF
// 1055             }
// 1056           }
// 1057           // Add Bind entry
// 1058           else if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1059                                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function APSME_BindRequest
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine183_0 & 0xFFFF
// 1060           {
// 1061             // valid entry
// 1062             bindStat = ZDP_SUCCESS;
// 1063 
// 1064             // Notify to save info into NV
// 1065             ZDApp_NVUpdate();
// 1066           }
// 1067 #else // ZDP_BIND_SKIP_VALIDATION  is defined
// 1068           // Create binding entry first independently of existance of  valid NWK addres
// 1069           // if NWK address does not exist a request is sent out
// 1070           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1071                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
// 1072           {
// 1073             uint16 nwkAddr;
// 1074 
// 1075             // valid entry
// 1076             bindStat = ZDP_SUCCESS;
// 1077 
// 1078             // Notify to save info into NV
// 1079             ZDApp_NVUpdate();
// 1080 
// 1081             // Check for the destination address
// 1082             if ( pReq->dstAddress.addrMode == Addr64Bit )
// 1083             {
// 1084               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
// 1085               {
// 1086                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
// 1087               }
// 1088             }
// 1089           }
// 1090 #endif
// 1091         }
// 1092       }
??CrossCallReturnLabel_319:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,?V4
        MOV     DPH,?V5
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_416:
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??APSME_BindRequest::?relay`; Banked call to: APSME_BindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_8
        SJMP    ??ZDO_ProcessBindUnbindReq_10
// 1093       else // Unbind_req
// 1094       {
// 1095         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1096                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_6:
        ; Setup parameters for call to function APSME_UnBindRequest
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_320:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,?V4
        MOV     DPH,?V5
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_417:
        LCALL   `??APSME_UnBindRequest::?relay`; Banked call to: APSME_UnBindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_11
// 1097         {
// 1098           bindStat = ZDP_SUCCESS;
??ZDO_ProcessBindUnbindReq_10:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1099 
// 1100           // Notify to save info into NV
// 1101           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
        SJMP    ??ZDO_ProcessBindUnbindReq_8
// 1102         }
// 1103         else
// 1104           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_11:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX    @DPTR,A
// 1105       }
// 1106     }
// 1107   }
// 1108 
// 1109   // Send back a response message
// 1110   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1111                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1112                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_8:
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPL,?V12
        MOV     DPH,?V13
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_321:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x80
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x1
        MOV     R4,?V10
        MOV     R5,?V11
        MOV     R2,?V14
        MOV     R3,?V15
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1113 }
??ZDO_ProcessBindUnbindReq_9:
        MOV     A,#0xc
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock118
// 1114 #endif // REFLECTOR
// 1115 
// 1116 /*********************************************************************
// 1117  * @fn      ZDO_UpdateAddrManager
// 1118  *
// 1119  * @brief   Update the Address Manager.
// 1120  *
// 1121  * @param   nwkAddr - network address
// 1122  * @param   extAddr - extended address
// 1123  *
// 1124  * @return  none
// 1125  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1126 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock119 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1127 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1128   AddrMgrEntry_t addrEntry;
// 1129 
// 1130   // Update the address manager
// 1131   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1132   addrEntry.nwkAddr = nwkAddr;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine188_0 & 0xFFFF
// 1133   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_352:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 1134   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 1135 }
        MOV     A,#0xd
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock119
// 1136 
// 1137 /*********************************************************************
// 1138  * @fn      ZDO_ProcessServerDiscReq
// 1139  *
// 1140  * @brief   Process the Server_Discovery_req message.
// 1141  *
// 1142  * @param   inMsg  - incoming message (request)
// 1143  *
// 1144  * @return  none
// 1145  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1146 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock120 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1147 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine70 & 0xFFFF
// 1148   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1149   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
??CrossCallReturnLabel_326:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX    A,@DPTR
        ANL     A,R0
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,R1
        MOV     ?V1,A
// 1150 
// 1151   if ( matchMask )
        MOV     A,?V0
        ORL     A,?V1
        JZ      ??ZDO_ProcessServerDiscReq_0
// 1152   {
// 1153     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1154                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine107 & 0xFFFF
// 1155   }
??CrossCallReturnLabel_388:
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,R6
        LCALL   ??Subroutine192_0 & 0xFFFF
??CrossCallReturnLabel_369:
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        ADD     A,#0xf
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV     R1,A
        LCALL   `??ZDP_ServerDiscRsp::?relay`; Banked call to: ZDP_ServerDiscRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1156 }
??ZDO_ProcessServerDiscReq_0:
        LJMP    ??Subroutine178_0 & 0xFFFF
          CFI EndBlock cfiBlock120

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond121 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-2
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker123 Using cfiCommon1
          CFI (cfiPicker123) NoFunction
          CFI (cfiPicker123) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_280:
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiPicker123
        REQUIRE ??Subroutine184_0
        ; // Fall through to label ??Subroutine184_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine184_0:
          CFI Block cfiCond124 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_328
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-2
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker127 Using cfiCommon1
          CFI (cfiPicker127) NoFunction
          CFI (cfiPicker127) Picker
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_378:
        RET
          CFI (cfiCond124) CFA_SP SP+0
          CFI (cfiCond125) CFA_SP SP+0
          CFI (cfiCond126) CFA_SP SP+0
          CFI (cfiPicker127) CFA_SP SP+0
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiPicker127
// 1157 
// 1158 /*********************************************************************
// 1159  * Call Back Functions from APS  - API
// 1160  */
// 1161 
// 1162 /*********************************************************************
// 1163  * @fn          ZDO_EndDeviceTimeoutCB
// 1164  *
// 1165  * @brief       This function handles the binding timer for the End
// 1166  *              Device Bind command.
// 1167  *
// 1168  * @param       none
// 1169  *
// 1170  * @return      none
// 1171  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1172 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock128 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1173 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1174 #if defined ( REFLECTOR )
// 1175   byte stat;
// 1176   if ( ZDO_EDBind )
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_392:
        JNZ     $+5
        LJMP    ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1177   {
// 1178     stat = ZDO_EDBind->status;
// 1179 
// 1180     // Send the response message to the first sent
// 1181     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1182                         stat, ZDO_EDBind->SecurityUse );
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x16
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_203:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_68:
        MOV     DPH,A
        MOV     DPL,R0
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_67:
        XCH     A,R0
        ADD     A,#0x15
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_324:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x1
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        ADD     A,R1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R1,#0x1
        MOV     R2,#`?<Constant "End Device Bind">` & 0xff
        MOV     R3,#(`?<Constant "End Device Bind">` >> 8) & 0xff
        LCALL   `??HalLcdWriteString::?relay`; Banked call to: HalLcdWriteString
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,#0x2
        JNZ     ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R2,#`?<Constant "Success Sent">` & 0xff
        MOV     R3,#(`?<Constant "Success Sent">` >> 8) & 0xff
        SJMP    ??ZDO_EndDeviceTimeoutCB_2
??ZDO_EndDeviceTimeoutCB_1:
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R2,#`?<Constant "Timeout">` & 0xff
        MOV     R3,#(`?<Constant "Timeout">` >> 8) & 0xff
??ZDO_EndDeviceTimeoutCB_2:
        LCALL   `??HalLcdWriteString::?relay`; Banked call to: HalLcdWriteString
// 1183 
// 1184     ZDO_RemoveEndDeviceBind();
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine197_0 & 0xFFFF
// 1185   }
??CrossCallReturnLabel_393:
        JZ      ??ZDO_EndDeviceTimeoutCB_0
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x10
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_332:
        JZ      ??ZDO_EndDeviceTimeoutCB_3
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_3:
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_484:
        ADD     A,#0x13
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_333:
        JZ      ??ZDO_EndDeviceTimeoutCB_4
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_4:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_418:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1186 #endif  // REFLECTOR
// 1187 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock128

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond129 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_332
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-2
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function ZDO_RemoveMatchMemory
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond131) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond131) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond131) CFA_SP SP+-7
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDO_RemoveMatchMemory
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond132) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond132) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond132) CFA_SP SP+-7
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDO_RemoveMatchMemory
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond133) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond133) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond133) CFA_SP SP+-7
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ZDO_RemoveMatchMemory
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond134) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond134) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond134) CFA_SP SP+-7
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ZDO_RemoveMatchMemory
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond135) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond135) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond135) CFA_SP SP+-7
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDO_RemoveMatchMemory
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond136) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond136) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond136) CFA_SP SP+-7
          CFI Block cfiPicker137 Using cfiCommon1
          CFI (cfiPicker137) NoFunction
          CFI (cfiPicker137) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiPicker137
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine185_0:
          CFI Block cfiCond138 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_329
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_CopyMatchInfo
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-2
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-2
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ZDO_RemoveMatchMemory
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond143) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond143) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond143) CFA_SP SP+-7
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ZDO_RemoveMatchMemory
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond144) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond144) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond144) CFA_SP SP+-7
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDO_RemoveMatchMemory
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond145) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond145) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond145) CFA_SP SP+-7
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDO_RemoveMatchMemory
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond146) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond146) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond146) CFA_SP SP+-7
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDO_RemoveMatchMemory
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond147) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond147) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond147) CFA_SP SP+-7
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_RemoveMatchMemory
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond148) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond148) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond148) CFA_SP SP+-7
          CFI Block cfiPicker149 Using cfiCommon1
          CFI (cfiPicker149) NoFunction
          CFI (cfiPicker149) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_521:
        MOV     A,R2
        ORL     A,R3
        RET
          CFI (cfiCond138) CFA_SP SP+0
          CFI (cfiCond139) CFA_SP SP+0
          CFI (cfiCond140) CFA_SP SP+0
          CFI (cfiCond141) CFA_SP SP+0
          CFI (cfiCond142) CFA_SP SP+0
          CFI (cfiCond143) CFA_SP SP+-5
          CFI (cfiCond144) CFA_SP SP+-5
          CFI (cfiCond145) CFA_SP SP+-5
          CFI (cfiCond146) CFA_SP SP+-5
          CFI (cfiCond147) CFA_SP SP+-5
          CFI (cfiCond148) CFA_SP SP+-5
          CFI (cfiPicker149) CFA_SP SP+0
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiPicker149

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond150 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker152 Using cfiCommon1
          CFI (cfiPicker152) NoFunction
          CFI (cfiPicker152) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_513:
        RET
          CFI (cfiCond150) CFA_SP SP+0
          CFI (cfiCond151) CFA_SP SP+0
          CFI (cfiPicker152) CFA_SP SP+0
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiPicker152
// 1188 
// 1189 /*********************************************************************
// 1190  * Optional Management Messages
// 1191  */
// 1192 
// 1193 /*********************************************************************
// 1194  * @fn          ZDO_ProcessMgmtLqiReq
// 1195  *
// 1196  * @brief       This function handles parsing the incoming Management
// 1197  *              LQI request and generate the response.
// 1198  *
// 1199  *   Note:      This function will limit the number of items returned
// 1200  *              to ZDO_MAX_LQI_ITEMS items.
// 1201  *
// 1202  * @param       inMsg - incoming message (request)
// 1203  *
// 1204  * @return      none
// 1205  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1206 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock153 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1207 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 66, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 66, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 37
        MOV     A,#-0x25
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 61)
        MOV     ?V14,R2
        MOV     ?V15,R3
// 1208   byte x;
// 1209   byte index;
// 1210   byte numItems;
// 1211   byte maxItems;
// 1212   ZDP_MgmtLqiItem_t* table = NULL;
        MOV     ?V12,#0x0
        MOV     ?V13,#0x0
// 1213   ZDP_MgmtLqiItem_t* item;
// 1214   neighborEntry_t    entry;
// 1215   byte aItems;
// 1216   associated_devices_t *aDevice;
// 1217   AddrMgrEntry_t  nwkEntry;
// 1218   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine190_0 & 0xFFFF
??CrossCallReturnLabel_365:
        ADDC    A,?V15
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_342:
        MOV     ?V4,A
// 1219 
// 1220   // Get the number of neighbor items
// 1221   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x64
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1222 
// 1223   // Get the number of associated items
// 1224   aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
        ; Setup parameters for call to function AssocCount
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   `??AssocCount::?relay`; Banked call to: AssocCount
        MOV     A,R2
        MOV     ?V2,A
// 1225 
// 1226   // Total number of items
// 1227   maxItems += aItems;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,R2
        MOVX    @DPTR,A
// 1228 
// 1229   // Start with the supplied index
// 1230   if ( maxItems > StartIndex )
        MOV     R0,A
        MOV     A,?V4
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_0 & 0xFFFF
// 1231   {
// 1232     numItems = maxItems - StartIndex;
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V4
        MOV     ?V1,A
// 1233 
// 1234     // limit the size of the list
// 1235     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR     C
        SUBB    A,#0x4
        JC      ??ZDO_ProcessMgmtLqiReq_1
// 1236       numItems = ZDO_MAX_LQI_ITEMS;
        MOV     ?V1,#0x3
// 1237 
// 1238     // Allocate the memory to build the table
// 1239     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1240               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V1
        MOV     B,#0x1a
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V12,R2
        MOV     ?V13,R3
// 1241 
// 1242     if ( table != NULL )
        MOV     A,R2
        ORL     A,?V13
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
// 1243     {
// 1244       x = 0;
        MOV     ?V3,#0x0
// 1245       item = table;
        MOV     R6,?V12
        MOV     R7,?V13
// 1246       index = StartIndex;
        MOV     ?V0,?V4
        LJMP    ??ZDO_ProcessMgmtLqiReq_3 & 0xFFFF
// 1247 
// 1248       // Loop through associated items and build list
// 1249       for ( ; x < numItems; x++ )
// 1250       {
// 1251         if ( index < aItems )
// 1252         {
// 1253           // get next associated device
// 1254           aDevice = AssocFindDevice( index++ );
// 1255 
// 1256           // set basic fields
// 1257           item->panID   = _NIB.nwkPanId;
// 1258           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1259           item->nwkAddr = aDevice->shortAddr;
// 1260           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1261           item->depth   = 0xFF;
// 1262           item->lqi     = aDevice->linkInfo.rxLqi;
// 1263 
// 1264           // set extented address
// 1265           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1266           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1267 
// 1268           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1269           {
// 1270             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1271           }
// 1272           else
// 1273           {
// 1274             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_4:
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 1275           }
// 1276 
// 1277           // use association info to set other fields
// 1278           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_5:
        MOV     A,?V6
        ADD     A,#0x4
        MOV     R0,A
        CLR     A
        ADDC    A,?V7
        MOV     R1,A
        MOV     A,R6
        ADD     A,#0x16
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        ADD     A,#0x15
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0x14
        MOV     ?V10,A
        CLR     A
        ADDC    A,R7
        MOV     ?V11,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        JNZ     ??ZDO_ProcessMgmtLqiReq_6
// 1279           {
// 1280             if (  aDevice->shortAddr == 0 )
        MOV     DPL,?V6
        MOV     DPH,?V7
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_394:
        MOV     DPL,?V10
        MOV     DPH,?V11
        JNZ     ??ZDO_ProcessMgmtLqiReq_7
// 1281             {
// 1282               item->devType = ZDP_MGMT_DT_COORD;
        CLR     A
        MOVX    @DPTR,A
// 1283               item->depth = 0;
        SJMP    ??ZDO_ProcessMgmtLqiReq_8
// 1284             }
// 1285             else
// 1286             {
// 1287               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_7:
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1288               item->depth = _NIB.nodeDepth - 1;
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        DEC     A
??ZDO_ProcessMgmtLqiReq_8:
        MOV     DPL,?V8
        MOV     DPH,?V9
// 1289             }
// 1290 
// 1291             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1292             item->relation = ZDP_MGMT_REL_PARENT;
// 1293           }
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_235:
        MOV     A,#0x2
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_287:
        CLR     A
        SJMP    ??ZDO_ProcessMgmtLqiReq_9
// 1294           else
// 1295           {
// 1296             // If not parent, then it's a child
// 1297             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_6:
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        INC     A
        MOV     DPL,?V8
        MOV     DPH,?V9
        LCALL   ?Subroutine43 & 0xFFFF
// 1298 
// 1299             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_61:
        CLR     C
        SUBB    A,#0x3
        MOV     DPL,?V10
        MOV     DPH,?V11
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_10 & 0xFFFF
// 1300             {
// 1301               item->devType = ZDP_MGMT_DT_ENDDEV;
        MOV     A,#0x2
        LCALL   ?Subroutine43 & 0xFFFF
// 1302 
// 1303               if ( aDevice->nodeRelation == CHILD_RFD )
// 1304               {
// 1305                 item->rxOnIdle = FALSE;
// 1306               }
// 1307               else
// 1308               {
// 1309                 item->rxOnIdle = TRUE;
// 1310               }
// 1311             }
??CrossCallReturnLabel_62:
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_11 & 0xFFFF
// 1312             else
// 1313             {
// 1314               item->devType = ZDP_MGMT_DT_ROUTER;
// 1315 
// 1316               if ( aDevice->nodeRelation == CHILD_FFD )
// 1317               {
// 1318                 item->rxOnIdle = FALSE;
// 1319               }
// 1320               else
// 1321               {
// 1322                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_12:
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,#0x1
// 1323               }
??ZDO_ProcessMgmtLqiReq_13:
        LCALL   ?Subroutine166 & 0xFFFF
// 1324             }
// 1325 
// 1326             item->relation = ZDP_MGMT_REL_CHILD;
??CrossCallReturnLabel_288:
        MOV     A,#0x1
??ZDO_ProcessMgmtLqiReq_9:
        MOVX    @DPTR,A
// 1327           }
// 1328 
// 1329           item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_14
        INC     R7
??ZDO_ProcessMgmtLqiReq_14:
        INC     ?V3
??ZDO_ProcessMgmtLqiReq_3:
        MOV     A,?V3
        CLR     C
        SUBB    A,?V1
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_15 & 0xFFFF
        MOV     A,?V0
        CLR     C
        SUBB    A,?V2
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_16 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV     R2,?V0
        MOV     R3,#0x0
        LCALL   `??AssocFindDevice::?relay`; Banked call to: AssocFindDevice
        MOV     ?V6,R2
        MOV     ?V7,R3
        INC     ?V0
        MOV     DPTR,#_NIB + 33
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_11:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V6
        MOV     DPH,?V7
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_456:
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_9:
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_175:
        MOV     A,#-0x1
        MOVX    @DPTR,A
        MOV     DPL,?V6
        MOV     DPH,?V7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_220:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V6
        MOV     DPH,?V7
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_457:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_471:
        MOV     A,R6
        ADD     A,#0xa
        MOV     ?V10,A
        CLR     A
        ADDC    A,R7
        MOV     ?V11,A
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_4 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LJMP    ??ZDO_ProcessMgmtLqiReq_5 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_10:
        MOV     A,#0x1
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_63:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_12 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_11:
        MOV     DPL,R4
        MOV     DPH,R5
        CLR     A
        LJMP    ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
// 1330         }
// 1331         else
// 1332         {
// 1333           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_16:
        MOV     A,?V2
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ProcessMgmtLqiReq_17
// 1334             // Start with 1st neighbor
// 1335             index = 0;
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ProcessMgmtLqiReq_18
// 1336           else
// 1337             // Start with >1st neighbor
// 1338             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_17:
        MOV     A,?V4
        CLR     C
        SUBB    A,?V2
        MOV     ?V0,A
        SJMP    ??ZDO_ProcessMgmtLqiReq_18
// 1339           break;
// 1340         }
// 1341       }
// 1342 
// 1343       // Loop through neighbor items and finish list
// 1344       for ( ; x < numItems; x++ )
// 1345       {
// 1346         // Add next neighbor table item
// 1347         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1348 
// 1349         // set ZDP_MgmtLqiItem_t fields
// 1350         item->panID    = entry.panId;
// 1351         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1352         osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
// 1353         item->nwkAddr  = entry.neighborAddress;
// 1354         item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1355         item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1356         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1357         item->depth    = 0xFF;
// 1358         item->lqi      = entry.linkInfo.rxLqi;
// 1359 
// 1360         if ( item->nwkAddr == 0 )
// 1361         {
// 1362           item->devType = ZDP_MGMT_DT_COORD;
// 1363         }
// 1364         else
// 1365         {
// 1366           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_19:
        MOV     A,#0x1
??ZDO_ProcessMgmtLqiReq_20:
        MOVX    @DPTR,A
// 1367         }
// 1368 
// 1369         item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_21
        INC     R7
??ZDO_ProcessMgmtLqiReq_21:
        INC     ?V3
??ZDO_ProcessMgmtLqiReq_15:
        MOV     A,?V3
        CLR     C
        SUBB    A,?V1
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_18:
        ; Setup parameters for call to function NLME_GetRequest
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,?V0
        MOV     R3,#0x0
        MOV     R1,#-0x79
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        INC     ?V0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_12:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
        MOV     A,R6
        LCALL   ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_535:
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_419:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_353:
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x3
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_10:
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#-0x1
        MOVX    @DPTR,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_221:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x14
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_395:
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_19 & 0xFFFF
        CLR     A
        LJMP    ??ZDO_ProcessMgmtLqiReq_20 & 0xFFFF
// 1370       }
// 1371     }
// 1372   }
// 1373   else
// 1374   {
// 1375     numItems = 0;
??ZDO_ProcessMgmtLqiReq_0:
        MOV     ?V1,#0x0
// 1376   }
// 1377 
// 1378   // Send response
// 1379   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1380                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_2:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 62)
        MOV     R0,#?V12
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 64)
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 65)
        MOV     A,?V4
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 66)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V14
        LCALL   ??Subroutine192_0 & 0xFFFF
??CrossCallReturnLabel_370:
        ADDC    A,?V15
        MOV     R3,A
        MOV     A,?V14
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_179:
        ADDC    A,?V15
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtLqiRsp::?relay`; Banked call to: ZDP_MgmtLqiRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 61)
// 1381 
// 1382   if ( table )
        MOV     A,?V12
        ORL     A,?V13
        JZ      ??ZDO_ProcessMgmtLqiReq_22
// 1383   {
// 1384     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V12
        MOV     R3,?V13
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1385   }
// 1386 }
??ZDO_ProcessMgmtLqiReq_22:
        MOV     A,#0x25
          CFI EndBlock cfiBlock153
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock154 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Valid
          CFI EndBlock cfiBlock154
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine186_0:
          CFI Block cfiBlock155 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock155

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond156 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_220
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond157) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond157) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond157) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond157) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond157) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker158 Using cfiCommon1
          CFI (cfiPicker158) NoFunction
          CFI (cfiPicker158) Picker
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI (cfiCond156) CFA_SP SP+-1
          CFI (cfiCond157) CFA_SP SP+-1
          CFI (cfiPicker158) CFA_SP SP+0
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiPicker158

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond159 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_342
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker162 Using cfiCommon1
          CFI (cfiPicker162) NoFunction
          CFI (cfiPicker162) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiPicker162
        REQUIRE ??Subroutine187_0
        ; // Fall through to label ??Subroutine187_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine187_0:
          CFI Block cfiCond163 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_340
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond164) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond164) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker168 Using cfiCommon1
          CFI (cfiPicker168) NoFunction
          CFI (cfiPicker168) Picker
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_348:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond163) CFA_SP SP+0
          CFI (cfiCond164) CFA_SP SP+0
          CFI (cfiCond165) CFA_SP SP+0
          CFI (cfiCond166) CFA_SP SP+0
          CFI (cfiCond167) CFA_SP SP+0
          CFI (cfiPicker168) CFA_SP SP+0
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiPicker168

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond169 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker171 Using cfiCommon1
          CFI (cfiPicker171) NoFunction
          CFI (cfiPicker171) Picker
        MOV     R3,A
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiPicker171
        REQUIRE ??Subroutine188_0
        ; // Fall through to label ??Subroutine188_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine188_0:
          CFI Block cfiCond172 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_350
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDO_UpdateAddrManager
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond174) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond174) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond174) CFA_SP SP+-7
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-2
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function ZDO_ProcessParentAnnce
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond177) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond177) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond177) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond177) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond177) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond177) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond177) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+-2
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-2
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-2
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker182 Using cfiCommon1
          CFI (cfiPicker182) NoFunction
          CFI (cfiPicker182) Picker
        MOV     A,R2
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiPicker182
        REQUIRE ??Subroutine189_0
        ; // Fall through to label ??Subroutine189_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine189_0:
          CFI Block cfiCond183 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_349
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDO_UpdateNwkStatus
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-2
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-2
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDO_UpdateAddrManager
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond186) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond186) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond186) CFA_SP SP+-7
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond187) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond187) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond187) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-2
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-2
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function ZDO_ProcessParentAnnce
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-2
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-2
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-2
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker194 Using cfiCommon1
          CFI (cfiPicker194) NoFunction
          CFI (cfiPicker194) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI (cfiCond183) CFA_SP SP+0
          CFI (cfiCond184) CFA_SP SP+0
          CFI (cfiCond185) CFA_SP SP+0
          CFI (cfiCond186) CFA_SP SP+-5
          CFI (cfiCond187) CFA_SP SP+0
          CFI (cfiCond188) CFA_SP SP+0
          CFI (cfiCond189) CFA_SP SP+0
          CFI (cfiCond190) CFA_SP SP+0
          CFI (cfiCond191) CFA_SP SP+0
          CFI (cfiCond192) CFA_SP SP+0
          CFI (cfiCond193) CFA_SP SP+0
          CFI (cfiPicker194) CFA_SP SP+0
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiPicker194

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond195 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-2
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker197 Using cfiCommon1
          CFI (cfiPicker197) NoFunction
          CFI (cfiPicker197) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_467:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(_NIB + 53) & 0xff
        MOV     R5,#((_NIB + 53) >> 8) & 0xff
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI (cfiCond195) CFA_SP SP+0
          CFI (cfiCond196) CFA_SP SP+0
          CFI (cfiPicker197) CFA_SP SP+0
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiPicker197

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond198 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_9
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-2
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker200 Using cfiCommon1
          CFI (cfiPicker200) NoFunction
          CFI (cfiPicker200) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x17
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x18
        RET
          CFI (cfiCond198) CFA_SP SP+0
          CFI (cfiCond199) CFA_SP SP+0
          CFI (cfiPicker200) CFA_SP SP+0
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiPicker200
// 1387 
// 1388 /*********************************************************************
// 1389  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1390  *
// 1391  * @brief       This function handles parsing the incoming Management
// 1392  *              Network Discover request and starts the request.
// 1393  *
// 1394  * @param       inMsg - incoming message (request)
// 1395  *
// 1396  * @return      none
// 1397  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1398 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock201 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1399 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        LCALL   ?Subroutine104 & 0xFFFF
// 1400   NLME_ScanFields_t scan;
// 1401   uint8             index;
// 1402   uint8             *msg;
// 1403 
// 1404   msg = inMsg->asdu;
??CrossCallReturnLabel_360:
        ADDC    A,?V1
        LCALL   ?Subroutine77 & 0xFFFF
// 1405   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_106:
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R0123
// 1406   msg += 4;
// 1407   scan.duration = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine32 & 0xFFFF
// 1408   index         = *msg;
??CrossCallReturnLabel_41:
        MOV     R0,A
// 1409   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1410   scan.scanApp  = NLME_DISC_SCAN;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1411 
// 1412   // Save off the information to be used for the response
// 1413   zdappMgmtNwkDiscReqInProgress          = true;
        MOV     DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX    @DPTR,A
// 1414   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC     A
        LCALL   ?Subroutine36 & 0xFFFF
// 1415   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_50:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL   ??Subroutine188_0 & 0xFFFF
// 1416   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_354:
        MOV     A,R0
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX    @DPTR,A
// 1417   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_177:
        MOVX    A,@DPTR
        MOV     DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX    @DPTR,A
// 1418 
// 1419   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??NLME_NwkDiscReq2::?relay`; Banked call to: NLME_NwkDiscReq2
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtNwkDiscReq_0
// 1420   {
// 1421     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL   `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1422 
// 1423     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1424   }
// 1425 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV     A,#0x7
        LJMP    ??Subroutine177_0 & 0xFFFF
          CFI EndBlock cfiBlock201
// 1426 
// 1427 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1428 /*********************************************************************
// 1429  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1430  *
// 1431  * @brief       This function finishes the processing of the Management
// 1432  *              Network Discover Request and generates the response.
// 1433  *
// 1434  *   Note:      This function will limit the number of items returned
// 1435  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1436  *
// 1437  * @param       ResultCountSrcAddr - source of the request
// 1438  * @param       msg - pointer to incoming message
// 1439  * @param       SecurityUse -
// 1440  *
// 1441  * @return      none
// 1442  */
// 1443 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
// 1444 {
// 1445   byte count, i, ResultCount = 0;
// 1446   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
// 1447 
// 1448   NetworkList = nwk_getNwkDescList();
// 1449 
// 1450   // Count the number of nwk descriptors in the list
// 1451   pList = nwk_getNwkDescList();
// 1452   while (pList)
// 1453   {
// 1454     ResultCount++;
// 1455     pList = pList->nextDesc;
// 1456   }
// 1457 
// 1458   if ( ZSTACK_ROUTER_BUILD )
// 1459   {
// 1460     // Look for my PanID.
// 1461     pList = nwk_getNwkDescList();
// 1462     while ( pList )
// 1463     {
// 1464       if ( pList->panId == _NIB.nwkPanId )
// 1465       {
// 1466         break;
// 1467       }
// 1468 
// 1469 
// 1470       if ( !pList->nextDesc )
// 1471       {
// 1472         break;
// 1473       }
// 1474       pList = pList->nextDesc;
// 1475     }
// 1476 
// 1477 
// 1478     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1479     // prepend it.
// 1480     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1481     {
// 1482       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
// 1483       if ( newDesc )
// 1484       {
// 1485         byte pJoin;
// 1486 
// 1487         newDesc->panId = _NIB.nwkPanId;
// 1488         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
// 1489         newDesc->version = NLME_GetProtocolVersion();
// 1490         newDesc->stackProfile = zgStackProfile;
// 1491 
// 1492         //Extended PanID
// 1493         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
// 1494 
// 1495         ZMacGetReq( ZMacAssociationPermit, &pJoin );
// 1496         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1497                                            INVALID_NODE_ADDR);
// 1498 
// 1499         newDesc->nextDesc = NetworkList;
// 1500         NetworkList = newDesc;
// 1501         ResultCount++;
// 1502       }
// 1503     }
// 1504   }
// 1505 
// 1506   // Calc the count and apply a max count.
// 1507   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
// 1508   {
// 1509     count = 0;
// 1510   }
// 1511   else
// 1512   {
// 1513     count = ResultCount - zdappMgmtNwkDiscStartIndex;
// 1514     if ( count > ZDO_MAX_NWKDISC_ITEMS )
// 1515     {
// 1516       count = ZDO_MAX_NWKDISC_ITEMS;
// 1517     }
// 1518 
// 1519     // Move the list pointer up to the start index.
// 1520     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
// 1521     {
// 1522       NetworkList = NetworkList->nextDesc;
// 1523     }
// 1524   }
// 1525 
// 1526   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1527                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1528                       zdappMgmtNwkDiscStartIndex,
// 1529                       count,
// 1530                       NetworkList,
// 1531                       false );
// 1532 
// 1533   if ( ZSTACK_ROUTER_BUILD )
// 1534   {
// 1535     if ( newDesc != NULL )
// 1536     {
// 1537       osal_mem_free( newDesc );
// 1538     }
// 1539   }
// 1540 
// 1541   NLME_NwkDiscTerm();
// 1542 }
// 1543 #endif
// 1544 
// 1545 /*********************************************************************
// 1546  * @fn          ZDO_ProcessMgmtRtgReq
// 1547  *
// 1548  * @brief       This function finishes the processing of the Management
// 1549  *              Routing Request and generates the response.
// 1550  *
// 1551  *   Note:      This function will limit the number of items returned
// 1552  *              to ZDO_MAX_RTG_ITEMS items.
// 1553  *
// 1554  * @param       inMsg - incoming message (request)
// 1555  *
// 1556  * @return      none
// 1557  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1558 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock202 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1559 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1560   byte x;
// 1561   byte maxNumItems;
// 1562   byte numItems = 0;
        MOV     R6,#0x0
// 1563   uint8 *pBuf = NULL;
        MOV     ?V6,R6
        MOV     ?V7,R6
// 1564   rtgItem_t *pList;
// 1565   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine190_0 & 0xFFFF
??CrossCallReturnLabel_366:
        ADDC    A,?V3
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_343:
        MOV     R7,A
// 1566 
// 1567   // Get the number of table items
// 1568   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x63
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1569 
// 1570   if ( maxNumItems > StartIndex )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R7
        CLR     C
        SUBB    A,R0
        JNC     ??ZDO_ProcessMgmtRtgReq_0
// 1571   {
// 1572     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R7
        MOV     R6,A
// 1573 
// 1574     // limit the size of the list
// 1575     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR     C
        SUBB    A,#0xb
        JC      ??ZDO_ProcessMgmtRtgReq_1
// 1576     {
// 1577       numItems = ZDO_MAX_RTG_ITEMS;
        MOV     R6,#0xa
// 1578     }
// 1579 
// 1580     // Allocate the memory to build the table
// 1581     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     B,#0x7
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V6,R2
        MOV     ?V7,R3
// 1582 
// 1583     if ( pBuf != NULL )
        MOV     A,R2
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_2
// 1584     {
// 1585       // Convert buffer to list
// 1586       pList = (rtgItem_t *)pBuf;
// 1587 
// 1588       // Loop through items and build list
// 1589       for ( x = 0; x < numItems; x++ )
        MOV     ?V4,#0x0
        SJMP    ??ZDO_ProcessMgmtRtgReq_3
// 1590       {
// 1591         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1592 
// 1593         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1594         switch( pList->status )
// 1595         {
// 1596           case RT_ACTIVE:
// 1597             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1598             break;
// 1599 
// 1600           case RT_DISC:
// 1601             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1602             break;
// 1603 
// 1604           case RT_LINK_FAIL:
// 1605             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1606             break;
// 1607 
// 1608           case RT_INIT:
// 1609           case RT_REPAIR:
// 1610           default:
// 1611             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV     A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX    @DPTR,A
// 1612             break;
// 1613         }
// 1614 
// 1615         // Increment pointer to next record
// 1616         pList++;
        MOV     A,?V0
        ADD     A,#0x7
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtRtgReq_6
        INC     ?V1
??ZDO_ProcessMgmtRtgReq_6:
        INC     ?V4
??ZDO_ProcessMgmtRtgReq_3:
        MOV     A,?V4
        CLR     C
        SUBB    A,R6
        JNC     ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     A,?V4
        ADD     A,R7
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x75
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        MOV     A,?V0
        ADD     A,#0x5
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_524:
        MOVX    A,@DPTR
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_7
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_8
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_9
        SJMP    ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_7:
        CLR     A
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV     A,#0x1
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_9:
        MOV     A,#0x2
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
// 1617       }
// 1618     }
// 1619     else
// 1620     {
// 1621       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV     R6,#0x0
// 1622     }
// 1623   }
// 1624 
// 1625   // Send response
// 1626   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1627                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R7
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V2
        LCALL   ??Subroutine192_0 & 0xFFFF
??CrossCallReturnLabel_371:
        ADDC    A,?V3
        MOV     R3,A
        MOV     A,?V2
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_180:
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_311:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtRtgRsp::?relay`; Banked call to: ZDP_MgmtRtgRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1628 
// 1629   if ( pBuf != NULL )
        MOV     A,?V6
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_10
// 1630   {
// 1631     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V6
        MOV     R3,?V7
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1632   }
// 1633 }
??ZDO_ProcessMgmtRtgReq_10:
        MOV     A,#0x1
          CFI EndBlock cfiBlock202
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock203 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Valid
        LJMP    ??Subroutine194_0 & 0xFFFF
          CFI EndBlock cfiBlock203

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond204 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_360
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-2
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker206 Using cfiCommon1
          CFI (cfiPicker206) NoFunction
          CFI (cfiPicker206) Picker
        MOV     ?V0,R2
        MOV     ?V1,R3
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiPicker206
        REQUIRE ??Subroutine190_0
        ; // Fall through to label ??Subroutine190_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine190_0:
          CFI Block cfiCond207 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_364
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-2
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-2
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ZDO_ProcessUserDescSet
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-2
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-2
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker214 Using cfiCommon1
          CFI (cfiPicker214) NoFunction
          CFI (cfiPicker214) Picker
        MOV     A,R2
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiPicker214
        REQUIRE ??Subroutine191_0
        ; // Fall through to label ??Subroutine191_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine191_0:
          CFI Block cfiCond215 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_362
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-2
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-2
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ZDO_ProcessUserDescSet
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-2
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker224 Using cfiCommon1
          CFI (cfiPicker224) NoFunction
          CFI (cfiPicker224) Picker
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        RET
          CFI (cfiCond215) CFA_SP SP+0
          CFI (cfiCond216) CFA_SP SP+0
          CFI (cfiCond217) CFA_SP SP+0
          CFI (cfiCond218) CFA_SP SP+0
          CFI (cfiCond219) CFA_SP SP+0
          CFI (cfiCond220) CFA_SP SP+0
          CFI (cfiCond221) CFA_SP SP+0
          CFI (cfiCond222) CFA_SP SP+0
          CFI (cfiCond223) CFA_SP SP+0
          CFI (cfiPicker224) CFA_SP SP+0
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiPicker224
// 1634 
// 1635 /*********************************************************************
// 1636  * @fn          ZDO_ProcessMgmtBindReq
// 1637  *
// 1638  * @brief       This function finishes the processing of the Management
// 1639  *              Bind Request and generates the response.
// 1640  *
// 1641  *   Note:      This function will limit the number of items returned
// 1642  *              to ZDO_MAX_BIND_ITEMS items.
// 1643  *
// 1644  * @param       inMsg - incoming message (request)
// 1645  *
// 1646  * @return      none
// 1647  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1648 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock225 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1649 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V4,R2
        MOV     ?V5,R3
// 1650 #if defined ( REFLECTOR )
// 1651   byte x;
// 1652   uint16 maxNumItems;
// 1653   uint16 numItems;
// 1654   uint8 *pBuf = NULL;
        MOV     ?V8,#0x0
        MOV     ?V9,#0x0
// 1655   apsBindingItem_t *pList;
// 1656   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine190_0 & 0xFFFF
??CrossCallReturnLabel_367:
        ADDC    A,?V5
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_344:
        MOV     ?V2,A
// 1657   uint8 status;
// 1658 
// 1659   // Get the number of table items
// 1660   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x5d
        LCALL   `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1661 
// 1662   if ( maxNumItems > StartIndex )
        MOV     R0,?V2
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_428:
        CLR     C
        MOV     A,R0
        SUBB    A,R2
        CLR     A
        SUBB    A,R3
        JNC     ??ZDO_ProcessMgmtBindReq_0
// 1663   {
// 1664     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     R7,A
// 1665   }
// 1666   else
// 1667   {
// 1668     numItems = 0;
// 1669   }
// 1670 
// 1671   // limit the size of the list
// 1672   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JC      ??ZDO_ProcessMgmtBindReq_1
// 1673   {
// 1674     numItems = ZDO_MAX_BIND_ITEMS;
        MOV     R6,#0x3
        MOV     R7,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_2
// 1675   }
// 1676 
// 1677   // Allocate the memory to build the table
// 1678   if ( numItems && (pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems )) )
??ZDO_ProcessMgmtBindReq_1:
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ProcessMgmtBindReq_0
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,R2
        MOV     B,#0x15
        MUL     AB
        MOV     R2,A
        MOV     R0,B
        MOV     B,#0x15
        MOV     A,R3
        MUL     AB
        ADD     A,R0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     A,R2
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_0
// 1679   {
// 1680     status = ZSuccess;
        MOV     ?V3,#0x0
// 1681 
// 1682     // Convert buffer to list
// 1683     pList = (apsBindingItem_t *)pBuf;
// 1684 
// 1685     // Loop through items and build list
// 1686     for ( x = 0; x < numItems; x++ )
        MOV     ?V6,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_3
// 1687     {
// 1688       APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
??ZDO_ProcessMgmtBindReq_4:
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R0,?V2
        MOV     A,?V6
        ADD     A,R0
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x5e
        LCALL   `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1689       pList++;
        MOV     A,?V0
        ADD     A,#0x15
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtBindReq_5
        INC     ?V1
// 1690     }
??ZDO_ProcessMgmtBindReq_5:
        INC     ?V6
??ZDO_ProcessMgmtBindReq_3:
        CLR     C
        MOV     A,?V6
        SUBB    A,R6
        CLR     A
        SUBB    A,R7
        JC      ??ZDO_ProcessMgmtBindReq_4
        MOV     A,R6
        MOV     R1,A
        SJMP    ??ZDO_ProcessMgmtBindReq_6
// 1691 
// 1692   }
// 1693   else
// 1694   {
// 1695     status = ZDP_NOT_PERMITTED;
??ZDO_ProcessMgmtBindReq_0:
        MOV     ?V3,#-0x75
// 1696     numItems = 0;
        MOV     R1,#0x0
// 1697   }
// 1698 
// 1699   // Send response
// 1700   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1701                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_6:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,?V2
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,?V3
        MOV     A,?V4
        LCALL   ??Subroutine192_0 & 0xFFFF
??CrossCallReturnLabel_372:
        ADDC    A,?V5
        MOV     R3,A
        MOV     A,?V4
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_181:
        ADDC    A,?V5
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtBindRsp::?relay`; Banked call to: ZDP_MgmtBindRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1702 
// 1703   if ( pBuf )
        MOV     A,?V8
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_7
// 1704   {
// 1705     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1706   }
// 1707 #else
// 1708   (void)inMsg;
// 1709 #endif
// 1710 }
??ZDO_ProcessMgmtBindReq_7:
        MOV     A,#0x2
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock225

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond226 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_179
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-2
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond230) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-2
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker232 Using cfiCommon1
          CFI (cfiPicker232) NoFunction
          CFI (cfiPicker232) Picker
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_279:
        RET
          CFI (cfiCond226) CFA_SP SP+0
          CFI (cfiCond227) CFA_SP SP+0
          CFI (cfiCond228) CFA_SP SP+0
          CFI (cfiCond229) CFA_SP SP+0
          CFI (cfiCond230) CFA_SP SP+0
          CFI (cfiCond231) CFA_SP SP+-1
          CFI (cfiPicker232) CFA_SP SP+0
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiPicker232

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine161:
          CFI Block cfiCond233 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_81
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-4
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_117
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-4
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_118
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond236) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-4
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_119
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-4
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_179
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond238) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond238) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond238) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond238) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond238) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond238) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond238) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond238) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond238) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-4
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_180
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-4
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_181
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-4
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_182
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-4
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_183
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-4
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_184
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-5
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_177
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-4
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_178
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-5
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker246 Using cfiCommon1
          CFI (cfiPicker246) NoFunction
          CFI (cfiPicker246) Picker
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        RET
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond235) CFA_SP SP+-2
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond237) CFA_SP SP+-2
          CFI (cfiCond238) CFA_SP SP+-2
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond241) CFA_SP SP+-2
          CFI (cfiCond242) CFA_SP SP+-2
          CFI (cfiCond243) CFA_SP SP+-3
          CFI (cfiCond244) CFA_SP SP+-2
          CFI (cfiCond245) CFA_SP SP+-3
          CFI (cfiPicker246) CFA_SP SP+0
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiPicker246

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond247 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_374
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-2
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine192_0:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_369
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-2
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-2
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker257 Using cfiCommon1
          CFI (cfiPicker257) NoFunction
          CFI (cfiPicker257) Picker
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        RET
          CFI (cfiCond250) CFA_SP SP+0
          CFI (cfiCond251) CFA_SP SP+0
          CFI (cfiCond252) CFA_SP SP+0
          CFI (cfiCond253) CFA_SP SP+0
          CFI (cfiCond254) CFA_SP SP+0
          CFI (cfiCond255) CFA_SP SP+0
          CFI (cfiCond256) CFA_SP SP+0
          CFI (cfiPicker257) CFA_SP SP+0
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiPicker257
// 1711 
// 1712 /*********************************************************************
// 1713  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1714  *
// 1715  * @brief       This function finishes the processing of the Management
// 1716  *              Direct Join Request and generates the response.
// 1717  *
// 1718  * @param       inMsg - incoming message (request)
// 1719  *
// 1720  * @return      none
// 1721  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1722 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock258 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1723 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1724   uint8 *deviceAddr;
// 1725   uint8 capInfo;
// 1726   uint8 stat;
// 1727 
// 1728   // Parse the message
// 1729   deviceAddr = inMsg->asdu;
// 1730   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1731 
// 1732   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
        MOV     A,R6
        LCALL   ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_363:
        ADDC    A,R7
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_121:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??NLME_DirectJoinRequest::?relay`; Banked call to: NLME_DirectJoinRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1733 
// 1734   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x35
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_164:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1735 }
          CFI EndBlock cfiBlock258
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock259 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LJMP    ??Subroutine177_0 & 0xFFFF
          CFI EndBlock cfiBlock259
// 1736 
// 1737 /*********************************************************************
// 1738  * @fn          ZDO_ProcessMgmtLeaveReq
// 1739  *
// 1740  * @brief       This function processes a Management Leave Request
// 1741  *              and generates the response.
// 1742  *
// 1743  * @param       inMsg - incoming message (request)
// 1744  *
// 1745  * @return      none
// 1746  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1747 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock260 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1748 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine104 & 0xFFFF
// 1749   NLME_LeaveReq_t req;
// 1750   ZStatus_t       status;
// 1751   uint8           option;
// 1752   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_361:
        LCALL   ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_523:
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_260:
        MOV     R7,A
// 1753 
// 1754   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1755        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
        ; Setup parameters for call to function AddrMgrExtAddrValid
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??AddrMgrExtAddrValid::?relay`; Banked call to: AddrMgrExtAddrValid
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessMgmtLeaveReq_1
// 1756   {
// 1757     // Remove this device
// 1758     req.extAddr = NULL;
??ZDO_ProcessMgmtLeaveReq_0:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??ZDO_ProcessMgmtLeaveReq_2
// 1759   }
// 1760   else
// 1761   {
// 1762     // Remove child device
// 1763     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
// 1764   }
??ZDO_ProcessMgmtLeaveReq_2:
        LCALL   ?Subroutine18 & 0xFFFF
// 1765 
// 1766   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_16:
        MOV     R0,A
// 1767   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV     C,0xE0 /* A   */.6
        JNC     ??ZDO_ProcessMgmtLeaveReq_3
// 1768   {
// 1769     req.removeChildren = TRUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1770   }
// 1771 
// 1772   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV     A,R0
        MOV     C,0xE0 /* A   */.7
        JNC     ??ZDO_ProcessMgmtLeaveReq_4
// 1773   {
// 1774      req.rejoin = TRUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1775   }
// 1776 
// 1777   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1778 
// 1779   status = NLME_LeaveReq( &req );
        ; Setup parameters for call to function NLME_LeaveReq
        INC     A
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??NLME_LeaveReq::?relay`; Banked call to: NLME_LeaveReq
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1780 
// 1781   if ( ZG_BUILD_ENDDEVICE_TYPE )
// 1782   {
// 1783     // Stop polling and get ready to reset
// 1784     NLME_SetPollRate( 0 );
// 1785     NLME_SetResponseRate(0);
// 1786     NLME_SetQueuedPollRate(0);
// 1787   }
// 1788 
// 1789   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V2,#0x34
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,#0x1
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1790 }
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock260
// 1791 
// 1792 
// 1793 /*********************************************************************
// 1794  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1795  *
// 1796  * @brief       This function processes a Management Permit Join Request
// 1797  *              and generates the response.
// 1798  *
// 1799  * @param       inMsg - incoming message (request)
// 1800  *
// 1801  * @return      none
// 1802  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1803 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock261 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1804 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDSecMgrPermitJoining
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL   ?Subroutine70 & 0xFFFF
// 1805   uint8 stat;
// 1806   uint8 duration;
// 1807   uint8 tcsig;
// 1808 
// 1809   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
??CrossCallReturnLabel_327:
        MOV     ?V1,A
// 1810   tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
// 1811 
// 1812   // Set the network layer permit join duration
// 1813   stat = (byte) NLME_PermitJoiningRequest( duration );
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        MOV     R1,?V1
        LCALL   `??NLME_PermitJoiningRequest::?relay`; Banked call to: NLME_PermitJoiningRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1814 
// 1815   // Handle the Trust Center Significance
// 1816   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1817   {
// 1818     if ( tcsig == TRUE )
        MOV     A,#0x1
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_0
// 1819     {
// 1820       ZDSecMgrPermitJoining( duration );
        ; Setup parameters for call to function ZDSecMgrPermitJoining
        MOV     R1,?V1
        LCALL   `??ZDSecMgrPermitJoining::?relay`; Banked call to: ZDSecMgrPermitJoining
// 1821     }
// 1822   }
// 1823 
// 1824   // Send a response if unicast
// 1825   if ( !inMsg->wasBroadcast )
??ZDO_ProcessMgmtPermitJoinReq_0:
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_384:
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_1
// 1826   {
// 1827     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x36
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine108 & 0xFFFF
// 1828   }
??CrossCallReturnLabel_165:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1829 }
??ZDO_ProcessMgmtPermitJoinReq_1:
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock261

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond262 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-2
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker264 Using cfiCommon1
          CFI (cfiPicker264) NoFunction
          CFI (cfiPicker264) Picker
        MOV     R1,#0x1
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_275:
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI (cfiCond262) CFA_SP SP+0
          CFI (cfiCond263) CFA_SP SP+0
          CFI (cfiPicker264) CFA_SP SP+0
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiPicker264

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine160:
          CFI Block cfiCond265 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_274
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_164
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-4
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_165
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-4
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker268 Using cfiCommon1
          CFI (cfiPicker268) NoFunction
          CFI (cfiPicker268) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0xf
        RET
          CFI (cfiCond265) CFA_SP SP+0
          CFI (cfiCond266) CFA_SP SP+-2
          CFI (cfiCond267) CFA_SP SP+-2
          CFI (cfiPicker268) CFA_SP SP+0
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiPicker268
// 1830 
// 1831 /*
// 1832  * This function stub allows the next higher layer to be notified of
// 1833  * a permit joining timeout.
// 1834  */
// 1835 /*********************************************************************
// 1836  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1837  *
// 1838  * @brief       This function stub allows the next higher layer to be
// 1839  *              notified of a permit joining timeout. Currently, this
// 1840  *              directly bypasses the APS layer.
// 1841  *
// 1842  * @param       none
// 1843  *
// 1844  * @return      none
// 1845  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1846 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock269 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 1847 {
        ; Saved register size: 0
        ; Auto size: 0
// 1848   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 1849   // Currently, only the ZDSecMgr needs to be notified
// 1850   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1851   {
// 1852     ZDSecMgrPermitJoiningTimeout();
// 1853   }
// 1854   #endif
// 1855 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock269
// 1856 
// 1857 /*********************************************************************
// 1858  * @fn          ZDO_ProcessUserDescReq
// 1859  *
// 1860  * @brief       This function finishes the processing of the User
// 1861  *              Descriptor Request and generates the response.
// 1862  *
// 1863  * @param       inMsg - incoming message (request)
// 1864  *
// 1865  * @return      none
// 1866  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1867 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock270 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 1868 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 17
        MOV     A,#-0x11
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1869   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV     ?V4,A
        CLR     A
        ADDC    A,R1
        MOV     ?V5,A
// 1870   UserDescriptorFormat_t userDesc;
// 1871 
// 1872   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 1873              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
        MOV     A,R6
        ADD     A,#0xf
        MOV     ?V2,A
        CLR     A
        ADDC    A,R7
        MOV     ?V3,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R7
        MOV     ?V1,A
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V4
        JNZ     ??ZDO_ProcessUserDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V5
??ZDO_ProcessUserDescReq_0:
        JNZ     ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V6,R0
        MOV     ?V7,R1
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V6,#0x11
        MOV     ?V7,#0x0
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,R1
        JNZ     ??ZDO_ProcessUserDescReq_1
// 1874   {
// 1875     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV     ?V6,#0x0
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V6,R0
        MOV     ?V7,R1
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_UserDescRsp::?relay`; Banked call to: ZDP_UserDescRsp
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        SJMP    ??ZDO_ProcessUserDescReq_2
// 1876   }
// 1877   else
// 1878   {
// 1879     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 1880            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V6,#0x11
        MOV     ?V7,#-0x80
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        LCALL   ?Subroutine107 & 0xFFFF
// 1881   }
??CrossCallReturnLabel_389:
        MOV     R5,A
        MOV     R4,#-0x7c
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
// 1882 }
??ZDO_ProcessUserDescReq_2:
        MOV     A,#0x11
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock270

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond271 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDO_ProcessUserDescReq
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-2
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker273 Using cfiCommon1
          CFI (cfiPicker273) NoFunction
          CFI (cfiPicker273) Picker
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_254:
        RET
          CFI (cfiCond271) CFA_SP SP+0
          CFI (cfiCond272) CFA_SP SP+0
          CFI (cfiPicker273) CFA_SP SP+0
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiPicker273

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond274 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_72
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-4
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_84
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+-4
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDO_ProcessUserDescReq
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_85
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-4
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker278 Using cfiCommon1
          CFI (cfiPicker278) NoFunction
          CFI (cfiPicker278) Picker
        LCALL   ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_299:
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_381:
        LCALL   ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_591:
        RET
          CFI (cfiCond274) CFA_SP SP+-2
          CFI (cfiCond275) CFA_SP SP+-2
          CFI (cfiCond276) CFA_SP SP+-2
          CFI (cfiCond277) CFA_SP SP+-2
          CFI (cfiPicker278) CFA_SP SP+0
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiPicker278

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine170:
          CFI Block cfiCond279 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_72
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-6
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_84
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-6
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDO_ProcessUserDescReq
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_85
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-6
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_95
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-6
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_ProcessUserDescSet
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_94
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-6
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_0
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-6
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_1
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-6
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_326
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-6
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_327
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-6
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDO_UpdateNwkStatus
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_328
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-6
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker290 Using cfiCommon1
          CFI (cfiPicker290) NoFunction
          CFI (cfiPicker290) Picker
        MOVX    A,@DPTR
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiPicker290
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine193_0:
          CFI Block cfiCond291 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_380
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_71
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-6
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_72
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-6
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_84
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-6
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDO_ProcessUserDescReq
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_85
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-6
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_95
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-6
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDO_ProcessUserDescSet
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_94
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-6
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_0
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-6
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_1
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-6
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_326
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-6
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_327
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-6
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDO_UpdateNwkStatus
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_379, ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_328
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-6
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker303 Using cfiCommon1
          CFI (cfiPicker303) NoFunction
          CFI (cfiPicker303) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI (cfiCond291) CFA_SP SP+0
          CFI (cfiCond292) CFA_SP SP+-4
          CFI (cfiCond293) CFA_SP SP+-4
          CFI (cfiCond294) CFA_SP SP+-4
          CFI (cfiCond295) CFA_SP SP+-4
          CFI (cfiCond296) CFA_SP SP+-4
          CFI (cfiCond297) CFA_SP SP+-4
          CFI (cfiCond298) CFA_SP SP+-4
          CFI (cfiCond299) CFA_SP SP+-4
          CFI (cfiCond300) CFA_SP SP+-4
          CFI (cfiCond301) CFA_SP SP+-4
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiPicker303) CFA_SP SP+0
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiPicker303

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock304 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R2,?V2
        MOV     R3,?V3
          CFI EndBlock cfiBlock304
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine194_0:
          CFI Block cfiBlock305 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock305
// 1883 
// 1884 /*********************************************************************
// 1885  * @fn          ZDO_ProcessUserDescSet
// 1886  *
// 1887  * @brief       This function finishes the processing of the User
// 1888  *              Descriptor Set and generates the response.
// 1889  *
// 1890  * @param       inMsg - incoming message (request)
// 1891  *
// 1892  * @return      none
// 1893  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1894 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock306 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 1895 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1896   uint8 *msg;
// 1897   uint16 aoi;
// 1898   UserDescriptorFormat_t userDesc;
// 1899   uint8 outMsg[3];
// 1900   uint8 status;
// 1901 
// 1902   msg = inMsg->asdu;
        LCALL   ??Subroutine190_0 & 0xFFFF
??CrossCallReturnLabel_368:
        ADDC    A,?V3
        LCALL   ?Subroutine69 & 0xFFFF
// 1903   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_94:
        MOV     R2,A
        CLR     A
        XCH     A,R2
        MOV     R3,A
        MOV     A,R4
        ADD     A,R2
        MOV     R6,A
        CLR     A
        ADDC    A,R3
        MOV     R7,A
// 1904 
// 1905   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessUserDescSet_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessUserDescSet_0:
        JZ      $+5
        LJMP    ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 1906   {
// 1907     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        SUBB    A,#0x10
        JNC     ??ZDO_ProcessUserDescSet_2
        MOV     ?V0,R2
        SJMP    ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV     ?V0,#0x10
??ZDO_ProcessUserDescSet_3:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        LCALL   ?Subroutine35 & 0xFFFF
// 1908     msg ++;  // increment one for the length field
// 1909 
// 1910     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_47:
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1911     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V4,#0x11
        MOV     ?V5,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1912     if ( userDesc.len != 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDO_Config_Node_Descriptor
        JZ      ??ZDO_ProcessUserDescSet_4
// 1913     {
// 1914       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.4
        SJMP    ??ZDO_ProcessUserDescSet_5
// 1915     }
// 1916     else
// 1917     {
// 1918       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.4
// 1919     }
// 1920 
// 1921     status = ZDP_SUCCESS;
// 1922   }
??ZDO_ProcessUserDescSet_5:
        LCALL   ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_285:
        CLR     A
        SJMP    ??ZDO_ProcessUserDescSet_6
// 1923   else
// 1924   {
// 1925     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX    @DPTR,A
// 1926   }
// 1927 
// 1928   outMsg[0] = status;
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1929   outMsg[1] = LO_UINT16( aoi );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
// 1930   outMsg[2] = LO_UINT16( aoi );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
// 1931 
// 1932   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 1933                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        MOV     A,?V2
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_171:
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_312:
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     ?V4,#0x14
        MOV     ?V5,#-0x80
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x3
        MOV     A,?V2
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V3
        MOV     R5,A
        MOV     A,?V2
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V3
        MOV     R3,A
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1934 }
        MOV     A,#0x15
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI R6 SameValue
          CFI VB SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI R7 SameValue
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI EndBlock cfiBlock306

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine165:
          CFI Block cfiCond307 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_284
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDO_ProcessUserDescSet
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-2
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_26
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond309) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond309) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond309) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond309) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond309) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-6
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_25
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-6
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDO_ProcessParentAnnce
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_65
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-6
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDMatchSendState
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_66
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-6
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker313 Using cfiCommon1
          CFI (cfiPicker313) NoFunction
          CFI (cfiPicker313) Picker
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI (cfiCond307) CFA_SP SP+0
          CFI (cfiCond308) CFA_SP SP+0
          CFI (cfiCond309) CFA_SP SP+-4
          CFI (cfiCond310) CFA_SP SP+-4
          CFI (cfiCond311) CFA_SP SP+-4
          CFI (cfiCond312) CFA_SP SP+-4
          CFI (cfiPicker313) CFA_SP SP+0
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiPicker313

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond314 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_95
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDO_ProcessUserDescSet
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker316 Using cfiCommon1
          CFI (cfiPicker316) NoFunction
          CFI (cfiPicker316) Picker
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_376:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond314) CFA_SP SP+0
          CFI (cfiCond315) CFA_SP SP+0
          CFI (cfiPicker316) CFA_SP SP+0
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiPicker316

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond317 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_95
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDO_ProcessUserDescSet
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_94
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-4
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_0
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-4
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_1
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-4
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker321 Using cfiCommon1
          CFI (cfiPicker321) NoFunction
          CFI (cfiPicker321) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiPicker321
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine195_0:
          CFI Block cfiCond322 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_327
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-4
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function ZDO_UpdateNwkStatus
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_328
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+-4
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_95
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-4
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ZDO_ProcessUserDescSet
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_94
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-4
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_0
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-4
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_1
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-4
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker329 Using cfiCommon1
          CFI (cfiPicker329) NoFunction
          CFI (cfiPicker329) Picker
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_379:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond323) CFA_SP SP+-2
          CFI (cfiCond324) CFA_SP SP+-2
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond327) CFA_SP SP+-2
          CFI (cfiCond328) CFA_SP SP+-2
          CFI (cfiPicker329) CFA_SP SP+0
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiPicker329
// 1935 
// 1936 /*********************************************************************
// 1937  * @fn          ZDO_ProcessDeviceAnnce
// 1938  *
// 1939  * @brief       This function processes a device annouce message.
// 1940  *
// 1941  * @param       inMsg - incoming message
// 1942  *
// 1943  * @return      none
// 1944  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1945 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock330 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 1946 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1947   ZDO_DeviceAnnce_t Annce;
// 1948   AddrMgrEntry_t addrEntry;
// 1949   uint8 parentExt[Z_EXTADDR_LEN];
// 1950 
// 1951   // Parse incoming message
// 1952   ZDO_ParseDeviceAnnce( inMsg, &Annce );
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        LCALL   `??ZDO_ParseDeviceAnnce::?relay`; Banked call to: ZDO_ParseDeviceAnnce
// 1953 
// 1954   if ( ZSTACK_END_DEVICE_BUILD )
// 1955   {
// 1956     // Make sure the message didn't come from myself - end device only
// 1957     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
// 1958     {
// 1959       return;
// 1960     }
// 1961   }
// 1962 
// 1963 #if defined ( ZIGBEEPRO )
// 1964   // Clean up the neighbor table
// 1965   nwkNeighborRemoveAllStranded();
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL   `??nwkNeighborRemoveAllStranded::?relay`; Banked call to: nwkNeighborRemoveAllStranded
// 1966 
// 1967   // If address conflict is detected, no need to update the address manager
// 1968   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_429:
        LCALL   `??NLME_CheckNewAddrSet::?relay`; Banked call to: NLME_CheckNewAddrSet
        MOV     A,R1
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_0 & 0xFFFF
// 1969   {
// 1970     return;
// 1971   }
// 1972 
// 1973   // Check for parent's address
// 1974   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??NLME_GetCoordExtAddr::?relay`; Banked call to: NLME_GetCoordExtAddr
// 1975   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_1
// 1976   {
// 1977     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL   `??NLME_GetCoordShortAddr::?relay`; Banked call to: NLME_GetCoordShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_2:
        JZ      ??ZDO_ProcessDeviceAnnce_1
// 1978     {
// 1979       // Set the Parent's MAC's new short address
// 1980       _NIB.nwkCoordAddress = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_458:
        MOV     DPTR,#_NIB + 23
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 1981       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_472:
        ; Setup parameters for call to function ZMacSetReq
        MOV     R2,#(_NIB + 23) & 0xff
        MOV     R3,#((_NIB + 23) >> 8) & 0xff
        MOV     R1,#0x4b
        LCALL   `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
// 1982     }
// 1983   }
// 1984 
// 1985   if ( ZSTACK_ROUTER_BUILD )
// 1986   {
// 1987     // If the device annce comes from a end device child that has moved
// 1988     // to another parent, remove it from associated device list
// 1989 
// 1990     // If the dev annce is coming from other device's children,
// 1991     // (The dev annce from its own children shall be unicast to itself,
// 1992     // So check the mac destination address)
// 1993     // Remove it from the associated device list. If it is not
// 1994     // a child, no action will be taken in AssocRemove() anyway.
// 1995     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_1:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     A,R6
        ADD     A,#0x11
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_385:
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_3:
        JZ      ??ZDO_ProcessDeviceAnnce_4
// 1996     {
// 1997       associated_devices_t *dev_ptr;
// 1998 
// 1999       // If it's an end device child
// 2000       dev_ptr = AssocGetWithExt( Annce.extAddr );
        ; Setup parameters for call to function AssocGetWithExt
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV     DPL,R2
        MOV     DPH,R3
// 2001       if ( dev_ptr )
        MOV     A,DPL
        ORL     A,DPH
        JZ      ??ZDO_ProcessDeviceAnnce_5
// 2002       {
// 2003         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2004              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        XRL     A,R0
        JZ      ??ZDO_ProcessDeviceAnnce_6
        MOV     A,#0x2
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_5
// 2005         {
// 2006           AssocRemove( Annce.extAddr );
??ZDO_ProcessDeviceAnnce_6:
        ; Setup parameters for call to function AssocRemove
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AssocRemove::?relay`; Banked call to: AssocRemove
// 2007         }
// 2008       }
// 2009 
// 2010       // Remove the address from the SrcMatch table,
// 2011       // just in case the device was aged out by Child Management Table process
// 2012       if ( ( pNwkNotMyChildListDelete != NULL ) &&
// 2013            ( zgChildAgingEnable == TRUE ) )
??ZDO_ProcessDeviceAnnce_5:
        MOV     DPTR,#pNwkNotMyChildListDelete
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_396:
        JZ      ??ZDO_ProcessDeviceAnnce_4
        MOV     DPTR,#zgChildAgingEnable
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessDeviceAnnce_4
// 2014       {
// 2015         pNwkNotMyChildListDelete( Annce.nwkAddr );
        ; Setup parameters for indirect call
        LCALL   ?Subroutine84 & 0xFFFF
// 2016       }
// 2017     }
// 2018   }
??CrossCallReturnLabel_430:
        MOV     DPTR,#pNwkNotMyChildListDelete + 1
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_345:
        LCALL   ?CALL_IND
// 2019 
// 2020   // Assume that the device has moved, remove existing routing entries
// 2021   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
??ZDO_ProcessDeviceAnnce_4:
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV     R1,#0x0
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_431:
        LCALL   `??RTG_RemoveRtgEntry::?relay`; Banked call to: RTG_RemoveRtgEntry
// 2022 
// 2023   // Remove entry from neighborTable
// 2024   nwkNeighborRemove( Annce.nwkAddr, _NIB.nwkPanId );
        ; Setup parameters for call to function nwkNeighborRemove
        MOV     DPTR,#_NIB + 33
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_432:
        LCALL   `??nwkNeighborRemove::?relay`; Banked call to: nwkNeighborRemove
// 2025 
// 2026 #endif // ZIGBEEPRO
// 2027 
// 2028   // Fill in the extended address in address manager if we don't have it already.
// 2029   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine24 & 0xFFFF
// 2030   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_25:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2031   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_473:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_7
// 2032   {
// 2033     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 2034     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_7
// 2035     {
// 2036       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2037       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2038     }
// 2039   }
// 2040 
// 2041   // Update the short address in address manager if it's been changed
// 2042   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_7:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2043   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupExt::?relay`; Banked call to: AddrMgrEntryLookupExt
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_0
// 2044   {
// 2045     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_459:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_8
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_8:
        JZ      ??ZDO_ProcessDeviceAnnce_0
// 2046     {
// 2047       addrEntry.nwkAddr = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_460:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2048       AddrMgrEntryUpdate( &addrEntry );
??CrossCallReturnLabel_474:
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2049     }
// 2050   }
// 2051 }
??ZDO_ProcessDeviceAnnce_0:
        MOV     A,#0x20
        LJMP    ??Subroutine177_0 & 0xFFFF
          CFI EndBlock cfiBlock330

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond331 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_387
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDO_ProcessUserDescReq
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-2
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker334 Using cfiCommon1
          CFI (cfiPicker334) NoFunction
          CFI (cfiPicker334) Picker
        MOV     A,R6
        ADD     A,#0xe
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiPicker334
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine196_0:
          CFI Block cfiCond335 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_382
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-2
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDO_ProcessUserDescReq
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker343 Using cfiCommon1
          CFI (cfiPicker343) NoFunction
          CFI (cfiPicker343) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI (cfiCond335) CFA_SP SP+0
          CFI (cfiCond336) CFA_SP SP+0
          CFI (cfiCond337) CFA_SP SP+0
          CFI (cfiCond338) CFA_SP SP+0
          CFI (cfiCond339) CFA_SP SP+0
          CFI (cfiCond340) CFA_SP SP+0
          CFI (cfiCond341) CFA_SP SP+0
          CFI (cfiCond342) CFA_SP SP+0
          CFI (cfiPicker343) CFA_SP SP+0
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiPicker343

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond344 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_400
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-2
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker347 Using cfiCommon1
          CFI (cfiPicker347) NoFunction
          CFI (cfiPicker347) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiPicker347
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine197_0:
          CFI Block cfiCond348 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_390
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-2
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-2
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-2
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-2
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_RemoveMatchMemory
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond357) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond357) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond357) CFA_SP SP+-7
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-2
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-2
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-2
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker361 Using cfiCommon1
          CFI (cfiPicker361) NoFunction
          CFI (cfiPicker361) Picker
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_405:
        ORL     A,R1
        RET
          CFI (cfiCond348) CFA_SP SP+0
          CFI (cfiCond349) CFA_SP SP+0
          CFI (cfiCond350) CFA_SP SP+0
          CFI (cfiCond351) CFA_SP SP+0
          CFI (cfiCond352) CFA_SP SP+0
          CFI (cfiCond353) CFA_SP SP+0
          CFI (cfiCond354) CFA_SP SP+0
          CFI (cfiCond355) CFA_SP SP+0
          CFI (cfiCond356) CFA_SP SP+0
          CFI (cfiCond357) CFA_SP SP+-5
          CFI (cfiCond358) CFA_SP SP+0
          CFI (cfiCond359) CFA_SP SP+0
          CFI (cfiCond360) CFA_SP SP+0
          CFI (cfiPicker361) CFA_SP SP+0
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiPicker361

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine154:
          CFI Block cfiCond362 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_404, ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function ZDO_AnyClusterMatches
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_404, ??CrossCallReturnLabel_125
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-4
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_400
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-4
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_401
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-4
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_402
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond366) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond366) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond366) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-4
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_390
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_391
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-4
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_392
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-4
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_393
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-4
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_394
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-4
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_395
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-4
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_396
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-4
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_397
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-4
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_398
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-4
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function ZDO_RemoveMatchMemory
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_399
          CFI (cfiCond376) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond376) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond376) CFA_SP SP+-9
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDO_CompareClusterLists
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_122
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-4
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_123
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-4
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker379 Using cfiCommon1
          CFI (cfiPicker379) NoFunction
          CFI (cfiPicker379) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_468:
        MOV     A,R0
        RET
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond363) CFA_SP SP+-2
          CFI (cfiCond364) CFA_SP SP+-2
          CFI (cfiCond365) CFA_SP SP+-2
          CFI (cfiCond366) CFA_SP SP+-2
          CFI (cfiCond367) CFA_SP SP+-2
          CFI (cfiCond368) CFA_SP SP+-2
          CFI (cfiCond369) CFA_SP SP+-2
          CFI (cfiCond370) CFA_SP SP+-2
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond373) CFA_SP SP+-2
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond375) CFA_SP SP+-2
          CFI (cfiCond376) CFA_SP SP+-7
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiPicker379) CFA_SP SP+0
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiPicker379

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond380 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-2
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker382 Using cfiCommon1
          CFI (cfiPicker382) NoFunction
          CFI (cfiPicker382) Picker
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI (cfiCond380) CFA_SP SP+0
          CFI (cfiCond381) CFA_SP SP+0
          CFI (cfiPicker382) CFA_SP SP+0
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiPicker382
// 2052 
// 2053 /*********************************************************************
// 2054  * @fn          ZDO_ProcessParentAnnce
// 2055  *
// 2056  * @brief       This function processes a Parent annouce message.
// 2057  *
// 2058  * @param       inMsg - incoming message
// 2059  *
// 2060  * @return      none
// 2061  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2062 void ZDO_ProcessParentAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessParentAnnce:
          CFI Block cfiBlock383 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
        CODE
// 2063 {
        FUNCALL ZDO_ProcessParentAnnce, ZDO_ParseParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, ZDP_ParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine188_0 & 0xFFFF
// 2064   ZDO_ParentAnnce_t *parentAnnce;
// 2065   uint8 x;
// 2066   uint8 childCount = 0;
??CrossCallReturnLabel_355:
        MOV     R7,#0x0
// 2067   uint32 localAge;
// 2068 
// 2069   ZDO_ChildInfoList_t *listHead = NULL;
        MOV     ?V0,R7
        MOV     ?V1,R7
// 2070   ZDO_ChildInfoList_t *listTail;
// 2071   ZDO_ChildInfoList_t *newNode;
// 2072 
// 2073   // Parse incoming message, memory is allocated by the parse function,
// 2074   // it should be free after processing the message
// 2075   parentAnnce = ZDO_ParseParentAnnce( inMsg );
        ; Setup parameters for call to function ZDO_ParseParentAnnce
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   `??ZDO_ParseParentAnnce::?relay`; Banked call to: ZDO_ParseParentAnnce
        MOV     ?V14,R2
        MOV     ?V15,R3
// 2076 
// 2077   if ( parentAnnce != NULL )
        MOV     A,R2
        ORL     A,?V15
        JNZ     $+5
        LJMP    ??ZDO_ProcessParentAnnce_0 & 0xFFFF
// 2078   {
// 2079     for ( x = 0; x < parentAnnce->numOfChildren; x++ )
        MOV     R6,#0x0
        SJMP    ??ZDO_ProcessParentAnnce_1
// 2080     {
// 2081       associated_devices_t *dev_ptr;
// 2082       localAge = 0xFFFFFFFF;
// 2083 
// 2084       // If it's an End Device child
// 2085       dev_ptr = AssocGetWithExt( parentAnnce->childInfo[x].extAddr );
// 2086 
// 2087       if ( dev_ptr )
// 2088       {
// 2089         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2090              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
// 2091         {
// 2092           if ( dev_ptr->keepaliveRcv == TRUE )
// 2093           {
// 2094             localAge = dev_ptr->endDev.deviceTimeout - dev_ptr->timeoutCounter;
// 2095           }
// 2096 
// 2097           if ( localAge < parentAnnce->childInfo[x].age )
// 2098           {
// 2099             // Add one element to the list
// 2100             newNode = (ZDO_ChildInfoList_t *)osal_mem_alloc( sizeof(ZDO_ChildInfoList_t) );
// 2101 
// 2102             osal_cpyExtAddr( newNode->child.extAddr, parentAnnce->childInfo[x].extAddr );
// 2103 
// 2104             newNode->child.age = localAge;
// 2105 
// 2106             newNode->next = NULL;
// 2107 
// 2108             if ( listHead == NULL )
// 2109             {
// 2110               // Initialize the head of the list
// 2111               listHead = listTail = newNode;
// 2112             }
// 2113             else
// 2114             {
// 2115               // Add new element to the end
// 2116               listTail->next = newNode;
// 2117 
// 2118               listTail = listTail->next;
// 2119             }
// 2120 
// 2121             childCount++;
// 2122           }
// 2123           else
// 2124           {
// 2125             AssocRemove( parentAnnce->childInfo[x].extAddr );
??ZDO_ProcessParentAnnce_2:
        ; Setup parameters for call to function AssocRemove
        MOV     R2,?V12
        MOV     R3,?V13
        LCALL   `??AssocRemove::?relay`; Banked call to: AssocRemove
// 2126           }
??ZDO_ProcessParentAnnce_3:
        INC     R6
??ZDO_ProcessParentAnnce_1:
        MOV     DPL,?V14
        MOV     DPH,?V15
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R6
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessParentAnnce_4 & 0xFFFF
        MOV     ?V4,#-0x1
        MOV     ?V5,#-0x1
        MOV     ?V6,#-0x1
        MOV     ?V7,#-0x1
        MOV     A,R6
        MOV     B,#0xc
        MUL     AB
        MOV     R0,A
        MOV     R1,B
        MOV     A,?V14
        ADD     A,R0
        MOV     ?V10,A
        MOV     A,?V15
        ADDC    A,R1
        MOV     ?V11,A
        MOV     DPL,?V10
        MOV     DPH,A
        INC     DPTR
        MOV     ?V12,DPL
        MOV     ?V13,DPH
        ; Setup parameters for call to function AssocGetWithExt
        MOV     R2,?V12
        MOV     R3,?V13
        LCALL   `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_ProcessParentAnnce_3
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        XRL     A,R0
        JZ      ??ZDO_ProcessParentAnnce_5
        MOV     A,#0x2
        XRL     A,R0
        JNZ     ??ZDO_ProcessParentAnnce_3
??ZDO_ProcessParentAnnce_5:
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_224:
        JNZ     ??ZDO_ProcessParentAnnce_6
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_149:
        MOV     R0,#?V4
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_218:
        MOV     R0,#?V4
        LCALL   ?L_SUB_X
??ZDO_ProcessParentAnnce_6:
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?UL_GE_X
        JNC     $+5
        LJMP    ??ZDO_ProcessParentAnnce_2 & 0xFFFF
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0xe
        MOV     R3,#0x0
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     ?V10,R2
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V12
        MOV     R5,?V13
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
        MOV     A,?V2
        ADD     A,#0xc
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_318:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,?V0
        ORL     A,?V1
        JNZ     ??ZDO_ProcessParentAnnce_7
        MOV     ?V8,?V2
        MOV     ?V9,?V3
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        SJMP    ??ZDO_ProcessParentAnnce_8
??ZDO_ProcessParentAnnce_7:
        MOV     A,?V8
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V9
        MOV     DPH,A
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        MOVX    @DPTR,A
        MOV     ?V8,?V10
        MOV     ?V9,A
??ZDO_ProcessParentAnnce_8:
        INC     R7
        LJMP    ??ZDO_ProcessParentAnnce_3 & 0xFFFF
// 2127         }
// 2128       }
// 2129     }
// 2130 
// 2131     // If the device has children that match some in the received list,
// 2132     // it should send a unicast Parent_Annce_rsp message.
// 2133     if ( childCount > 0 )
??ZDO_ProcessParentAnnce_4:
        MOV     A,R7
        JNZ     $+5
        LJMP    ??ZDO_ProcessParentAnnce_9 & 0xFFFF
// 2134     {
// 2135       ZDO_ChildInfo_t *childInfo;
// 2136       zAddrType_t dstAddr;
// 2137 
// 2138       dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
// 2139       dstAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_65:
        LCALL   ??Subroutine179_0 & 0xFFFF
??CrossCallReturnLabel_346:
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_466:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2140 
// 2141       x = 0;
??CrossCallReturnLabel_475:
        MOV     R6,#0x0
// 2142 
// 2143       childInfo = (ZDO_ChildInfo_t *)osal_mem_alloc( childCount * sizeof(ZDO_ChildInfo_t) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R7
        MOV     B,#0xc
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
// 2144 
// 2145       if ( childInfo != NULL )
        MOV     A,R2
        ORL     A,?V5
        JNZ     $+5
        LJMP    ??ZDO_ProcessParentAnnce_9 & 0xFFFF
        SJMP    ??ZDO_ProcessParentAnnce_10
// 2146       {
// 2147         // Copy the content of the link list into this buffer
// 2148         while ( listHead != NULL )
// 2149         {
// 2150           listTail = listHead;
??ZDO_ProcessParentAnnce_11:
        MOV     ?V8,?V0
        MOV     ?V9,?V1
// 2151 
// 2152           osal_cpyExtAddr( childInfo[x].extAddr,  listHead->child.extAddr );
        MOV     A,R6
        MOV     B,#0xc
        MUL     AB
        MOV     R0,A
        MOV     R1,B
        MOV     A,?V4
        ADD     A,R0
        MOV     ?V2,A
        MOV     A,?V5
        ADDC    A,R1
        MOV     ?V3,A
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R2,?V2
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2153           childInfo[x].age = listHead->child.age;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XLOAD_R0123
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XSTORE_R0123
// 2154 
// 2155           x++;
        INC     R6
// 2156 
// 2157           listHead = listTail->next;
        MOV     A,?V8
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V9
        LCALL   ?Subroutine80 & 0xFFFF
// 2158 
// 2159           // Free this element of the link list
// 2160           osal_mem_free( listTail );
??CrossCallReturnLabel_407:
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2161         }
??ZDO_ProcessParentAnnce_10:
        MOV     A,?V0
        ORL     A,?V1
        JNZ     ??ZDO_ProcessParentAnnce_11
// 2162 
// 2163         ZDP_ParentAnnceRsp( (inMsg->TransSeq), dstAddr, childCount,
// 2164                             ((uint8 *)childInfo), 0 );
        ; Setup parameters for call to function ZDP_ParentAnnce
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V0,#0x1f
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     A,R7
        MOV     R1,A
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP102_8
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0xf
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??ZDP_ParentAnnce::?relay`; Banked call to: ZDP_ParentAnnce
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 2165       }
// 2166     }
// 2167 
// 2168     // Free memory allocated by parsing function
// 2169     osal_mem_free( parentAnnce );
??ZDO_ProcessParentAnnce_9:
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V14
        MOV     R3,?V15
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2170   }
// 2171 }
??ZDO_ProcessParentAnnce_0:
        MOV     A,#0xb
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock383

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond384 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_407
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-2
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker386 Using cfiCommon1
          CFI (cfiPicker386) NoFunction
          CFI (cfiPicker386) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiPicker386
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine198_0:
          CFI Block cfiCond387 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_406
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function ZDO_ProcessParentAnnce
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-2
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker390 Using cfiCommon1
          CFI (cfiPicker390) NoFunction
          CFI (cfiPicker390) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        RET
          CFI (cfiCond387) CFA_SP SP+0
          CFI (cfiCond388) CFA_SP SP+0
          CFI (cfiCond389) CFA_SP SP+0
          CFI (cfiPicker390) CFA_SP SP+0
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiPicker390
// 2172 
// 2173 /*********************************************************************
// 2174  * @fn          ZDO_ProcessParentAnnceRsp
// 2175  *
// 2176  * @brief       This function processes a Parent annouce response message.
// 2177  *
// 2178  * @param       inMsg - incoming message
// 2179  *
// 2180  * @return      none
// 2181  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2182 void ZDO_ProcessParentAnnceRsp( zdoIncomingMsg_t *inMsg )
ZDO_ProcessParentAnnceRsp:
          CFI Block cfiBlock391 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnceRsp
        CODE
// 2183 {
        FUNCALL ZDO_ProcessParentAnnceRsp, ZDO_ParseParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
// 2184   ZDO_ParentAnnce_t *parentAnnce;
// 2185   uint8 x;
// 2186   uint32 localAge;
// 2187 
// 2188   // Parse incoming message, memory is allocated by the parse function,
// 2189   // it should be free after processing the message
// 2190   parentAnnce = ZDO_ParseParentAnnce( inMsg );
        ; Setup parameters for call to function ZDO_ParseParentAnnce
        LCALL   `??ZDO_ParseParentAnnce::?relay`; Banked call to: ZDO_ParseParentAnnce
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R6,?V0
        MOV     R7,?V1
// 2191 
// 2192   if ( parentAnnce != NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??ZDO_ProcessParentAnnceRsp_0 & 0xFFFF
// 2193   {
// 2194     for ( x = 0; x < parentAnnce->numOfChildren; x++ )
        MOV     ?V4,#0x0
        SJMP    ??ZDO_ProcessParentAnnceRsp_1
// 2195     {
// 2196       associated_devices_t *dev_ptr;
// 2197       localAge = 0xFFFFFFFF;
??ZDO_ProcessParentAnnceRsp_2:
        MOV     ?V0,#-0x1
        MOV     ?V1,#-0x1
        MOV     ?V2,#-0x1
        MOV     ?V3,#-0x1
// 2198 
// 2199       // If it's an End Device child
// 2200       dev_ptr = AssocGetWithExt( parentAnnce->childInfo[x].extAddr );
        MOV     A,?V4
        MOV     B,#0xc
        MUL     AB
        MOV     R0,A
        MOV     R1,B
        MOV     A,R6
        ADD     A,R0
        MOV     ?V8,A
        MOV     A,R7
        ADDC    A,R1
        MOV     ?V9,A
        MOV     DPL,?V8
        MOV     DPH,A
        INC     DPTR
        MOV     ?V6,DPL
        MOV     ?V7,DPH
        ; Setup parameters for call to function AssocGetWithExt
        MOV     R2,?V6
        MOV     R3,?V7
        LCALL   `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
// 2201 
// 2202       if ( dev_ptr )
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_ProcessParentAnnceRsp_3
// 2203       {
// 2204         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2205              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        XRL     A,R0
        JZ      ??ZDO_ProcessParentAnnceRsp_4
        MOV     A,#0x2
        XRL     A,R0
        JNZ     ??ZDO_ProcessParentAnnceRsp_3
// 2206         {
// 2207           if ( dev_ptr->keepaliveRcv == TRUE )
??ZDO_ProcessParentAnnceRsp_4:
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_225:
        JNZ     ??ZDO_ProcessParentAnnceRsp_5
// 2208           {
// 2209             localAge = dev_ptr->endDev.deviceTimeout - dev_ptr->timeoutCounter;
        LCALL   ?Subroutine101 & 0xFFFF
// 2210           }
??CrossCallReturnLabel_150:
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_219:
        MOV     R0,#?V0
        LCALL   ?L_SUB_X
// 2211 
// 2212           if ( localAge >= parentAnnce->childInfo[x].age )
??ZDO_ProcessParentAnnceRsp_5:
        MOV     DPL,?V8
        MOV     DPH,?V9
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0
        LCALL   ?UL_GE_X
        JNC     ??ZDO_ProcessParentAnnceRsp_3
// 2213           {
// 2214             AssocRemove( parentAnnce->childInfo[x].extAddr );
        ; Setup parameters for call to function AssocRemove
        MOV     R2,?V6
        MOV     R3,?V7
        LCALL   `??AssocRemove::?relay`; Banked call to: AssocRemove
// 2215           }
// 2216         }
// 2217       }
// 2218     }
??ZDO_ProcessParentAnnceRsp_3:
        INC     ?V4
??ZDO_ProcessParentAnnceRsp_1:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,?V4
        CLR     C
        SUBB    A,R0
        JNC     $+5
        LJMP    ??ZDO_ProcessParentAnnceRsp_2 & 0xFFFF
// 2219 
// 2220     // Free memory allocated by parsing function
// 2221     osal_mem_free( parentAnnce );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2222   }
// 2223 }
??ZDO_ProcessParentAnnceRsp_0:
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI R6 SameValue
          CFI VB SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI R7 SameValue
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI EndBlock cfiBlock391

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond392 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-2
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker394 Using cfiCommon1
          CFI (cfiPicker394) NoFunction
          CFI (cfiPicker394) Picker
        MOV     A,R2
        ADD     A,#0x1b
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,#0x1
        RET
          CFI (cfiCond392) CFA_SP SP+0
          CFI (cfiCond393) CFA_SP SP+0
          CFI (cfiPicker394) CFA_SP SP+0
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiPicker394

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond395 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_218
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond396) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond396) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond396) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond396) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond396) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-2
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker397 Using cfiCommon1
          CFI (cfiPicker397) NoFunction
          CFI (cfiPicker397) Picker
        MOV     A,R2
        ADD     A,#0x17
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        RET
          CFI (cfiCond395) CFA_SP SP+0
          CFI (cfiCond396) CFA_SP SP+0
          CFI (cfiPicker397) CFA_SP SP+0
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiPicker397
// 2224 
// 2225 /*********************************************************************
// 2226  * @fn          ZDO_BuildSimpleDescBuf
// 2227  *
// 2228  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 2229  *
// 2230  * @param       buf  - pointer to a byte array big enough for data.
// 2231  * @param       desc - SimpleDescriptionFormat_t *
// 2232  *
// 2233  * @return      none
// 2234  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2235 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock398 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2236 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2237   byte cnt;
// 2238   uint16 *ptr;
// 2239 
// 2240   *buf++ = desc->EndPoint;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_567:
        LCALL   ?Subroutine138 & 0xFFFF
// 2241   *buf++ = HI_UINT16( desc->AppProfId );
??CrossCallReturnLabel_236:
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_571:
        LCALL   ?Subroutine27 & 0xFFFF
// 2242   *buf++ = LO_UINT16( desc->AppProfId );
??CrossCallReturnLabel_31:
        MOVX    @DPTR,A
// 2243   *buf++ = HI_UINT16( desc->AppDeviceId );
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_572:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine27 & 0xFFFF
// 2244   *buf++ = LO_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_32:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine138 & 0xFFFF
// 2245 
// 2246   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_237:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 2247 
// 2248   *buf++ = desc->AppNumInClusters;
        MOV     A,R4
        ADD     A,#0x6
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     DPL,R0
        MOV     DPH,A
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_568:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x7
        MOV     R2,A
        JNC     ??ZDO_BuildSimpleDescBuf_0
        INC     R3
// 2249   ptr = desc->pAppInClusterList;
??ZDO_BuildSimpleDescBuf_0:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine95 & 0xFFFF
// 2250   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_139:
        SJMP    ??ZDO_BuildSimpleDescBuf_1
// 2251   {
// 2252     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_2:
        LCALL   ?Subroutine44 & 0xFFFF
// 2253     *buf++ = LO_UINT16( *ptr );
// 2254   }
??CrossCallReturnLabel_409:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDO_BuildSimpleDescBuf_3
        INC     R3
??ZDO_BuildSimpleDescBuf_3:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_BuildSimpleDescBuf_4
        INC     R7
??ZDO_BuildSimpleDescBuf_4:
        INC     ?V0
??ZDO_BuildSimpleDescBuf_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     A,?V0
        CLR     C
        SUBB    A,?V1
        JC      ??ZDO_BuildSimpleDescBuf_2
// 2255 
// 2256   *buf++ = desc->AppNumOutClusters;
        MOV     A,R4
        ADD     A,#0x9
        MOV     R6,A
        CLR     A
        ADDC    A,R5
        MOV     R7,A
        MOV     ?V2,R6
        MOV     ?V3,R7
        MOV     DPL,R6
        MOV     DPH,A
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_569:
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
// 2257   ptr = desc->pAppOutClusterList;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine95 & 0xFFFF
// 2258   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_140:
        SJMP    ??ZDO_BuildSimpleDescBuf_5
// 2259   {
// 2260     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_6:
        LCALL   ?Subroutine44 & 0xFFFF
// 2261     *buf++ = LO_UINT16( *ptr );
// 2262   }
??CrossCallReturnLabel_410:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDO_BuildSimpleDescBuf_7
        INC     R3
??ZDO_BuildSimpleDescBuf_7:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_BuildSimpleDescBuf_8
        INC     R7
??ZDO_BuildSimpleDescBuf_8:
        INC     ?V0
??ZDO_BuildSimpleDescBuf_5:
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,?V0
        CLR     C
        SUBB    A,R0
        JC      ??ZDO_BuildSimpleDescBuf_6
// 2263 }
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock398

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond399 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_235
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-2
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-2
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_0
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-4
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_1
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-4
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker404 Using cfiCommon1
          CFI (cfiPicker404) NoFunction
          CFI (cfiPicker404) Picker
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI (cfiCond399) CFA_SP SP+0
          CFI (cfiCond400) CFA_SP SP+0
          CFI (cfiCond401) CFA_SP SP+0
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiPicker404) CFA_SP SP+0
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiPicker404

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond405 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_139
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-2
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker407 Using cfiCommon1
          CFI (cfiPicker407) NoFunction
          CFI (cfiPicker407) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_265:
        MOV     R7,A
        MOV     ?V0,#0x0
        RET
          CFI (cfiCond405) CFA_SP SP+0
          CFI (cfiCond406) CFA_SP SP+0
          CFI (cfiPicker407) CFA_SP SP+0
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiPicker407

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond408 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_409
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-2
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker410 Using cfiCommon1
          CFI (cfiPicker410) NoFunction
          CFI (cfiPicker410) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiPicker410
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine199_0:
          CFI Block cfiCond411 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_411
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-2
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker414 Using cfiCommon1
          CFI (cfiPicker414) NoFunction
          CFI (cfiPicker414) Picker
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_557:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond411) CFA_SP SP+0
          CFI (cfiCond412) CFA_SP SP+0
          CFI (cfiCond413) CFA_SP SP+0
          CFI (cfiPicker414) CFA_SP SP+0
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiPicker414

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond415 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker417 Using cfiCommon1
          CFI (cfiPicker417) NoFunction
          CFI (cfiPicker417) Picker
        INC     DPTR
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_242:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond415) CFA_SP SP+0
          CFI (cfiCond416) CFA_SP SP+0
          CFI (cfiPicker417) CFA_SP SP+0
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiPicker417
// 2264 
// 2265 #if ( ZG_BUILD_COORDINATOR_TYPE )
// 2266 /*********************************************************************
// 2267  * @fn      ZDO_MatchEndDeviceBind()
// 2268  *
// 2269  * @brief
// 2270  *
// 2271  *   Called to match end device binding requests
// 2272  *
// 2273  * @param  bindReq  - binding request information
// 2274  * @param  SecurityUse - Security enable/disable
// 2275  *
// 2276  * @return  none
// 2277  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2278 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
ZDO_MatchEndDeviceBind:
          CFI Block cfiBlock418 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
        CODE
// 2279 {
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDMatchSendState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V4,R2
        MOV     ?V5,R3
// 2280   zAddrType_t dstAddr;
// 2281   uint8 sendRsp = FALSE;
        MOV     R6,#0x0
// 2282   uint8 status;
// 2283 
// 2284   // Is this the first request?
// 2285   if ( matchED == NULL )
        MOV     DPTR,#matchED
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_397:
        JNZ     ??ZDO_MatchEndDeviceBind_0
// 2286   {
// 2287     // Create match info structure
// 2288     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x37
        MOV     R3,#0x0
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     DPTR,#matchED
        LCALL   ??Subroutine188_0 & 0xFFFF
// 2289     if ( matchED )
??CrossCallReturnLabel_356:
        MOV     DPTR,#matchED
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_398:
        JZ      ??ZDO_MatchEndDeviceBind_1
// 2290     {
// 2291       // Clear the structure
// 2292       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     R1,#0x0
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 2293 
// 2294       // Copy the first request's information
// 2295       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     DPTR,#matchED
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2296       {
// 2297         status = ZDP_NO_ENTRY;
// 2298         sendRsp = TRUE;
// 2299       }
// 2300     }
??CrossCallReturnLabel_420:
        LCALL   `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV     A,R1
        JNZ     ??ZDO_MatchEndDeviceBind_2
// 2301     else
// 2302     {
// 2303       status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        LJMP    ??ZDO_MatchEndDeviceBind_3 & 0xFFFF
// 2304       sendRsp = TRUE;
// 2305     }
// 2306 
// 2307     if ( !sendRsp )
// 2308     {
// 2309       // Set into the correct state
// 2310       matchED->state = ZDMATCH_WAIT_REQ;
??ZDO_MatchEndDeviceBind_2:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_487:
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_226:
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2311 
// 2312       // Setup the timeout
// 2313       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV     R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV     DPTR,#AIB_MaxBindingTime
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2314     }
// 2315   }
??CrossCallReturnLabel_421:
        LCALL   `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP    ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
// 2316   else
// 2317   {
// 2318       matchED->state = ZDMATCH_SENDING_BINDS;
??ZDO_MatchEndDeviceBind_0:
        MOVX    A,@DPTR
        XCH     A,R0
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_227:
        MOV     A,#0x2
        MOVX    @DPTR,A
// 2319 
// 2320       // Copy the 2nd request's information
// 2321       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV     R4,?V4
        MOV     R5,?V5
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_134:
        LCALL   `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV     A,R1
        JNZ     ??ZDO_MatchEndDeviceBind_5
// 2322       {
// 2323         status = ZDP_NO_ENTRY;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
// 2324         sendRsp = TRUE;
        MOV     R6,#0x1
// 2325       }
// 2326 
// 2327       // Make a source match for ed1
// 2328       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2329                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2330                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_5:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV     ?V0,#ZDOBuildBuf & 0xff
        MOV     ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_488:
        ADD     A,#0x29
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_489:
        ADD     A,#0x28
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_204:
        MOV     R4,A
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_490:
        ADD     A,#0x15
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_507:
        ADD     A,#0x14
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_205:
        MOV     R1,A
        LCALL   `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_491:
        ADD     A,#0x31
        LCALL   ?Subroutine17 & 0xFFFF
// 2331       if ( matchED->ed1numMatched )
??CrossCallReturnLabel_445:
        ADD     A,#0x31
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_206:
        MOV     R2,A
        MOV     ?V2,#0x0
        JZ      ??ZDO_MatchEndDeviceBind_6
// 2332       {
// 2333         // Save the match list
// 2334         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_492:
        ADD     A,#0x32
        LCALL   ?Subroutine22 & 0xFFFF
// 2335         if ( matchED->ed1Matched )
??CrossCallReturnLabel_441:
        JZ      ??ZDO_MatchEndDeviceBind_7
// 2336         {
// 2337           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL   ?Subroutine53 & 0xFFFF
// 2338         }
??CrossCallReturnLabel_75:
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_451:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        SJMP    ??ZDO_MatchEndDeviceBind_6
// 2339         else
// 2340         {
// 2341           // Allocation error, stop
// 2342           status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
// 2343           sendRsp = TRUE;
        MOV     R6,#0x1
// 2344         }
// 2345       }
// 2346 
// 2347       // Make a source match for ed2
// 2348       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2349                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2350                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_6:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV     ?V6,#ZDOBuildBuf & 0xff
        MOV     ?V7,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_493:
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_494:
        ADD     A,#0x11
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_207:
        MOV     R4,A
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_495:
        ADD     A,#0x2c
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_508:
        ADD     A,#0x2b
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_208:
        MOV     R1,A
        LCALL   `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R1
        MOV     R0,A
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_496:
        ADD     A,#0x34
        LCALL   ?Subroutine17 & 0xFFFF
// 2351       if ( matchED->ed2numMatched )
??CrossCallReturnLabel_446:
        ADD     A,#0x34
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV     R2,A
        JZ      ??ZDO_MatchEndDeviceBind_8
// 2352       {
// 2353         // Save the match list
// 2354         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_497:
        ADD     A,#0x35
        LCALL   ?Subroutine22 & 0xFFFF
// 2355         if ( matchED->ed2Matched )
??CrossCallReturnLabel_442:
        JZ      ??ZDO_MatchEndDeviceBind_9
// 2356         {
// 2357           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL   ?Subroutine54 & 0xFFFF
// 2358         }
??CrossCallReturnLabel_439:
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_452:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 2359         else
// 2360         {
// 2361           // Allocation error, stop
// 2362           status = ZDP_NO_ENTRY;
// 2363           sendRsp = TRUE;
// 2364         }
// 2365       }
// 2366 
// 2367       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
??ZDO_MatchEndDeviceBind_8:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JC      ??ZDO_MatchEndDeviceBind_10
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_76:
        JNZ     ??ZDO_MatchEndDeviceBind_11
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_440:
        JZ      ??ZDO_MatchEndDeviceBind_10
// 2368       {
// 2369         // Do the first unbind/bind state
// 2370         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
??ZDO_MatchEndDeviceBind_11:
        ; Setup parameters for call to function ZDMatchSendState
        MOV     R3,#0x0
        MOV     R2,#0x0
        MOV     R1,#0x0
        LCALL   `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2371       }
// 2372       else
// 2373       {
// 2374         status = ZDP_NO_MATCH;
// 2375         sendRsp = TRUE;
// 2376       }
// 2377   }
// 2378 
// 2379   if ( sendRsp )
        LJMP    ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
??ZDO_MatchEndDeviceBind_9:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
??ZDO_MatchEndDeviceBind_10:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7a
??ZDO_MatchEndDeviceBind_3:
        MOVX    @DPTR,A
// 2380   {
// 2381     // send response to this requester
// 2382     dstAddr.addrMode = Addr16Bit;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 2383     dstAddr.addr.shortAddr = bindReq->srcAddr;
        MOV     DPL,?V4
        MOV     DPH,?V5
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_434:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2384     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
??CrossCallReturnLabel_476:
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPL,?V4
        MOV     DPH,?V5
        INC     DPTR
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_322:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,?V4
        MOV     R3,?V5
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 2385 
// 2386     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_88:
        JNZ     ??ZDO_MatchEndDeviceBind_12
// 2387     {
// 2388       // send response to first requester
// 2389       dstAddr.addrMode = Addr16Bit;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        LCALL   ?Subroutine47 & 0xFFFF
// 2390       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2391       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2392     }
??CrossCallReturnLabel_69:
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_436:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_4:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        MOV     DPTR,#matchED
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_422:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 2393 
// 2394     // Process ended - release memory used
// 2395     ZDO_RemoveMatchMemory();
??ZDO_MatchEndDeviceBind_12:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL   `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2396   }
// 2397 }
??ZDO_MatchEndDeviceBind_4:
        MOV     A,#0xa
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock418

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond419 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_226
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker421 Using cfiCommon1
          CFI (cfiPicker421) NoFunction
          CFI (cfiPicker421) Picker
        LCALL   ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_283:
        RET
          CFI (cfiCond419) CFA_SP SP+0
          CFI (cfiCond420) CFA_SP SP+0
          CFI (cfiPicker421) CFA_SP SP+0
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiPicker421

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine164:
          CFI Block cfiCond422 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_226
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_227
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_88
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function ZDMatchSendState
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_89
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-4
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker426 Using cfiCommon1
          CFI (cfiPicker426) NoFunction
          CFI (cfiPicker426) Picker
        ADD     A,#0x2e
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI (cfiCond422) CFA_SP SP+-2
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond424) CFA_SP SP+-2
          CFI (cfiCond425) CFA_SP SP+-2
          CFI (cfiPicker426) CFA_SP SP+0
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiPicker426

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond427 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_426
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-2
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond429) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond429) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond429) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-2
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-2
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-2
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-2
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker434 Using cfiCommon1
          CFI (cfiPicker434) NoFunction
          CFI (cfiPicker434) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiPicker434
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine200_0:
          CFI Block cfiCond435 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_412
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond436) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond436) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond436) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-2
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond437) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond437) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond437) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond437) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond437) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond437) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond437) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-2
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond438) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond438) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond438) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond438) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond438) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond438) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-2
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond439) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond439) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond439) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond439) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-2
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond440) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond440) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond440) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-2
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond442) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond442) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond442) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond442) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond442) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond442) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+-2
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+-2
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-2
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDO_RemoveMatchMemory
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond446) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond446) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond446) CFA_SP SP+-7
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDMatchSendState
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDMatchSendState
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-2
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond450) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond450) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond450) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-2
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-2
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker456 Using cfiCommon1
          CFI (cfiPicker456) NoFunction
          CFI (cfiPicker456) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_522:
        RET
          CFI (cfiCond435) CFA_SP SP+0
          CFI (cfiCond436) CFA_SP SP+0
          CFI (cfiCond437) CFA_SP SP+0
          CFI (cfiCond438) CFA_SP SP+0
          CFI (cfiCond439) CFA_SP SP+0
          CFI (cfiCond440) CFA_SP SP+0
          CFI (cfiCond441) CFA_SP SP+0
          CFI (cfiCond442) CFA_SP SP+0
          CFI (cfiCond443) CFA_SP SP+0
          CFI (cfiCond444) CFA_SP SP+0
          CFI (cfiCond445) CFA_SP SP+0
          CFI (cfiCond446) CFA_SP SP+-5
          CFI (cfiCond447) CFA_SP SP+0
          CFI (cfiCond448) CFA_SP SP+0
          CFI (cfiCond449) CFA_SP SP+0
          CFI (cfiCond450) CFA_SP SP+0
          CFI (cfiCond451) CFA_SP SP+0
          CFI (cfiCond452) CFA_SP SP+0
          CFI (cfiCond453) CFA_SP SP+0
          CFI (cfiCond454) CFA_SP SP+0
          CFI (cfiCond455) CFA_SP SP+0
          CFI (cfiPicker456) CFA_SP SP+0
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiPicker456

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond457 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_436
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDMatchSendState
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-2
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker459 Using cfiCommon1
          CFI (cfiPicker459) NoFunction
          CFI (cfiPicker459) Picker
        MOV     DPH,A
        MOV     DPL,R0
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiPicker459
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine201_0:
          CFI Block cfiCond460 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_434
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDMatchSendState
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-2
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-2
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDMatchSendState
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-2
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker464 Using cfiCommon1
          CFI (cfiPicker464) NoFunction
          CFI (cfiPicker464) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiPicker464
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine202_0:
          CFI Block cfiCond465 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_433
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-2
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDMatchSendState
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-2
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-2
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDMatchSendState
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-2
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker470 Using cfiCommon1
          CFI (cfiPicker470) NoFunction
          CFI (cfiPicker470) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_469:
        MOV     A,#0x1
        RET
          CFI (cfiCond465) CFA_SP SP+0
          CFI (cfiCond466) CFA_SP SP+0
          CFI (cfiCond467) CFA_SP SP+0
          CFI (cfiCond468) CFA_SP SP+0
          CFI (cfiCond469) CFA_SP SP+0
          CFI (cfiPicker470) CFA_SP SP+0
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiPicker470

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond471 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_439
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-2
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker473 Using cfiCommon1
          CFI (cfiPicker473) NoFunction
          CFI (cfiPicker473) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiPicker473
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine203_0:
          CFI Block cfiCond474 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_438
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_439
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-2
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-2
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker477 Using cfiCommon1
          CFI (cfiPicker477) NoFunction
          CFI (cfiPicker477) Picker
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_511:
        ADD     A,#0x34
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI (cfiCond474) CFA_SP SP+0
          CFI (cfiCond475) CFA_SP SP+0
          CFI (cfiCond476) CFA_SP SP+0
          CFI (cfiPicker477) CFA_SP SP+0
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiPicker477

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond478 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_441
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-2
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker480 Using cfiCommon1
          CFI (cfiPicker480) NoFunction
          CFI (cfiPicker480) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiPicker480
        REQUIRE ??Subroutine204_0
        ; // Fall through to label ??Subroutine204_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine204_0:
          CFI Block cfiCond481 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_443
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_CopyMatchInfo
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-2
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-2
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-2
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker485 Using cfiCommon1
          CFI (cfiPicker485) NoFunction
          CFI (cfiPicker485) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,R2
        ORL     A,R3
        RET
          CFI (cfiCond481) CFA_SP SP+0
          CFI (cfiCond482) CFA_SP SP+0
          CFI (cfiCond483) CFA_SP SP+0
          CFI (cfiCond484) CFA_SP SP+0
          CFI (cfiPicker485) CFA_SP SP+0
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiPicker485

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond486 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_445
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-2
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker488 Using cfiCommon1
          CFI (cfiPicker488) NoFunction
          CFI (cfiPicker488) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiPicker488
        REQUIRE ??Subroutine205_0
        ; // Fall through to label ??Subroutine205_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine205_0:
          CFI Block cfiCond489 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_447
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-2
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker492 Using cfiCommon1
          CFI (cfiPicker492) NoFunction
          CFI (cfiPicker492) Picker
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_448:
        XCH     A,R0
        RET
          CFI (cfiCond489) CFA_SP SP+0
          CFI (cfiCond490) CFA_SP SP+0
          CFI (cfiCond491) CFA_SP SP+0
          CFI (cfiPicker492) CFA_SP SP+0
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiPicker492

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond493 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_445
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_446
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-4
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDMatchSendState
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_447
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-4
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_4
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-4
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDMatchSendState
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_5
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-4
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker498 Using cfiCommon1
          CFI (cfiPicker498) NoFunction
          CFI (cfiPicker498) Picker
        MOV     A,R1
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiPicker498
        REQUIRE ??Subroutine206_0
        ; // Fall through to label ??Subroutine206_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine206_0:
          CFI Block cfiCond499 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ZDMatchSendState
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_70
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-4
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_445
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-4
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_446
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-4
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDMatchSendState
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_447
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-4
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_4
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-4
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDMatchSendState
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_5
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-4
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker506 Using cfiCommon1
          CFI (cfiPicker506) NoFunction
          CFI (cfiPicker506) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_516:
        RET
          CFI (cfiCond499) CFA_SP SP+-2
          CFI (cfiCond500) CFA_SP SP+-2
          CFI (cfiCond501) CFA_SP SP+-2
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond503) CFA_SP SP+-2
          CFI (cfiCond504) CFA_SP SP+-2
          CFI (cfiCond505) CFA_SP SP+-2
          CFI (cfiPicker506) CFA_SP SP+0
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiPicker506

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine175:
          CFI Block cfiCond507 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_445
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_446
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-6
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDMatchSendState
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_447
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-6
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_4
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-6
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDMatchSendState
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_5
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-6
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_69
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-6
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function ZDMatchSendState
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_70
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-6
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDMatchSendState
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_515
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-2
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker515 Using cfiCommon1
          CFI (cfiPicker515) NoFunction
          CFI (cfiPicker515) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiPicker515
        REQUIRE ??Subroutine207_0
        ; // Fall through to label ??Subroutine207_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine207_0:
          CFI Block cfiCond516 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_67
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-4
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDMatchSendState
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_92
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-6
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDMatchSendState
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_93
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-6
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDMatchSendState
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_90
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-6
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDMatchSendState
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_91
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-6
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_88
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-6
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDMatchSendState
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_89
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-6
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_75
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-6
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_76
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-6
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDMatchSendState
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_77
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-6
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_439
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-6
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_440
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-6
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDMatchSendState
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_438
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-6
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_507
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-6
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_508
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-6
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_487
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-6
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_488
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-6
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_489
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-6
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_490
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-6
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_491
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-6
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_492
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-6
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_493
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-6
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_494
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-6
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_495
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-6
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_496
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-6
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_497
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-6
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDO_RemoveMatchMemory
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_498
          CFI (cfiCond543) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond543) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond543) CFA_SP SP+-11
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDO_RemoveMatchMemory
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_499
          CFI (cfiCond544) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond544) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond544) CFA_SP SP+-11
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDO_RemoveMatchMemory
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_500
          CFI (cfiCond545) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond545) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond545) CFA_SP SP+-11
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_RemoveMatchMemory
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_501
          CFI (cfiCond546) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond546) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond546) CFA_SP SP+-11
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDO_RemoveMatchMemory
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_502
          CFI (cfiCond547) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond547) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond547) CFA_SP SP+-11
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDMatchSendState
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_503
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-6
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDMatchSendState
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_504
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-6
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function ZDMatchSendState
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_505
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-7
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDMatchSendState
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_506
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-6
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_484
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-6
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDMatchSendState
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_485
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-6
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDO_ParseAddrRsp
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_486
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-6
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_11
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-6
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_12
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-6
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDO_CompareClusterLists
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_404, ??CrossCallReturnLabel_124
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-8
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDO_AnyClusterMatches
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_404, ??CrossCallReturnLabel_125
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-8
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_400
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-8
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_401
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-8
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_402
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-8
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_390
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-8
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_391
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond563) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-8
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_392
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-8
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_393
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-8
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_394
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-8
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_395
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-8
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_396
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-8
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_397
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-8
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_398
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-8
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDO_RemoveMatchMemory
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_399
          CFI (cfiCond571) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond571) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond571) CFA_SP SP+-13
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDO_CompareClusterLists
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_122
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-8
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_123
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-8
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_436
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-6
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDMatchSendState
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_437
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-6
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_434
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-6
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDMatchSendState
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_435
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-6
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDMatchSendState
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_433
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-6
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_463
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-6
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_464
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-6
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_465
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-6
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_ProcessParentAnnce
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_466
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond582) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-6
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDO_UpdateNwkStatus
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_455
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-6
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_456
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-6
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_457
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-6
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_458
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-6
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_459
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-6
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_460
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-6
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_461
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-6
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDO_ParseUserDescRsp
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_462
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-6
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_445
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-6
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_446
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-6
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDMatchSendState
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_447
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-6
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_4
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-6
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDMatchSendState
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_5
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-6
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_69
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-6
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDMatchSendState
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_70
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-6
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDMatchSendState
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_515
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker599 Using cfiCommon1
          CFI (cfiPicker599) NoFunction
          CFI (cfiPicker599) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond516) CFA_SP SP+-2
          CFI (cfiCond517) CFA_SP SP+-2
          CFI (cfiCond518) CFA_SP SP+-4
          CFI (cfiCond519) CFA_SP SP+-4
          CFI (cfiCond520) CFA_SP SP+-4
          CFI (cfiCond521) CFA_SP SP+-4
          CFI (cfiCond522) CFA_SP SP+-4
          CFI (cfiCond523) CFA_SP SP+-4
          CFI (cfiCond524) CFA_SP SP+-4
          CFI (cfiCond525) CFA_SP SP+-4
          CFI (cfiCond526) CFA_SP SP+-4
          CFI (cfiCond527) CFA_SP SP+-4
          CFI (cfiCond528) CFA_SP SP+-4
          CFI (cfiCond529) CFA_SP SP+-4
          CFI (cfiCond530) CFA_SP SP+-4
          CFI (cfiCond531) CFA_SP SP+-4
          CFI (cfiCond532) CFA_SP SP+-4
          CFI (cfiCond533) CFA_SP SP+-4
          CFI (cfiCond534) CFA_SP SP+-4
          CFI (cfiCond535) CFA_SP SP+-4
          CFI (cfiCond536) CFA_SP SP+-4
          CFI (cfiCond537) CFA_SP SP+-4
          CFI (cfiCond538) CFA_SP SP+-4
          CFI (cfiCond539) CFA_SP SP+-4
          CFI (cfiCond540) CFA_SP SP+-4
          CFI (cfiCond541) CFA_SP SP+-4
          CFI (cfiCond542) CFA_SP SP+-4
          CFI (cfiCond543) CFA_SP SP+-9
          CFI (cfiCond544) CFA_SP SP+-9
          CFI (cfiCond545) CFA_SP SP+-9
          CFI (cfiCond546) CFA_SP SP+-9
          CFI (cfiCond547) CFA_SP SP+-9
          CFI (cfiCond548) CFA_SP SP+-4
          CFI (cfiCond549) CFA_SP SP+-4
          CFI (cfiCond550) CFA_SP SP+-5
          CFI (cfiCond551) CFA_SP SP+-4
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond555) CFA_SP SP+-4
          CFI (cfiCond556) CFA_SP SP+-4
          CFI (cfiCond557) CFA_SP SP+-6
          CFI (cfiCond558) CFA_SP SP+-6
          CFI (cfiCond559) CFA_SP SP+-6
          CFI (cfiCond560) CFA_SP SP+-6
          CFI (cfiCond561) CFA_SP SP+-6
          CFI (cfiCond562) CFA_SP SP+-6
          CFI (cfiCond563) CFA_SP SP+-6
          CFI (cfiCond564) CFA_SP SP+-6
          CFI (cfiCond565) CFA_SP SP+-6
          CFI (cfiCond566) CFA_SP SP+-6
          CFI (cfiCond567) CFA_SP SP+-6
          CFI (cfiCond568) CFA_SP SP+-6
          CFI (cfiCond569) CFA_SP SP+-6
          CFI (cfiCond570) CFA_SP SP+-6
          CFI (cfiCond571) CFA_SP SP+-11
          CFI (cfiCond572) CFA_SP SP+-6
          CFI (cfiCond573) CFA_SP SP+-6
          CFI (cfiCond574) CFA_SP SP+-4
          CFI (cfiCond575) CFA_SP SP+-4
          CFI (cfiCond576) CFA_SP SP+-4
          CFI (cfiCond577) CFA_SP SP+-4
          CFI (cfiCond578) CFA_SP SP+-4
          CFI (cfiCond579) CFA_SP SP+-4
          CFI (cfiCond580) CFA_SP SP+-4
          CFI (cfiCond581) CFA_SP SP+-4
          CFI (cfiCond582) CFA_SP SP+-4
          CFI (cfiCond583) CFA_SP SP+-4
          CFI (cfiCond584) CFA_SP SP+-4
          CFI (cfiCond585) CFA_SP SP+-4
          CFI (cfiCond586) CFA_SP SP+-4
          CFI (cfiCond587) CFA_SP SP+-4
          CFI (cfiCond588) CFA_SP SP+-4
          CFI (cfiCond589) CFA_SP SP+-4
          CFI (cfiCond590) CFA_SP SP+-4
          CFI (cfiCond591) CFA_SP SP+-4
          CFI (cfiCond592) CFA_SP SP+-4
          CFI (cfiCond593) CFA_SP SP+-4
          CFI (cfiCond594) CFA_SP SP+-4
          CFI (cfiCond595) CFA_SP SP+-4
          CFI (cfiCond596) CFA_SP SP+-4
          CFI (cfiCond597) CFA_SP SP+-4
          CFI (cfiCond598) CFA_SP SP+0
          CFI (cfiPicker599) CFA_SP SP+0
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiPicker599
// 2398 
// 2399 /*********************************************************************
// 2400  * @fn      ZDO_RemoveMatchMemory()
// 2401  *
// 2402  * @brief   Called to clear the memory used for the end device bind.
// 2403  *
// 2404  * @param  none
// 2405  *
// 2406  * @return  none
// 2407  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2408 static void ZDO_RemoveMatchMemory( void )
ZDO_RemoveMatchMemory:
          CFI Block cfiBlock600 Using cfiCommon0
          CFI Function ZDO_RemoveMatchMemory
        CODE
// 2409 {
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2410   if ( matchED != NULL )
        MOV     DPTR,#matchED
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_399:
        JZ      ??ZDO_RemoveMatchMemory_0
// 2411   {
// 2412     if ( matchED->ed2Matched != NULL )
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x35
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_334:
        JZ      ??ZDO_RemoveMatchMemory_1
// 2413     {
// 2414       osal_mem_free( matchED->ed2Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2415     }
// 2416     if ( matchED->ed1Matched != NULL )
??ZDO_RemoveMatchMemory_1:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_498:
        ADD     A,#0x32
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_335:
        JZ      ??ZDO_RemoveMatchMemory_2
// 2417     {
// 2418       osal_mem_free( matchED->ed1Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2419     }
// 2420     if ( matchED->ed1.inClusters != NULL )
??ZDO_RemoveMatchMemory_2:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_499:
        ADD     A,#0x12
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_336:
        JZ      ??ZDO_RemoveMatchMemory_3
// 2421     {
// 2422       osal_mem_free( matchED->ed1.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2423     }
// 2424     if ( matchED->ed1.outClusters != NULL )
??ZDO_RemoveMatchMemory_3:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_500:
        ADD     A,#0x15
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_337:
        JZ      ??ZDO_RemoveMatchMemory_4
// 2425     {
// 2426       osal_mem_free( matchED->ed1.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2427     }
// 2428     if ( matchED->ed2.inClusters != NULL )
??ZDO_RemoveMatchMemory_4:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_501:
        ADD     A,#0x29
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_338:
        JZ      ??ZDO_RemoveMatchMemory_5
// 2429     {
// 2430       osal_mem_free( matchED->ed2.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2431     }
// 2432     if ( matchED->ed2.outClusters != NULL )
??ZDO_RemoveMatchMemory_5:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_502:
        ADD     A,#0x2c
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_339:
        JZ      ??ZDO_RemoveMatchMemory_6
// 2433     {
// 2434       osal_mem_free( matchED->ed2.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2435     }
// 2436 
// 2437     osal_mem_free( matchED );
??ZDO_RemoveMatchMemory_6:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#matchED
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_423:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2438     matchED = (ZDMatchEndDeviceBind_t *)NULL;
        MOV     DPTR,#matchED
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2439   }
// 2440 }
??ZDO_RemoveMatchMemory_0:
          CFI EndBlock cfiBlock600
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock601 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock601
// 2441 
// 2442 /*********************************************************************
// 2443  * @fn      ZDO_CopyMatchInfo()
// 2444  *
// 2445  * @brief   Called to copy memory used for the end device bind.
// 2446  *
// 2447  * @param  srcReq - source information
// 2448  * @param  dstReq - destination location
// 2449  *
// 2450  * @return  TRUE if copy was successful.
// 2451  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2452 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
ZDO_CopyMatchInfo:
          CFI Block cfiBlock602 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
        CODE
// 2453 {
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R4
        MOV     ?V1,R5
// 2454   uint8 allOK = TRUE;
        MOV     ?V7,#0x1
// 2455 
// 2456   // Copy bind information into the match info structure
// 2457   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,R4
        MOV     ?V5,R5
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R4,#0x17
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2458 
// 2459   // Initialize the destination cluster pointers
// 2460   destReq->inClusters = NULL;
        MOV     A,R6
        ADD     A,#0x12
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_176:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2461   destReq->outClusters = NULL;
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        JNC     ??ZDO_CopyMatchInfo_0
        INC     R7
??ZDO_CopyMatchInfo_0:
        MOV     DPL,R6
        MOV     DPH,R7
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2462 
// 2463   // Copy input cluster IDs
// 2464   if ( srcReq->numInClusters )
        MOV     A,?V0
        ADD     A,#0x11
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_197:
        JZ      ??ZDO_CopyMatchInfo_1
// 2465   {
// 2466     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     DPL,?V8
        MOV     DPH,?V9
        LCALL   ??Subroutine204_0 & 0xFFFF
// 2467     if ( destReq->inClusters )
??CrossCallReturnLabel_443:
        JZ      ??ZDO_CopyMatchInfo_2
// 2468     {
// 2469       // Copy the clusters
// 2470       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2471                       (srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ?Subroutine90 & 0xFFFF
// 2472     }
??CrossCallReturnLabel_130:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_453:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        SJMP    ??ZDO_CopyMatchInfo_1
// 2473     else
// 2474     {
// 2475       allOK = FALSE;
??ZDO_CopyMatchInfo_2:
        MOV     ?V7,#0x0
// 2476     }
// 2477   }
// 2478 
// 2479   // Copy output cluster IDs
// 2480   if ( srcReq->numOutClusters )
??ZDO_CopyMatchInfo_1:
        MOV     A,?V0
        ADD     A,#0x14
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_198:
        JZ      ??ZDO_CopyMatchInfo_3
// 2481   {
// 2482     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine204_0 & 0xFFFF
// 2483     if ( destReq->outClusters )
??CrossCallReturnLabel_444:
        JZ      ??ZDO_CopyMatchInfo_4
// 2484     {
// 2485       // Copy the clusters
// 2486       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2487                       (srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ?Subroutine90 & 0xFFFF
// 2488     }
??CrossCallReturnLabel_131:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_454:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2489     else
// 2490     {
// 2491       allOK = FALSE;
// 2492     }
// 2493   }
// 2494 
// 2495   if ( allOK == FALSE )
??ZDO_CopyMatchInfo_3:
        MOV     A,?V7
        MOV     C,0xE0 /* A   */.0
        JC      ??ZDO_CopyMatchInfo_5
// 2496   {
// 2497     if ( destReq->inClusters != NULL )
??ZDO_CopyMatchInfo_6:
        MOV     DPL,?V8
        MOV     DPH,?V9
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_329:
        JZ      ??ZDO_CopyMatchInfo_7
// 2498     {
// 2499       osal_mem_free( destReq->inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2500     }
// 2501     if ( destReq->outClusters != NULL )
??ZDO_CopyMatchInfo_7:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_330:
        JZ      ??ZDO_CopyMatchInfo_5
// 2502     {
// 2503       osal_mem_free( destReq->outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2504     }
// 2505   }
// 2506 
// 2507   return ( allOK );
??ZDO_CopyMatchInfo_5:
        MOV     R1,?V7
        LJMP    ??Subroutine213_0 & 0xFFFF
??ZDO_CopyMatchInfo_4:
        MOV     ?V7,#0x0
        SJMP    ??ZDO_CopyMatchInfo_6
// 2508 }
          CFI EndBlock cfiBlock602

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond603 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDO_CopyMatchInfo
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-2
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker605 Using cfiCommon1
          CFI (cfiPicker605) NoFunction
          CFI (cfiPicker605) Picker
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V3,A
        MOV     DPL,?V2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        RET
          CFI (cfiCond603) CFA_SP SP+0
          CFI (cfiCond604) CFA_SP SP+0
          CFI (cfiPicker605) CFA_SP SP+0
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiPicker605

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond606 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_453
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDO_CopyMatchInfo
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-2
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker608 Using cfiCommon1
          CFI (cfiPicker608) NoFunction
          CFI (cfiPicker608) Picker
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiPicker608
        REQUIRE ??Subroutine208_0
        ; // Fall through to label ??Subroutine208_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine208_0:
          CFI Block cfiCond609 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_451
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-2
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_CopyMatchInfo
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-2
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_CopyMatchInfo
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-2
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker613 Using cfiCommon1
          CFI (cfiPicker613) NoFunction
          CFI (cfiPicker613) Picker
        ADD     A,0xE0 /* A   */
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        RET
          CFI (cfiCond609) CFA_SP SP+0
          CFI (cfiCond610) CFA_SP SP+0
          CFI (cfiCond611) CFA_SP SP+0
          CFI (cfiCond612) CFA_SP SP+0
          CFI (cfiPicker613) CFA_SP SP+0
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiPicker613

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond614 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_185
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-2
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-2
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-2
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDO_CopyMatchInfo
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-2
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDO_CopyMatchInfo
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-2
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-2
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-2
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        ADD     A,0xE0 /* A   */
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        RET
          CFI (cfiCond614) CFA_SP SP+0
          CFI (cfiCond615) CFA_SP SP+0
          CFI (cfiCond616) CFA_SP SP+0
          CFI (cfiCond617) CFA_SP SP+0
          CFI (cfiCond618) CFA_SP SP+0
          CFI (cfiCond619) CFA_SP SP+0
          CFI (cfiCond620) CFA_SP SP+0
          CFI (cfiCond621) CFA_SP SP+0
          CFI (cfiPicker622) CFA_SP SP+0
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_175
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDO_CopyMatchInfo
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker625 Using cfiCommon1
          CFI (cfiPicker625) NoFunction
          CFI (cfiPicker625) Picker
        MOV     ?V8,A
        CLR     A
        ADDC    A,R7
        MOV     ?V9,A
        MOV     DPL,?V8
        MOV     DPH,A
        RET
          CFI (cfiCond623) CFA_SP SP+0
          CFI (cfiCond624) CFA_SP SP+0
          CFI (cfiPicker625) CFA_SP SP+0
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiPicker625

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond626 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDO_CopyMatchInfo
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-2
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker628 Using cfiCommon1
          CFI (cfiPicker628) NoFunction
          CFI (cfiPicker628) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     R0,#?V4
        RET
          CFI (cfiCond626) CFA_SP SP+0
          CFI (cfiCond627) CFA_SP SP+0
          CFI (cfiPicker628) CFA_SP SP+0
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiPicker628
// 2509 
// 2510 /*********************************************************************
// 2511  * @fn      ZDMatchSendState()
// 2512  *
// 2513  * @brief   State machine for the End device match message algorithm.
// 2514  *
// 2515  * @param  reason - state of algoritm
// 2516  * @param  status - initial message status
// 2517  * @param  TransSeq - next transaction sequence number
// 2518  *
// 2519  * @return  FALSE if error and we are not currently matching, TRUE
// 2520  *          if success.
// 2521  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2522 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
ZDMatchSendState:
          CFI Block cfiBlock629 Using cfiCommon0
          CFI Function ZDMatchSendState
        CODE
// 2523 {
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 19
        MOV     A,#-0x13
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     ?V3,R1
        MOV     ?V6,R2
        MOV     ?V7,R3
// 2524   uint8 *dstIEEEAddr = NULL;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
// 2525   uint8 dstEP = 0xFF;
        MOV     ?V2,#-0x1
// 2526   zAddrType_t dstAddr;
// 2527   zAddrType_t destinationAddr;
// 2528   uint16 msgType;
// 2529   uint16 clusterID = 0xFFFF;
        MOV     ?V8,#-0x1
        MOV     ?V9,#-0x1
// 2530   ZDEndDeviceBind_t *ed = NULL;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
// 2531   uint8 rspStatus = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        LCALL   ?Subroutine47 & 0xFFFF
// 2532 
// 2533   if ( matchED == NULL )
??CrossCallReturnLabel_70:
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDMatchSendState_0
// 2534   {
// 2535     return ( FALSE );
// 2536   }
// 2537 
// 2538   // Check sequence number
// 2539   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
        MOV     A,#0x3
        XRL     A,?V3
        JZ      ??ZDMatchSendState_1
        MOV     A,#0x2
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_2
// 2540   {
// 2541     if ( TransSeq != matchED->transSeq )
??ZDMatchSendState_1:
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x30
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_210:
        XRL     A,?V7
        JZ      ??ZDMatchSendState_2
// 2542     {
// 2543       return( FALSE ); // ignore the message
??ZDMatchSendState_0:
        MOV     R1,#0x0
        LJMP    ??ZDMatchSendState_3 & 0xFFFF
// 2544     }
// 2545   }
// 2546 
// 2547   // turn off timer
// 2548   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
??ZDMatchSendState_2:
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV     R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
// 2549 
// 2550   if ( reason == ZDMATCH_REASON_TIMEOUT )
        MOV     A,#0x1
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_4
// 2551   {
// 2552     rspStatus = ZDP_TIMEOUT;    // The process will stop
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7b
        SJMP    ??ZDMatchSendState_5
// 2553   }
// 2554 
// 2555   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
??ZDMatchSendState_4:
        MOV     A,?V3
        JZ      ??ZDMatchSendState_6
        MOV     A,#0x3
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_7
// 2556   {
// 2557     matchED->sending = ZDMATCH_SENDING_UNBIND;
??ZDMatchSendState_6:
        MOV     DPTR,#matchED
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_92:
        MOVX    @DPTR,A
// 2558 
// 2559     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
        MOV     A,#0x3
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_8
        MOV     A,?V6
        JZ      ??ZDMatchSendState_9
// 2560     {
// 2561       rspStatus = status;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??ZDMatchSendState_5
// 2562     }
// 2563   }
// 2564   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
??ZDMatchSendState_7:
        MOV     A,#0x2
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_9
// 2565   {
// 2566     if ( status == ZDP_SUCCESS )
        MOV     A,?V6
        MOV     DPTR,#matchED
        JNZ     ??ZDMatchSendState_10
// 2567     {
// 2568       matchED->sending = ZDMATCH_SENDING_UNBIND;
        LCALL   ?Subroutine65 & 0xFFFF
// 2569     }
??CrossCallReturnLabel_93:
        SJMP    ??ZDMatchSendState_5
// 2570     else
// 2571     {
// 2572       matchED->sending = ZDMATCH_SENDING_BIND;
??ZDMatchSendState_10:
        LCALL   ??Subroutine215_0 & 0xFFFF
// 2573     }
// 2574   }
??CrossCallReturnLabel_485:
        LCALL   ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV     A,#0x2
??ZDMatchSendState_5:
        MOVX    @DPTR,A
        SJMP    ??ZDMatchSendState_9
// 2575 
// 2576   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
??ZDMatchSendState_8:
        MOV     A,?V3
        JZ      ??ZDMatchSendState_11
??ZDMatchSendState_9:
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_90:
        JNZ     ??ZDMatchSendState_11
// 2577   {
// 2578     // Move to the next cluster ID
// 2579     if ( matchED->ed1numMatched )
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x31
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_132:
        JNZ     ??ZDMatchSendState_12
// 2580     {
// 2581       matchED->ed1numMatched--;
// 2582     }
// 2583     else if ( matchED->ed2numMatched )
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x34
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_133:
        JZ      ??ZDMatchSendState_11
// 2584     {
// 2585       matchED->ed2numMatched--;
??ZDMatchSendState_12:
        DEC     A
        MOVX    @DPTR,A
// 2586     }
// 2587   }
// 2588 
// 2589   // What message do we send now
// 2590   if ( matchED->ed1numMatched )
??ZDMatchSendState_11:
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_77:
        MOV     R0,A
        MOV     DPTR,#matchED
        JZ      ??ZDMatchSendState_13
// 2591   {
// 2592     ed = &(matchED->ed1);
        LCALL   ??Subroutine198_0 & 0xFFFF
// 2593     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
??CrossCallReturnLabel_406:
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_147:
        ADD     A,#0x32
        LCALL   ?Subroutine51 & 0xFFFF
// 2594     dstIEEEAddr = matchED->ed2.ieeeAddr;
??CrossCallReturnLabel_73:
        ADD     A,#0x1d
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V5,A
// 2595     dstEP = matchED->ed2.endpoint;
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2596   }
??CrossCallReturnLabel_503:
        ADD     A,#0x25
        SJMP    ??ZDMatchSendState_14
// 2597   else if ( matchED->ed2numMatched )
??ZDMatchSendState_13:
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_438:
        MOV     R0,A
        JZ      ??ZDMatchSendState_15
// 2598   {
// 2599     ed = &(matchED->ed2);
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V1,A
// 2600     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_148:
        ADD     A,#0x35
        LCALL   ?Subroutine51 & 0xFFFF
// 2601     dstIEEEAddr = matchED->ed1.ieeeAddr;
??CrossCallReturnLabel_74:
        ADD     A,#0x6
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V5,A
// 2602     dstEP = matchED->ed1.endpoint;
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2603   }
??CrossCallReturnLabel_504:
        ADD     A,#0xe
??ZDMatchSendState_14:
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_211:
        MOV     ?V2,A
// 2604 
// 2605   dstAddr.addrMode = Addr16Bit;
??ZDMatchSendState_15:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
// 2606 
// 2607   // Send the next message
// 2608   if ( (rspStatus == ZDP_SUCCESS) && ed )
??CrossCallReturnLabel_66:
        JZ      $+5
        LJMP    ??ZDMatchSendState_16 & 0xFFFF
        MOV     A,?V0
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDMatchSendState_16 & 0xFFFF
// 2609   {
// 2610     // Send unbind/bind message to source
// 2611     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_91:
        JNZ     ??ZDMatchSendState_17
// 2612     {
// 2613       msgType = Unbind_req;
        MOV     R6,#0x22
        SJMP    ??ZDMatchSendState_18
// 2614     }
// 2615     else
// 2616     {
// 2617       msgType = Bind_req;
??ZDMatchSendState_17:
        MOV     R6,#0x21
// 2618     }
// 2619 
// 2620     dstAddr.addr.shortAddr = ed->srcAddr;
??ZDMatchSendState_18:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_435:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2621 
// 2622     // Save off the transaction sequence number
// 2623     matchED->transSeq = ZDP_TransID;
??CrossCallReturnLabel_477:
        MOV     DPTR,#ZDP_TransID
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_505:
        ADD     A,#0x30
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2624 
// 2625     destinationAddr.addrMode = Addr64Bit;
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
// 2626     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2627 
// 2628     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2629         &destinationAddr, dstEP, ed->SecurityUse );
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     A,?V0
        ADD     A,#0x6
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V5,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_168:
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP102_8
        MOV     A,R6
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   `??ZDP_BindUnbindReq::?relay`; Banked call to: ZDP_BindUnbindReq
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2630 
// 2631     // Set timeout for response
// 2632     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV     R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV     DPTR,#AIB_MaxBindingTime
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2633   }
??CrossCallReturnLabel_424:
        LCALL   `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP    ??ZDMatchSendState_19 & 0xFFFF
// 2634   else
// 2635   {
// 2636     // Send the response messages to requesting devices
// 2637     // send response to first requester
// 2638     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
??ZDMatchSendState_16:
        LCALL   ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_515:
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_437:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine12 & 0xFFFF
// 2639     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
??CrossCallReturnLabel_5:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        MOV     DPTR,#matchED
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_425:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2640 
// 2641     // send response to second requester
// 2642     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_89:
        JNZ     ??ZDMatchSendState_20
// 2643     {
// 2644       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2645       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2646     }
??CrossCallReturnLabel_506:
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_433:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_447:
        ADD     A,#0x18
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_325:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_135:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2647 
// 2648     // Process ended - release memory used
// 2649     ZDO_RemoveMatchMemory();
??ZDMatchSendState_20:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL   `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2650   }
// 2651 
// 2652   return ( TRUE );
??ZDMatchSendState_19:
        MOV     R1,#0x1
??ZDMatchSendState_3:
        MOV     A,#0x13
        LJMP    ?Subroutine7 & 0xFFFF
// 2653 }
          CFI EndBlock cfiBlock629

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond630 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-2
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-2
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-2
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-2
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-2
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDMatchSendState
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-2
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDMatchSendState
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-2
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDO_ParseAddrRsp
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-2
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker640 Using cfiCommon1
          CFI (cfiPicker640) NoFunction
          CFI (cfiPicker640) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI (cfiCond630) CFA_SP SP+0
          CFI (cfiCond631) CFA_SP SP+0
          CFI (cfiCond632) CFA_SP SP+0
          CFI (cfiCond633) CFA_SP SP+0
          CFI (cfiCond634) CFA_SP SP+0
          CFI (cfiCond635) CFA_SP SP+0
          CFI (cfiCond636) CFA_SP SP+0
          CFI (cfiCond637) CFA_SP SP+0
          CFI (cfiCond638) CFA_SP SP+0
          CFI (cfiCond639) CFA_SP SP+0
          CFI (cfiPicker640) CFA_SP SP+0
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiPicker640

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond641 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_147
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function ZDMatchSendState
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond642) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond642) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond642) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond642) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+-2
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker643 Using cfiCommon1
          CFI (cfiPicker643) NoFunction
          CFI (cfiPicker643) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_309:
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R2
        RET
          CFI (cfiCond641) CFA_SP SP+0
          CFI (cfiCond642) CFA_SP SP+0
          CFI (cfiPicker643) CFA_SP SP+0
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiPicker643

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond644 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDMatchSendState
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-2
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker646 Using cfiCommon1
          CFI (cfiPicker646) NoFunction
          CFI (cfiPicker646) Picker
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI (cfiCond644) CFA_SP SP+0
          CFI (cfiCond645) CFA_SP SP+0
          CFI (cfiPicker646) CFA_SP SP+0
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiPicker646

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond647 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDMatchSendState
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-2
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker649 Using cfiCommon1
          CFI (cfiPicker649) NoFunction
          CFI (cfiPicker649) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI (cfiCond647) CFA_SP SP+0
          CFI (cfiCond648) CFA_SP SP+0
          CFI (cfiPicker649) CFA_SP SP+0
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiPicker649

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond650 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDMatchSendState
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-2
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker652 Using cfiCommon1
          CFI (cfiPicker652) NoFunction
          CFI (cfiPicker652) Picker
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_256:
        MOV     A,#0x1
        RET
          CFI (cfiCond650) CFA_SP SP+0
          CFI (cfiCond651) CFA_SP SP+0
          CFI (cfiPicker652) CFA_SP SP+0
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiPicker652

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond653 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDMatchSendState
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-2
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker655 Using cfiCommon1
          CFI (cfiPicker655) NoFunction
          CFI (cfiPicker655) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_255:
        MOVX    A,@DPTR
        XRL     A,#0x1
        RET
          CFI (cfiCond653) CFA_SP SP+0
          CFI (cfiCond654) CFA_SP SP+0
          CFI (cfiPicker655) CFA_SP SP+0
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiPicker655

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond656 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDMatchSendState
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_93
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-4
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function ZDMatchSendState
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_90
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-4
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDMatchSendState
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_91
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-4
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker660 Using cfiCommon1
          CFI (cfiPicker660) NoFunction
          CFI (cfiPicker660) Picker
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_514:
        XCH     A,R0
        LCALL   ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_302:
        RET
          CFI (cfiCond656) CFA_SP SP+-2
          CFI (cfiCond657) CFA_SP SP+-2
          CFI (cfiCond658) CFA_SP SP+-2
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiPicker660) CFA_SP SP+0
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiPicker660

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine174:
          CFI Block cfiCond661 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_301
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDMatchSendState
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_92
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-6
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDMatchSendState
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_93
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-6
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDMatchSendState
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_90
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-6
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ZDMatchSendState
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_91
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-6
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker666 Using cfiCommon1
          CFI (cfiPicker666) NoFunction
          CFI (cfiPicker666) Picker
        ADD     A,#0x2f
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI (cfiCond661) CFA_SP SP+0
          CFI (cfiCond662) CFA_SP SP+-4
          CFI (cfiCond663) CFA_SP SP+-4
          CFI (cfiCond664) CFA_SP SP+-4
          CFI (cfiCond665) CFA_SP SP+-4
          CFI (cfiPicker666) CFA_SP SP+0
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiPicker666

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond667 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDMatchSendState
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-2
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker669 Using cfiCommon1
          CFI (cfiPicker669) NoFunction
          CFI (cfiPicker669) Picker
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_510:
        LCALL   ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_282:
        MOVX    A,@DPTR
        XRL     A,#0x2
        RET
          CFI (cfiCond667) CFA_SP SP+0
          CFI (cfiCond668) CFA_SP SP+0
          CFI (cfiPicker669) CFA_SP SP+0
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiPicker669

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine155:
          CFI Block cfiCond670 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ZDMatchSendState
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_89
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond671) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond671) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+-4
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_75
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond672) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond672) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond672) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond672) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond672) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+-4
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_76
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-4
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function ZDMatchSendState
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_77
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond674) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond674) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+-4
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker675 Using cfiCommon1
          CFI (cfiPicker675) NoFunction
          CFI (cfiPicker675) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiPicker675
        REQUIRE ??Subroutine209_0
        ; // Fall through to label ??Subroutine209_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine209_0:
          CFI Block cfiCond676 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_439
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_440
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-4
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDMatchSendState
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_438
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-4
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_507
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+-4
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_508
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-4
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_487
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+-4
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_488
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-4
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_489
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-4
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_490
          CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond684) CFA_SP SP+-4
          CFI (cfiCond684) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_491
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-4
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_492
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-4
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_493
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+-4
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_494
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+-4
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_495
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-4
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_496
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-4
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_497
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond691) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond691) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+-4
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function ZDO_RemoveMatchMemory
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_498
          CFI (cfiCond692) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond692) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond692) CFA_SP SP+-9
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ZDO_RemoveMatchMemory
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_499
          CFI (cfiCond693) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond693) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond693) CFA_SP SP+-9
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ZDO_RemoveMatchMemory
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_500
          CFI (cfiCond694) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond694) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond694) CFA_SP SP+-9
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDO_RemoveMatchMemory
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_501
          CFI (cfiCond695) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond695) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond695) CFA_SP SP+-9
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDO_RemoveMatchMemory
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_502
          CFI (cfiCond696) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond696) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond696) CFA_SP SP+-9
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ZDMatchSendState
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_503
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-4
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDMatchSendState
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_504
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-4
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDMatchSendState
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_505
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-5
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDMatchSendState
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_506
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-4
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_484
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-4
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDMatchSendState
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_485
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-4
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDO_ParseAddrRsp
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_486
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-4
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_88
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+-4
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDMatchSendState
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_89
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+-4
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_75
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-4
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_76
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-4
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDMatchSendState
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_77
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-4
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker709 Using cfiCommon1
          CFI (cfiPicker709) NoFunction
          CFI (cfiPicker709) Picker
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_518:
        XCH     A,R0
        RET
          CFI (cfiCond676) CFA_SP SP+-2
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond678) CFA_SP SP+-2
          CFI (cfiCond679) CFA_SP SP+-2
          CFI (cfiCond680) CFA_SP SP+-2
          CFI (cfiCond681) CFA_SP SP+-2
          CFI (cfiCond682) CFA_SP SP+-2
          CFI (cfiCond683) CFA_SP SP+-2
          CFI (cfiCond684) CFA_SP SP+-2
          CFI (cfiCond685) CFA_SP SP+-2
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond687) CFA_SP SP+-2
          CFI (cfiCond688) CFA_SP SP+-2
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond691) CFA_SP SP+-2
          CFI (cfiCond692) CFA_SP SP+-7
          CFI (cfiCond693) CFA_SP SP+-7
          CFI (cfiCond694) CFA_SP SP+-7
          CFI (cfiCond695) CFA_SP SP+-7
          CFI (cfiCond696) CFA_SP SP+-7
          CFI (cfiCond697) CFA_SP SP+-2
          CFI (cfiCond698) CFA_SP SP+-2
          CFI (cfiCond699) CFA_SP SP+-3
          CFI (cfiCond700) CFA_SP SP+-2
          CFI (cfiCond701) CFA_SP SP+-2
          CFI (cfiCond702) CFA_SP SP+-2
          CFI (cfiCond703) CFA_SP SP+-2
          CFI (cfiCond704) CFA_SP SP+-2
          CFI (cfiCond705) CFA_SP SP+-2
          CFI (cfiCond706) CFA_SP SP+-2
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond708) CFA_SP SP+-2
          CFI (cfiPicker709) CFA_SP SP+0
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiPicker709

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond710 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_75
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDMatchSendState
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond712) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond712) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker713 Using cfiCommon1
          CFI (cfiPicker713) NoFunction
          CFI (cfiPicker713) Picker
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_509:
        ADD     A,#0x31
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI (cfiCond710) CFA_SP SP+0
          CFI (cfiCond711) CFA_SP SP+0
          CFI (cfiCond712) CFA_SP SP+0
          CFI (cfiPicker713) CFA_SP SP+0
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiPicker713

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond714 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_73
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ZDMatchSendState
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-2
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker716 Using cfiCommon1
          CFI (cfiPicker716) NoFunction
          CFI (cfiPicker716) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x2
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V9,A
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        RET
          CFI (cfiCond714) CFA_SP SP+0
          CFI (cfiCond715) CFA_SP SP+0
          CFI (cfiPicker716) CFA_SP SP+0
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiPicker716

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond717 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function ZDMatchSendState
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond718) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond718) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond718) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond718) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-2
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker719 Using cfiCommon1
          CFI (cfiPicker719) NoFunction
          CFI (cfiPicker719) Picker
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_450:
        RET
          CFI (cfiCond717) CFA_SP SP+0
          CFI (cfiCond718) CFA_SP SP+0
          CFI (cfiPicker719) CFA_SP SP+0
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiPicker719

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond720 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ZDMatchSendState
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond721) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond721) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond721) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-2
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker722 Using cfiCommon1
          CFI (cfiPicker722) NoFunction
          CFI (cfiPicker722) Picker
        MOV     A,#0x2
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_246:
        RET
          CFI (cfiCond720) CFA_SP SP+0
          CFI (cfiCond721) CFA_SP SP+0
          CFI (cfiPicker722) CFA_SP SP+0
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiPicker722

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond723 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_25
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+-4
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ZDO_ProcessParentAnnce
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_65
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-4
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function ZDMatchSendState
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_66
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+-4
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker727 Using cfiCommon1
          CFI (cfiPicker727) NoFunction
          CFI (cfiPicker727) Picker
        LCALL   ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_286:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond723) CFA_SP SP+-2
          CFI (cfiCond724) CFA_SP SP+-2
          CFI (cfiCond725) CFA_SP SP+-2
          CFI (cfiCond726) CFA_SP SP+-2
          CFI (cfiPicker727) CFA_SP SP+0
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiPicker727

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond728 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDMatchSendState
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+-2
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker730 Using cfiCommon1
          CFI (cfiPicker730) NoFunction
          CFI (cfiPicker730) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_449:
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI (cfiCond728) CFA_SP SP+0
          CFI (cfiCond729) CFA_SP SP+0
          CFI (cfiPicker730) CFA_SP SP+0
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiPicker730
// 2654 
// 2655 /*********************************************************************
// 2656  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2657  *
// 2658  * @brief   End device bind timeout.
// 2659  *
// 2660  * @param  none
// 2661  *
// 2662  * @return  none
// 2663  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2664 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
ZDO_EndDeviceBindMatchTimeoutCB:
          CFI Block cfiBlock731 Using cfiCommon0
          CFI Function ZDO_EndDeviceBindMatchTimeoutCB
        CODE
// 2665 {
        FUNCALL ZDO_EndDeviceBindMatchTimeoutCB, ZDMatchSendState
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2666   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
        ; Setup parameters for call to function ZDMatchSendState
        MOV     R3,#0x0
        MOV     R2,#-0x7b
        MOV     R1,#0x1
        LCALL   `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2667 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock731
// 2668 #endif // ZG_BUILD_COORDINATOR_TYPE
// 2669 
// 2670 /*********************************************************************
// 2671  * ZDO MESSAGE PARSING API FUNCTIONS
// 2672  */
// 2673 
// 2674 /*********************************************************************
// 2675  * @fn          ZDO_ParseEndDeviceBindReq
// 2676  *
// 2677  * @brief       This function parses the End_Device_Bind_req message.
// 2678  *
// 2679  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2680  *            function and must be freed by that calling function.
// 2681  *
// 2682  * @param       inMsg  - incoming message (request)
// 2683  * @param       bindReq - pointer to place to parse message to
// 2684  *
// 2685  * @return      none
// 2686  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2687 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock732 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2688 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2689   uint8 *msg;
// 2690 
// 2691   // Parse the message
// 2692   bindReq->TransSeq = inMsg->TransSeq;
        MOV     A,R2
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_182:
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_222:
        LCALL   ?Subroutine30 & 0xFFFF
// 2693   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_36:
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_461:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine40 & 0xFFFF
// 2694   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_579:
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_223:
        INC     DPTR
        MOVX    @DPTR,A
// 2695   msg = inMsg->asdu;
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_154:
        LCALL   ?Subroutine74 & 0xFFFF
// 2696 
// 2697   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_103:
        LCALL   ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_540:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine33 & 0xFFFF
// 2698   msg += 2;
??CrossCallReturnLabel_43:
        JNC     ??ZDO_ParseEndDeviceBindReq_0
        INC     ?V3
// 2699 
// 2700   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??ZDO_ParseEndDeviceBindReq_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     R5,?V3
        MOV     A,R6
        ADD     A,#0x6
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2701   msg += Z_EXTADDR_LEN;
// 2702 
// 2703   bindReq->endpoint = *msg++;
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_173:
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_33:
        JNC     ??ZDO_ParseEndDeviceBindReq_1
        INC     ?V3
// 2704   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseEndDeviceBindReq_1:
        MOV     DPL,A
        MOV     DPH,?V3
        LCALL   ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_541:
        MOV     R0,A
        MOV     A,R6
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_183:
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2705   msg += 2;
// 2706 
// 2707   bindReq->inClusters = NULL;
??CrossCallReturnLabel_478:
        MOV     A,R6
        ADD     A,#0x12
        MOV     ?V4,A
        CLR     A
        ADDC    A,R7
        MOV     ?V5,A
        MOV     DPL,?V4
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2708   bindReq->outClusters = NULL;
        MOV     A,R6
        ADD     A,#0x15
        MOV     ?V6,A
        CLR     A
        ADDC    A,R7
        MOV     ?V7,A
        MOV     DPL,?V6
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine38 & 0xFFFF
// 2709 
// 2710   if ((bindReq->numInClusters = *msg++) &&
// 2711       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_54:
        MOV     R2,A
        MOV     A,R6
        ADD     A,#0x11
        MOV     ?V0,A
        CLR     A
        ADDC    A,R7
        MOV     ?V1,A
        MOV     A,R2
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    @DPTR,A
        MOV     A,?V2
        ADD     A,#0x3
        MOV     ?V2,A
        JNC     ??ZDO_ParseEndDeviceBindReq_2
        INC     ?V3
??ZDO_ParseEndDeviceBindReq_2:
        MOV     A,R2
        JZ      ??ZDO_ParseEndDeviceBindReq_3
        ; Setup parameters for call to function osal_mem_alloc
        ADD     A,R2
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     R4,?V8
        MOV     R5,?V9
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDO_ParseEndDeviceBindReq_3
// 2712   {
// 2713     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     R2,?V2
        MOV     R3,?V3
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V2,R2
        MOV     ?V3,R3
        SJMP    ??ZDO_ParseEndDeviceBindReq_4
// 2714   }
// 2715   else
// 2716   {
// 2717     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_3:
        MOV     DPL,?V0
        MOV     DPH,?V1
        CLR     A
        MOVX    @DPTR,A
// 2718   }
// 2719 
// 2720   if ((bindReq->numOutClusters = *msg++) &&
// 2721       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??ZDO_ParseEndDeviceBindReq_4:
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R6
        ADD     A,#0x14
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_58:
        MOV     ?V2,DPL
        MOV     ?V3,DPH
        JZ      ??ZDO_ParseEndDeviceBindReq_5
        ; Setup parameters for call to function osal_mem_alloc
        ADD     A,R2
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDO_ParseEndDeviceBindReq_5
// 2722   {
// 2723     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     R2,?V2
        MOV     R3,?V3
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??ZDO_ParseEndDeviceBindReq_6
// 2724   }
// 2725   else
// 2726   {
// 2727     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_5:
        MOV     DPL,R6
        MOV     DPH,R7
        CLR     A
        MOVX    @DPTR,A
// 2728   }
// 2729 }
??ZDO_ParseEndDeviceBindReq_6:
        SJMP    ??Subroutine213_0
          CFI EndBlock cfiBlock732

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond733 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_222
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-2
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker735 Using cfiCommon1
          CFI (cfiPicker735) NoFunction
          CFI (cfiPicker735) Picker
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI (cfiCond733) CFA_SP SP+0
          CFI (cfiCond734) CFA_SP SP+0
          CFI (cfiPicker735) CFA_SP SP+0
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiPicker735

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond736 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_ProcessUserDescSet
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-2
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-2
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker741 Using cfiCommon1
          CFI (cfiPicker741) NoFunction
          CFI (cfiPicker741) Picker
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_269:
        RET
          CFI (cfiCond736) CFA_SP SP+0
          CFI (cfiCond737) CFA_SP SP+0
          CFI (cfiCond738) CFA_SP SP+0
          CFI (cfiCond739) CFA_SP SP+-1
          CFI (cfiCond740) CFA_SP SP+-1
          CFI (cfiPicker741) CFA_SP SP+0
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiPicker741

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine158:
          CFI Block cfiCond742 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_81
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-4
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_162
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-4
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_163
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond745) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond745) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond745) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-4
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_170
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-4
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_ProcessUserDescSet
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_171
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-4
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_172
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-4
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_173
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-5
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_174
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-5
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDMatchSendState
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_168
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+-4
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_169
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-5
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker753 Using cfiCommon1
          CFI (cfiPicker753) NoFunction
          CFI (cfiPicker753) Picker
        ADD     A,#0xe
        MOV     DPL,A
        CLR     A
        RET
          CFI (cfiCond742) CFA_SP SP+-2
          CFI (cfiCond743) CFA_SP SP+-2
          CFI (cfiCond744) CFA_SP SP+-2
          CFI (cfiCond745) CFA_SP SP+-2
          CFI (cfiCond746) CFA_SP SP+-2
          CFI (cfiCond747) CFA_SP SP+-2
          CFI (cfiCond748) CFA_SP SP+-2
          CFI (cfiCond749) CFA_SP SP+-3
          CFI (cfiCond750) CFA_SP SP+-3
          CFI (cfiCond751) CFA_SP SP+-2
          CFI (cfiCond752) CFA_SP SP+-3
          CFI (cfiPicker753) CFA_SP SP+0
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiPicker753

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond754 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_463
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond755) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond755) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond755) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond755) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond755) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond755) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-2
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-2
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDO_ProcessParentAnnce
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond757) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-2
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker758 Using cfiCommon1
          CFI (cfiPicker758) NoFunction
          CFI (cfiPicker758) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiPicker758
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine210_0:
          CFI Block cfiCond759 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_455
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-2
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-2
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-2
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_459
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-2
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-2
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-2
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDO_ParseUserDescRsp
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-2
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond767) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond767) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond767) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-2
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond768) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-2
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond769) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-2
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_ProcessParentAnnce
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond770) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-2
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker771 Using cfiCommon1
          CFI (cfiPicker771) NoFunction
          CFI (cfiPicker771) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_470:
        RET
          CFI (cfiCond759) CFA_SP SP+0
          CFI (cfiCond760) CFA_SP SP+0
          CFI (cfiCond761) CFA_SP SP+0
          CFI (cfiCond762) CFA_SP SP+0
          CFI (cfiCond763) CFA_SP SP+0
          CFI (cfiCond764) CFA_SP SP+0
          CFI (cfiCond765) CFA_SP SP+0
          CFI (cfiCond766) CFA_SP SP+0
          CFI (cfiCond767) CFA_SP SP+0
          CFI (cfiCond768) CFA_SP SP+0
          CFI (cfiCond769) CFA_SP SP+0
          CFI (cfiCond770) CFA_SP SP+0
          CFI (cfiPicker771) CFA_SP SP+0
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiPicker771

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine171:
          CFI Block cfiCond772 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_12
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond773) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-4
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function ZDO_CompareClusterLists
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_404, ??CrossCallReturnLabel_124
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-6
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function ZDO_AnyClusterMatches
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_404, ??CrossCallReturnLabel_125
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-6
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_400
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-6
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_401
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-6
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_402
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-6
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_390
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond779) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond779) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond779) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond779) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond779) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond779) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond779) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-6
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_391
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond780) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+-6
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_392
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-6
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_393
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-6
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_394
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond783) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond783) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond783) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond783) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond783) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond783) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond783) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-6
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_395
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond784) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-6
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_396
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-6
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_397
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-6
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_398
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-6
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_RemoveMatchMemory
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_399
          CFI (cfiCond788) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond788) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond788) CFA_SP SP+-11
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDO_CompareClusterLists
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_122
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-6
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_123
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-6
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_436
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-4
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDMatchSendState
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_437
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-4
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_434
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-4
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDMatchSendState
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_435
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-4
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ZDMatchSendState
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_433
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond795) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond795) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+-4
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_463
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond796) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond796) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-4
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_464
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-4
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_465
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-4
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ZDO_ProcessParentAnnce
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_466
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond799) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond799) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond799) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-4
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ZDO_UpdateNwkStatus
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_455
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+-4
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_456
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond801) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-4
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_457
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-4
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_458
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+-4
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_459
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-4
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_460
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-4
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_461
          CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond806) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond806) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond806) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond806) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond806) CFA_SP SP+-4
          CFI (cfiCond806) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function ZDO_ParseUserDescRsp
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_462
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+-4
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker808 Using cfiCommon1
          CFI (cfiPicker808) NoFunction
          CFI (cfiPicker808) Picker
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_517:
        MOV     R1,A
        RET
          CFI (cfiCond772) CFA_SP SP+-2
          CFI (cfiCond773) CFA_SP SP+-2
          CFI (cfiCond774) CFA_SP SP+-4
          CFI (cfiCond775) CFA_SP SP+-4
          CFI (cfiCond776) CFA_SP SP+-4
          CFI (cfiCond777) CFA_SP SP+-4
          CFI (cfiCond778) CFA_SP SP+-4
          CFI (cfiCond779) CFA_SP SP+-4
          CFI (cfiCond780) CFA_SP SP+-4
          CFI (cfiCond781) CFA_SP SP+-4
          CFI (cfiCond782) CFA_SP SP+-4
          CFI (cfiCond783) CFA_SP SP+-4
          CFI (cfiCond784) CFA_SP SP+-4
          CFI (cfiCond785) CFA_SP SP+-4
          CFI (cfiCond786) CFA_SP SP+-4
          CFI (cfiCond787) CFA_SP SP+-4
          CFI (cfiCond788) CFA_SP SP+-9
          CFI (cfiCond789) CFA_SP SP+-4
          CFI (cfiCond790) CFA_SP SP+-4
          CFI (cfiCond791) CFA_SP SP+-2
          CFI (cfiCond792) CFA_SP SP+-2
          CFI (cfiCond793) CFA_SP SP+-2
          CFI (cfiCond794) CFA_SP SP+-2
          CFI (cfiCond795) CFA_SP SP+-2
          CFI (cfiCond796) CFA_SP SP+-2
          CFI (cfiCond797) CFA_SP SP+-2
          CFI (cfiCond798) CFA_SP SP+-2
          CFI (cfiCond799) CFA_SP SP+-2
          CFI (cfiCond800) CFA_SP SP+-2
          CFI (cfiCond801) CFA_SP SP+-2
          CFI (cfiCond802) CFA_SP SP+-2
          CFI (cfiCond803) CFA_SP SP+-2
          CFI (cfiCond804) CFA_SP SP+-2
          CFI (cfiCond805) CFA_SP SP+-2
          CFI (cfiCond806) CFA_SP SP+-2
          CFI (cfiCond807) CFA_SP SP+-2
          CFI (cfiPicker808) CFA_SP SP+0
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiPicker808

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond809 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-2
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker811 Using cfiCommon1
          CFI (cfiPicker811) NoFunction
          CFI (cfiPicker811) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     DPL,?V2
        MOV     DPH,A
        RET
          CFI (cfiCond809) CFA_SP SP+0
          CFI (cfiCond810) CFA_SP SP+0
          CFI (cfiPicker811) CFA_SP SP+0
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiPicker811

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond812 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_482
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-2
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker814 Using cfiCommon1
          CFI (cfiPicker814) NoFunction
          CFI (cfiPicker814) Picker
        MOV     DPL,R4
        MOV     DPH,R5
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiPicker814
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine211_0:
          CFI Block cfiCond815 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_479
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDO_ParseEPListRsp
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-2
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function ZDO_ParseUserDescRsp
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_481
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-2
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_482
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+-2
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+-2
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker820 Using cfiCommon1
          CFI (cfiPicker820) NoFunction
          CFI (cfiPicker820) Picker
        INC     DPTR
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiPicker820
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine212_0:
          CFI Block cfiCond821 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_471
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_472
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-2
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-2
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-2
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function ZDO_ProcessParentAnnce
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_475
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond825) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond825) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond825) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+-2
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+-2
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function ZDMatchSendState
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+-2
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_478
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-2
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDO_ParseAddrRsp
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_479
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-2
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ZDO_ParseEPListRsp
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+-2
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function ZDO_ParseUserDescRsp
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_481
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-2
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_482
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+-2
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond833 Using cfiCommon0
          CFI (cfiCond833) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond833) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond833) CFA_SP SP+-2
          CFI (cfiCond833) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker834 Using cfiCommon1
          CFI (cfiPicker834) NoFunction
          CFI (cfiPicker834) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI (cfiCond821) CFA_SP SP+0
          CFI (cfiCond822) CFA_SP SP+0
          CFI (cfiCond823) CFA_SP SP+0
          CFI (cfiCond824) CFA_SP SP+0
          CFI (cfiCond825) CFA_SP SP+0
          CFI (cfiCond826) CFA_SP SP+0
          CFI (cfiCond827) CFA_SP SP+0
          CFI (cfiCond828) CFA_SP SP+0
          CFI (cfiCond829) CFA_SP SP+0
          CFI (cfiCond830) CFA_SP SP+0
          CFI (cfiCond831) CFA_SP SP+0
          CFI (cfiCond832) CFA_SP SP+0
          CFI (cfiCond833) CFA_SP SP+0
          CFI (cfiPicker834) CFA_SP SP+0
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiCond833
          CFI EndBlock cfiPicker834

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock835 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Valid
          CFI EndBlock cfiBlock835
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine213_0:
          CFI Block cfiBlock836 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock836
// 2730 
// 2731 /*********************************************************************
// 2732  * @fn          ZDO_ParseBindUnbindReq
// 2733  *
// 2734  * @brief       This function parses the Bind_req or Unbind_req message.
// 2735  *
// 2736  * @param       inMsg  - incoming message (request)
// 2737  * @param       pReq - place to put parsed information
// 2738  *
// 2739  * @return      none
// 2740  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2741 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock837 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2742 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2743   uint8 *msg;
// 2744 
// 2745   msg = inMsg->asdu;
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_155:
        LCALL   ?Subroutine80 & 0xFFFF
// 2746   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_408:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2747   msg += Z_EXTADDR_LEN;
// 2748   pReq->srcEndpoint = *msg++;
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_96:
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x9
        MOV     ?V0,A
        JNC     ??ZDO_ParseBindUnbindReq_0
        INC     ?V1
// 2749   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        MOV     DPL,A
        MOV     DPH,?V1
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_78:
        LCALL   ?Subroutine36 & 0xFFFF
// 2750   msg += 2;
// 2751   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_51:
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_158:
        MOV     A,?V0
        ADD     A,#0x3
        MOV     ?V0,A
        JNC     ??ZDO_ParseBindUnbindReq_1
        INC     ?V1
// 2752   if ( pReq->dstAddress.addrMode == Addr64Bit )
??ZDO_ParseBindUnbindReq_1:
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_199:
        JNZ     ??ZDO_ParseBindUnbindReq_2
// 2753   {
// 2754     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0
        MOV     R5,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2755     msg += Z_EXTADDR_LEN;
// 2756     pReq->dstEndpoint = *msg;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine125 & 0xFFFF
// 2757   }
??CrossCallReturnLabel_201:
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??ZDO_ParseBindUnbindReq_3
// 2758   else
// 2759   {
// 2760     // copy group address
// 2761     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_2:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine81 & 0xFFFF
// 2762   }
??CrossCallReturnLabel_115:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseBindUnbindReq_3:
        MOVX    @DPTR,A
// 2763 }
        LJMP    ??Subroutine178_0 & 0xFFFF
          CFI EndBlock cfiBlock837

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond838 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-2
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker840 Using cfiCommon1
          CFI (cfiPicker840) NoFunction
          CFI (cfiPicker840) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond838) CFA_SP SP+0
          CFI (cfiCond839) CFA_SP SP+0
          CFI (cfiPicker840) CFA_SP SP+0
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiPicker840
// 2764 
// 2765 /*********************************************************************
// 2766  * @fn      ZDO_ParseAddrRsp
// 2767  *
// 2768  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2769  *          structure.
// 2770  *
// 2771  * @param   inMsg - incoming message
// 2772  *
// 2773  * @return  pointer to parsed structures.  This structure was
// 2774  *          allocated using osal_mem_alloc, so it must be freed
// 2775  *          by the calling function [osal_mem_free()].
// 2776  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2777 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock841 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2778 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2779   ZDO_NwkIEEEAddrResp_t *rsp;
// 2780   uint8 *msg;
// 2781   byte cnt = 0;
        MOV     ?V2,#0x0
// 2782 
// 2783   // Calculate the number of items in the list
// 2784   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        ADD     A,#0x10
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0xc
        JC      ??ZDO_ParseAddrRsp_0
// 2785   {
// 2786     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine215_0 & 0xFFFF
// 2787   }
??CrossCallReturnLabel_486:
        ADD     A,#0xb
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     ?V2,A
// 2788   else
// 2789   {
// 2790     cnt = 0;
// 2791   }
// 2792 
// 2793   // Make buffer
// 2794   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R0,?V2
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_304:
        MOV     A,R0
        ADD     A,#0xd
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 2795 
// 2796   if ( rsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 2797   {
// 2798     msg = inMsg->asdu;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine220_0 & 0xFFFF
// 2799 
// 2800     rsp->status = *msg++;
??CrossCallReturnLabel_551:
        MOV     R0,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine37 & 0xFFFF
// 2801     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_52:
        JZ      $+5
        LJMP    ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 2802     {
// 2803       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2804       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_2
        INC     R7
// 2805       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_542:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ??Subroutine211_0 & 0xFFFF
// 2806 
// 2807       msg += 2;
// 2808       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_479:
        MOV     A,?V0
        ADD     A,#0xb
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
// 2809 
// 2810       // StartIndex field is only present if NumAssocDev field is non-zero.
// 2811       if ( cnt > 0 )
        MOV     A,?V2
        JZ      ??ZDO_ParseAddrRsp_1
// 2812       {
// 2813         uint16 *pList = &(rsp->devList[0]);
        MOV     A,?V0
        ADD     A,#0xd
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
// 2814         byte n = cnt;
// 2815 
// 2816         rsp->numAssocDevs = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_573:
        LCALL   ?Subroutine16 & 0xFFFF
// 2817         rsp->startIndex = *msg++;
??CrossCallReturnLabel_13:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_195:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_3
        INC     R7
??ZDO_ParseAddrRsp_3:
        MOV     ?V3,?V2
// 2818 
// 2819         while ( n != 0 )
// 2820         {
// 2821           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_4:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_349:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_ParseAddrRsp_5
        INC     R1
// 2822           msg += sizeof( uint16 );
??ZDO_ParseAddrRsp_5:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_6
        INC     R7
// 2823           n--;
// 2824         }
??ZDO_ParseAddrRsp_6:
        DEC     ?V3
        MOV     A,?V3
        JNZ     ??ZDO_ParseAddrRsp_4
// 2825       }
// 2826     }
// 2827   }
// 2828 
// 2829   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
          CFI EndBlock cfiBlock841
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2830 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock842 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock842

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond843 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_507
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-2
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker845 Using cfiCommon1
          CFI (cfiPicker845) NoFunction
          CFI (cfiPicker845) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_519:
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiPicker845
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine214_0:
          CFI Block cfiCond846 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_487
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_488
          CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond847) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond847) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond847) CFA_SP SP+-2
          CFI (cfiCond847) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-2
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+-2
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond850 Using cfiCommon0
          CFI (cfiCond850) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond850) Conditional ??CrossCallReturnLabel_491
          CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond850) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond850) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond850) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond850) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond850) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond850) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond850) CFA_SP SP+-2
          CFI (cfiCond850) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_492
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+-2
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_493
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-2
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_494
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-2
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_495
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-2
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_496
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-2
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-2
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDO_RemoveMatchMemory
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond857) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond857) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond857) CFA_SP SP+-7
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ZDO_RemoveMatchMemory
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond858) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond858) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond858) CFA_SP SP+-7
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_RemoveMatchMemory
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond859) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond859) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond859) CFA_SP SP+-7
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ZDO_RemoveMatchMemory
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_501
          CFI (cfiCond860) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond860) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond860) CFA_SP SP+-7
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function ZDO_RemoveMatchMemory
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_502
          CFI (cfiCond861) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond861) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond861) CFA_SP SP+-7
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDMatchSendState
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_503
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-2
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDMatchSendState
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-2
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function ZDMatchSendState
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond865 Using cfiCommon0
          CFI (cfiCond865) Function ZDMatchSendState
          CFI (cfiCond865) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond865) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond865) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond865) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond865) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond865) CFA_SP SP+-2
          CFI (cfiCond865) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+-2
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-2
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker868 Using cfiCommon1
          CFI (cfiPicker868) NoFunction
          CFI (cfiPicker868) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiPicker868
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine215_0:
          CFI Block cfiCond869 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_484
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function ZDMatchSendState
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_485
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+-2
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function ZDO_ParseAddrRsp
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_486
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+-2
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond872 Using cfiCommon0
          CFI (cfiCond872) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond872) Conditional ??CrossCallReturnLabel_487
          CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond872) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond872) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond872) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond872) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond872) CFA_SP SP+-2
          CFI (cfiCond872) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond873 Using cfiCommon0
          CFI (cfiCond873) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond873) Conditional ??CrossCallReturnLabel_488
          CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond873) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond873) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond873) CFA_SP SP+-2
          CFI (cfiCond873) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+-2
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-2
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_491
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+-2
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_492
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_SP SP+-2
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_493
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+-2
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_494
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+-2
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_495
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+-2
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_496
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+-2
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond882) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond882) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond882) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond882) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond882) CFA_SP SP+-2
          CFI (cfiCond882) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function ZDO_RemoveMatchMemory
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond883) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond883) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond883) CFA_SP SP+-7
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDO_RemoveMatchMemory
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond884) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond884) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond884) CFA_SP SP+-7
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function ZDO_RemoveMatchMemory
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond885) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond885) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond885) CFA_SP SP+-7
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function ZDO_RemoveMatchMemory
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_501
          CFI (cfiCond886) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond886) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond886) CFA_SP SP+-7
          CFI Block cfiCond887 Using cfiCommon0
          CFI (cfiCond887) Function ZDO_RemoveMatchMemory
          CFI (cfiCond887) Conditional ??CrossCallReturnLabel_502
          CFI (cfiCond887) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond887) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond887) CFA_SP SP+-7
          CFI Block cfiCond888 Using cfiCommon0
          CFI (cfiCond888) Function ZDMatchSendState
          CFI (cfiCond888) Conditional ??CrossCallReturnLabel_503
          CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond888) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond888) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond888) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond888) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond888) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond888) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond888) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond888) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond888) CFA_SP SP+-2
          CFI (cfiCond888) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function ZDMatchSendState
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond889) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond889) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond889) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond889) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond889) CFA_SP SP+-2
          CFI (cfiCond889) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function ZDMatchSendState
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond891 Using cfiCommon0
          CFI (cfiCond891) Function ZDMatchSendState
          CFI (cfiCond891) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond891) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond891) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond891) CFA_SP SP+-2
          CFI (cfiCond891) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond892) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond892) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond892) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond892) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond892) CFA_SP SP+-2
          CFI (cfiCond892) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-2
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker894 Using cfiCommon1
          CFI (cfiPicker894) NoFunction
          CFI (cfiPicker894) Picker
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_512:
        RET
          CFI (cfiCond869) CFA_SP SP+0
          CFI (cfiCond870) CFA_SP SP+0
          CFI (cfiCond871) CFA_SP SP+0
          CFI (cfiCond872) CFA_SP SP+0
          CFI (cfiCond873) CFA_SP SP+0
          CFI (cfiCond874) CFA_SP SP+0
          CFI (cfiCond875) CFA_SP SP+0
          CFI (cfiCond876) CFA_SP SP+0
          CFI (cfiCond877) CFA_SP SP+0
          CFI (cfiCond878) CFA_SP SP+0
          CFI (cfiCond879) CFA_SP SP+0
          CFI (cfiCond880) CFA_SP SP+0
          CFI (cfiCond881) CFA_SP SP+0
          CFI (cfiCond882) CFA_SP SP+0
          CFI (cfiCond883) CFA_SP SP+-5
          CFI (cfiCond884) CFA_SP SP+-5
          CFI (cfiCond885) CFA_SP SP+-5
          CFI (cfiCond886) CFA_SP SP+-5
          CFI (cfiCond887) CFA_SP SP+-5
          CFI (cfiCond888) CFA_SP SP+0
          CFI (cfiCond889) CFA_SP SP+0
          CFI (cfiCond890) CFA_SP SP+-1
          CFI (cfiCond891) CFA_SP SP+0
          CFI (cfiCond892) CFA_SP SP+0
          CFI (cfiCond893) CFA_SP SP+0
          CFI (cfiPicker894) CFA_SP SP+0
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiCond872
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiCond887
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiPicker894

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond895 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_507
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_508
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+-4
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_121
          CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond897) CFA_SP SP+-4
          CFI (cfiCond897) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond898 Using cfiCommon0
          CFI (cfiCond898) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond898) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_120
          CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond898) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond898) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond898) CFA_SP SP+-4
          CFI (cfiCond898) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker899 Using cfiCommon1
          CFI (cfiPicker899) NoFunction
          CFI (cfiPicker899) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiCond898
          CFI EndBlock cfiPicker899
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine216_0:
          CFI Block cfiCond900 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_332
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_333
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+-4
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ZDO_RemoveMatchMemory
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_334
          CFI (cfiCond902) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond902) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond902) CFA_SP SP+-9
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function ZDO_RemoveMatchMemory
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_335
          CFI (cfiCond903) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond903) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond903) CFA_SP SP+-9
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function ZDO_RemoveMatchMemory
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_336
          CFI (cfiCond904) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond904) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond904) CFA_SP SP+-9
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function ZDO_RemoveMatchMemory
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_337
          CFI (cfiCond905) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond905) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond905) CFA_SP SP+-9
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function ZDO_RemoveMatchMemory
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_338
          CFI (cfiCond906) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond906) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond906) CFA_SP SP+-9
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_RemoveMatchMemory
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_339
          CFI (cfiCond907) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond907) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond907) CFA_SP SP+-9
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function ZDO_CopyMatchInfo
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_329
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+-4
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function ZDO_CopyMatchInfo
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_330
          CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond909) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond909) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond909) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond909) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond909) CFA_SP SP+-4
          CFI (cfiCond909) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_331
          CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond910) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond910) CFA_SP SP+-4
          CFI (cfiCond910) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_426
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+-4
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_427
          CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond912) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond912) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond912) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond912) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond912) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond912) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond912) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond912) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond912) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond912) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond912) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond912) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond912) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond912) CFA_SP SP+-4
          CFI (cfiCond912) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_428
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+-4
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_429
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+-4
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_430
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+-4
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_431
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+-4
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_432
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+-4
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function ZDO_StartDevice
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_412
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-4
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_413
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond919) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond919) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond919) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+-4
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_414
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-4
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_415
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-4
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_416
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond922) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond922) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond922) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-4
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_417
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond923) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond923) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond923) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond923) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond923) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond923) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+-4
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_418
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+-4
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_419
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond925) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond925) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-4
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_420
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-4
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_421
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-4
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_422
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-4
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function ZDO_RemoveMatchMemory
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_423
          CFI (cfiCond929) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond929) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond929) CFA_SP SP+-9
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDMatchSendState
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_424
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond930) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond930) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond930) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond930) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond930) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+-4
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function ZDMatchSendState
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_425
          CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond931) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond931) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond931) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond931) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond931) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond931) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond931) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond931) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond931) CFA_SP SP+-4
          CFI (cfiCond931) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_507
          CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond932) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond932) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond932) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond932) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond932) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond932) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond932) CFA_SP SP+-4
          CFI (cfiCond932) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_508
          CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond933) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond933) CFA_SP SP+-4
          CFI (cfiCond933) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_121
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+-4
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_120
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-4
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker936 Using cfiCommon1
          CFI (cfiPicker936) NoFunction
          CFI (cfiPicker936) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
          CFI (cfiCond900) CFA_SP SP+-2
          CFI (cfiCond901) CFA_SP SP+-2
          CFI (cfiCond902) CFA_SP SP+-7
          CFI (cfiCond903) CFA_SP SP+-7
          CFI (cfiCond904) CFA_SP SP+-7
          CFI (cfiCond905) CFA_SP SP+-7
          CFI (cfiCond906) CFA_SP SP+-7
          CFI (cfiCond907) CFA_SP SP+-7
          CFI (cfiCond908) CFA_SP SP+-2
          CFI (cfiCond909) CFA_SP SP+-2
          CFI (cfiCond910) CFA_SP SP+-2
          CFI (cfiCond911) CFA_SP SP+-2
          CFI (cfiCond912) CFA_SP SP+-2
          CFI (cfiCond913) CFA_SP SP+-2
          CFI (cfiCond914) CFA_SP SP+-2
          CFI (cfiCond915) CFA_SP SP+-2
          CFI (cfiCond916) CFA_SP SP+-2
          CFI (cfiCond917) CFA_SP SP+-2
          CFI (cfiCond918) CFA_SP SP+-2
          CFI (cfiCond919) CFA_SP SP+-2
          CFI (cfiCond920) CFA_SP SP+-2
          CFI (cfiCond921) CFA_SP SP+-2
          CFI (cfiCond922) CFA_SP SP+-2
          CFI (cfiCond923) CFA_SP SP+-2
          CFI (cfiCond924) CFA_SP SP+-2
          CFI (cfiCond925) CFA_SP SP+-2
          CFI (cfiCond926) CFA_SP SP+-2
          CFI (cfiCond927) CFA_SP SP+-2
          CFI (cfiCond928) CFA_SP SP+-2
          CFI (cfiCond929) CFA_SP SP+-7
          CFI (cfiCond930) CFA_SP SP+-2
          CFI (cfiCond931) CFA_SP SP+-2
          CFI (cfiCond932) CFA_SP SP+-2
          CFI (cfiCond933) CFA_SP SP+-2
          CFI (cfiCond934) CFA_SP SP+-2
          CFI (cfiCond935) CFA_SP SP+-2
          CFI (cfiPicker936) CFA_SP SP+0
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiPicker936
// 2831 
// 2832 /*********************************************************************
// 2833  * @fn          ZDO_ParseNodeDescRsp
// 2834  *
// 2835  * @brief       This function parses the Node_Desc_rsp message.
// 2836  *
// 2837  * @param       inMsg - incoming message
// 2838  * @param       pNDRsp - place to parse the message into
// 2839  *
// 2840  * @return      none
// 2841  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2842 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock937 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 2843 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2844   uint8 *msg;
// 2845 
// 2846   msg = inMsg->asdu;
        LCALL   ?Subroutine10 & 0xFFFF
// 2847 
// 2848   pNDRsp->status = *msg++;
// 2849   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2850 
// 2851   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_0:
        JZ      $+5
        LJMP    ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 2852   {
// 2853     msg += 2;
// 2854     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
        MOV     A,R0
        LCALL   ??Subroutine192_0 & 0xFFFF
??CrossCallReturnLabel_373:
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x3
        MOV     R6,A
        CLR     A
        ADDC    A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     ?V0,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0xf8
        ORL     A,?V0
        LCALL   ?Subroutine26 & 0xFFFF
// 2855 
// 2856     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_28:
        MOV     C,0xE0 /* A   */.3
        CLR     A
        RLC     A
        MOV     ?V0,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        MOV     DPH,R7
        MOV     DPL,R6
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.3,C
        LCALL   ?Subroutine26 & 0xFFFF
// 2857     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_29:
        MOV     C,0xE0 /* A   */.4
        CLR     A
        RLC     A
        MOV     ?V1,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        MOV     DPH,R7
        MOV     DPL,R6
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.4,C
        MOVX    @DPTR,A
// 2858 
// 2859     msg++;  // Reserved bits.
// 2860     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV     A,R0
        ADD     A,#0x3
        INC     R2
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x4
        INC     R6
        CLR     A
        ADDC    A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf8
        MOV     ?V2,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0x7
        ORL     A,?V2
        MOV     ?V2,A
        LCALL   ?Subroutine26 & 0xFFFF
// 2861     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_30:
        ANL     A,#0x7
        MOV     R2,A
        MOV     A,#-0x8
        ANL     A,?V2
        ORL     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine34 & 0xFFFF
// 2862     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_45:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine35 & 0xFFFF
// 2863     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_48:
        INC     DPTR
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_577:
        LCALL   ?Subroutine31 & 0xFFFF
// 2864     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_39:
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_136:
        LCALL   ?Subroutine31 & 0xFFFF
// 2865     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_40:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_578:
        LCALL   ?Subroutine20 & 0xFFFF
// 2866     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_21:
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_137:
        LCALL   ?Subroutine20 & 0xFFFF
// 2867     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_22:
        INC     DPTR
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_138:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0xa
        MOV     R0,A
        JNC     ??ZDO_ParseNodeDescRsp_1
        INC     R1
// 2868     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseNodeDescRsp_1:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_261:
        MOV     R3,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R4
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        LCALL   ??Subroutine188_0 & 0xFFFF
// 2869     msg += 2;
// 2870     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_357:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        ADD     A,#0xd
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine35 & 0xFFFF
// 2871     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
// 2872     pNDRsp->nodeDesc.DescriptorCapability = *msg;
// 2873   }
??CrossCallReturnLabel_49:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_174:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_46:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_184:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2874 }
??ZDO_ParseNodeDescRsp_0:
          CFI EndBlock cfiBlock937
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock938 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock938

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond939 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_259
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-2
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_139
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-4
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_140
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-4
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-2
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-2
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_0
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-4
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_1
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-4
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_106
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-4
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_107
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-4
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker949 Using cfiCommon1
          CFI (cfiPicker949) NoFunction
          CFI (cfiPicker949) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond939) CFA_SP SP+0
          CFI (cfiCond940) CFA_SP SP+0
          CFI (cfiCond941) CFA_SP SP+-2
          CFI (cfiCond942) CFA_SP SP+-2
          CFI (cfiCond943) CFA_SP SP+0
          CFI (cfiCond944) CFA_SP SP+0
          CFI (cfiCond945) CFA_SP SP+-2
          CFI (cfiCond946) CFA_SP SP+-2
          CFI (cfiCond947) CFA_SP SP+-2
          CFI (cfiCond948) CFA_SP SP+-2
          CFI (cfiPicker949) CFA_SP SP+0
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiPicker949

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond950 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-2
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-2
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker953 Using cfiCommon1
          CFI (cfiPicker953) NoFunction
          CFI (cfiPicker953) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI (cfiCond950) CFA_SP SP+0
          CFI (cfiCond951) CFA_SP SP+0
          CFI (cfiCond952) CFA_SP SP+0
          CFI (cfiPicker953) CFA_SP SP+0
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiPicker953

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond954 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-2
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+-2
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker957 Using cfiCommon1
          CFI (cfiPicker957) NoFunction
          CFI (cfiPicker957) Picker
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_249:
        RET
          CFI (cfiCond954) CFA_SP SP+0
          CFI (cfiCond955) CFA_SP SP+0
          CFI (cfiCond956) CFA_SP SP+0
          CFI (cfiPicker957) CFA_SP SP+0
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiPicker957

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond958 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_48
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+-4
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_49
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+-4
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_45
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+-4
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond962 Using cfiCommon0
          CFI (cfiCond962) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond962) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_46
          CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond962) CFA_SP SP+-4
          CFI (cfiCond962) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker963 Using cfiCommon1
          CFI (cfiPicker963) NoFunction
          CFI (cfiPicker963) Picker
        LCALL   ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_292:
        RET
          CFI (cfiCond958) CFA_SP SP+-2
          CFI (cfiCond959) CFA_SP SP+-2
          CFI (cfiCond960) CFA_SP SP+-2
          CFI (cfiCond961) CFA_SP SP+-2
          CFI (cfiCond962) CFA_SP SP+-2
          CFI (cfiPicker963) CFA_SP SP+0
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiCond962
          CFI EndBlock cfiPicker963

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine167:
          CFI Block cfiCond964 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_48
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+-6
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond966 Using cfiCommon0
          CFI (cfiCond966) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond966) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_49
          CFI (cfiCond966) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond966) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond966) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond966) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond966) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond966) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond966) CFA_SP SP+-6
          CFI (cfiCond966) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_45
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+-6
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_46
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+-6
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_39
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-6
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond970 Using cfiCommon0
          CFI (cfiCond970) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond970) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_40
          CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond970) CFA_SP SP+-6
          CFI (cfiCond970) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_21
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+-6
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_22
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+-6
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker973 Using cfiCommon1
          CFI (cfiPicker973) NoFunction
          CFI (cfiPicker973) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond964) CFA_SP SP+-4
          CFI (cfiCond965) CFA_SP SP+-4
          CFI (cfiCond966) CFA_SP SP+-4
          CFI (cfiCond967) CFA_SP SP+-4
          CFI (cfiCond968) CFA_SP SP+-4
          CFI (cfiCond969) CFA_SP SP+-4
          CFI (cfiCond970) CFA_SP SP+-4
          CFI (cfiCond971) CFA_SP SP+-4
          CFI (cfiCond972) CFA_SP SP+-4
          CFI (cfiPicker973) CFA_SP SP+0
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiPicker973

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond974 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+-2
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker976 Using cfiCommon1
          CFI (cfiPicker976) NoFunction
          CFI (cfiPicker976) Picker
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_250:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond974) CFA_SP SP+0
          CFI (cfiCond975) CFA_SP SP+0
          CFI (cfiPicker976) CFA_SP SP+0
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiPicker976

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond977 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-2
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker979 Using cfiCommon1
          CFI (cfiPicker979) NoFunction
          CFI (cfiPicker979) Picker
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_231:
        RET
          CFI (cfiCond977) CFA_SP SP+0
          CFI (cfiCond978) CFA_SP SP+0
          CFI (cfiPicker979) CFA_SP SP+0
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiPicker979

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond980 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond981 Using cfiCommon0
          CFI (cfiCond981) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond981) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_40
          CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond981) CFA_SP SP+-4
          CFI (cfiCond981) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_21
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+-4
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond983 Using cfiCommon0
          CFI (cfiCond983) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond983) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_22
          CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond983) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond983) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond983) CFA_SP SP+-4
          CFI (cfiCond983) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker984 Using cfiCommon1
          CFI (cfiPicker984) NoFunction
          CFI (cfiPicker984) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_293:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond980) CFA_SP SP+-2
          CFI (cfiCond981) CFA_SP SP+-2
          CFI (cfiCond982) CFA_SP SP+-2
          CFI (cfiCond983) CFA_SP SP+-2
          CFI (cfiPicker984) CFA_SP SP+0
          CFI EndBlock cfiCond980
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiCond983
          CFI EndBlock cfiPicker984

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond985 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+-2
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-2
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-2
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker989 Using cfiCommon1
          CFI (cfiPicker989) NoFunction
          CFI (cfiPicker989) Picker
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_289:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond985) CFA_SP SP+0
          CFI (cfiCond986) CFA_SP SP+0
          CFI (cfiCond987) CFA_SP SP+0
          CFI (cfiCond988) CFA_SP SP+0
          CFI (cfiPicker989) CFA_SP SP+0
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiPicker989

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond990 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond991) CFA_SP SP+-2
          CFI (cfiCond991) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker992 Using cfiCommon1
          CFI (cfiPicker992) NoFunction
          CFI (cfiPicker992) Picker
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_232:
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond990) CFA_SP SP+0
          CFI (cfiCond991) CFA_SP SP+0
          CFI (cfiPicker992) CFA_SP SP+0
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiPicker992
// 2875 
// 2876 /*********************************************************************
// 2877  * @fn          ZDO_ParsePowerDescRsp
// 2878  *
// 2879  * @brief       This function parses the Power_Desc_rsp message.
// 2880  *
// 2881  * @param       inMsg  - incoming message
// 2882  * @param       pNPRsp - place to parse the message into
// 2883  *
// 2884  * @return      none
// 2885  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2886 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock993 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 2887 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2888   uint8 *msg;
// 2889 
// 2890   msg = inMsg->asdu;
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_156:
        LCALL   ?Subroutine83 & 0xFFFF
// 2891   pNPRsp->status = *msg++;
??CrossCallReturnLabel_120:
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_574:
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_241:
        MOV     R2,DPL
        MOV     R3,DPH
// 2892   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_262:
        MOV     R1,A
        MOV     A,R6
        LCALL   ?Subroutine41 & 0xFFFF
// 2893 
// 2894   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_482:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??ZDO_ParsePowerDescRsp_0 & 0xFFFF
// 2895   {
// 2896     msg += 2;
// 2897     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV     A,R2
        ADD     A,#0x2
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R4
        ADD     A,#0x3
        CLR     A
        ADDC    A,R5
        INC     R4
        INC     R4
        INC     R4
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     ?V1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,?V2
        ORL     A,?V0
        MOV     R1,?V3
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine23 & 0xFFFF
// 2898     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
// 2899     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
// 2900     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 2901   }
??CrossCallReturnLabel_23:
        MOV     A,?V0
        ORL     A,R0
        MOV     ?V0,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_580:
        ADD     A,#0x3
        CLR     A
        ADDC    A,R3
        INC     R6
        MOV     R7,A
        MOV     A,?V0
        MOV     ?V2,A
        MOV     A,R1
        ANL     A,#0xf
        MOV     ?V3,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,?V3
        ORL     A,?V1
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,?V2
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_24:
        MOV     A,R2
        ADD     A,#0x4
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xf0
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,R1
        MOVX    @DPTR,A
// 2902 }
??ZDO_ParsePowerDescRsp_0:
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock993

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond994 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond995 Using cfiCommon0
          CFI (cfiCond995) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond995) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond995) CFA_SP SP+-2
          CFI (cfiCond995) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond996 Using cfiCommon0
          CFI (cfiCond996) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond996) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond996) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond996) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond996) CFA_SP SP+-2
          CFI (cfiCond996) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond997 Using cfiCommon0
          CFI (cfiCond997) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond997) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond997) CFA_SP SP+-2
          CFI (cfiCond997) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker998 Using cfiCommon1
          CFI (cfiPicker998) NoFunction
          CFI (cfiPicker998) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_297:
        RET
          CFI (cfiCond994) CFA_SP SP+0
          CFI (cfiCond995) CFA_SP SP+0
          CFI (cfiCond996) CFA_SP SP+0
          CFI (cfiCond997) CFA_SP SP+0
          CFI (cfiPicker998) CFA_SP SP+0
          CFI EndBlock cfiCond994
          CFI EndBlock cfiCond995
          CFI EndBlock cfiCond996
          CFI EndBlock cfiCond997
          CFI EndBlock cfiPicker998

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine172:
          CFI Block cfiCond999 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_155
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+-4
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_156
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+-4
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1002 Using cfiCommon0
          CFI (cfiCond1002) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_157
          CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1002) CFA_SP SP+-4
          CFI (cfiCond1002) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1003 Using cfiCommon0
          CFI (cfiCond1003) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_0
          CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1003) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1003) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1003) CFA_SP SP+-4
          CFI (cfiCond1003) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_1
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+-4
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_549
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-6
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_550
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-6
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function ZDO_ParseEPListRsp
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_113
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+-6
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_114
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+-6
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function ZDO_ProcessParentAnnce
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_149
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1009) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1009) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1009) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1009) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+-6
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_150
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+-6
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_151
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-6
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_152
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-6
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_153
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1013) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1013) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1013) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1013) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1013) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1013) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1013) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1013) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+-6
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_86
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-6
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function ZDO_ParseParentAnnce
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_87
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-6
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1016 Using cfiCommon1
          CFI (cfiPicker1016) NoFunction
          CFI (cfiPicker1016) Picker
        MOV     A,R2
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        RET
          CFI (cfiCond999) CFA_SP SP+-2
          CFI (cfiCond1000) CFA_SP SP+-2
          CFI (cfiCond1001) CFA_SP SP+-2
          CFI (cfiCond1002) CFA_SP SP+-2
          CFI (cfiCond1003) CFA_SP SP+-2
          CFI (cfiCond1004) CFA_SP SP+-2
          CFI (cfiCond1005) CFA_SP SP+-4
          CFI (cfiCond1006) CFA_SP SP+-4
          CFI (cfiCond1007) CFA_SP SP+-4
          CFI (cfiCond1008) CFA_SP SP+-4
          CFI (cfiCond1009) CFA_SP SP+-4
          CFI (cfiCond1010) CFA_SP SP+-4
          CFI (cfiCond1011) CFA_SP SP+-4
          CFI (cfiCond1012) CFA_SP SP+-4
          CFI (cfiCond1013) CFA_SP SP+-4
          CFI (cfiCond1014) CFA_SP SP+-4
          CFI (cfiCond1015) CFA_SP SP+-4
          CFI (cfiPicker1016) CFA_SP SP+0
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiPicker1016

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond1017 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+-2
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1019 Using cfiCommon1
          CFI (cfiPicker1019) NoFunction
          CFI (cfiPicker1019) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_520:
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI (cfiCond1017) CFA_SP SP+0
          CFI (cfiCond1018) CFA_SP SP+0
          CFI (cfiPicker1019) CFA_SP SP+0
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiPicker1019

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond1020 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-2
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1022 Using cfiCommon1
          CFI (cfiPicker1022) NoFunction
          CFI (cfiPicker1022) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_558:
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R0,A
        RET
          CFI (cfiCond1020) CFA_SP SP+0
          CFI (cfiCond1021) CFA_SP SP+0
          CFI (cfiPicker1022) CFA_SP SP+0
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiPicker1022
// 2903 
// 2904 /*********************************************************************
// 2905  * @fn          ZDO_ParseSimpleDescRsp
// 2906  *
// 2907  * @brief       This function parse the Simple_Desc_rsp message.
// 2908  *
// 2909  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 2910  *         in the SimpleDescriptionFormat_t structure are allocated
// 2911  *         and the calling function needs to free [osal_msg_free()]
// 2912  *         these buffers.
// 2913  *
// 2914  * @param       inMsg  - incoming message
// 2915  * @param       pSimpleDescRsp - place to parse the message into
// 2916  *
// 2917  * @return      none
// 2918  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2919 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock1023 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 2920 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2921   uint8 *msg;
// 2922 
// 2923   msg = inMsg->asdu;
        LCALL   ?Subroutine10 & 0xFFFF
// 2924   pSimpleDescRsp->status = *msg++;
// 2925   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2926   msg += sizeof ( uint16 );
// 2927   msg++; // Skip past the length field.
// 2928 
// 2929   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_1:
        JNZ     ??ZDO_ParseSimpleDescRsp_0
// 2930   {
// 2931     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV     A,R4
        ADD     A,#0x3
        MOV     R4,A
        JNC     ??ZDO_ParseSimpleDescRsp_1
        INC     R5
??ZDO_ParseSimpleDescRsp_1:
        MOV     A,R0
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   `??ZDO_ParseSimpleDescBuf::?relay`; Banked call to: ZDO_ParseSimpleDescBuf
// 2932   }
// 2933 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock1023

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond1024 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_SP SP+-2
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1026 Using cfiCommon1
          CFI (cfiPicker1026) NoFunction
          CFI (cfiPicker1026) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_296:
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_377:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_263:
        MOV     R3,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_238:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1024) CFA_SP SP+0
          CFI (cfiCond1025) CFA_SP SP+0
          CFI (cfiPicker1026) CFA_SP SP+0
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiPicker1026
// 2934 
// 2935 /*********************************************************************
// 2936  * @fn          ZDO_ParseEPListRsp
// 2937  *
// 2938  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 2939  *
// 2940  * @param       inMsg  - incoming message
// 2941  *
// 2942  * @return      none
// 2943  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2944 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock1027 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 2945 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2946   ZDO_ActiveEndpointRsp_t *pRsp;
// 2947   uint8 *msg;
// 2948   uint8 Status;
// 2949   uint8 cnt;
// 2950 
// 2951   msg = inMsg->asdu;
        LCALL   ?Subroutine79 & 0xFFFF
// 2952   Status = *msg++;
??CrossCallReturnLabel_113:
        MOV     ?V5,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
// 2953   cnt = msg[2];
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
// 2954 
// 2955   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        MOV     ?V0,A
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_561:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     R6,?V6
        MOV     R7,?V7
// 2956   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseEPListRsp_0
// 2957   {
// 2958     pRsp->status = Status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V5
        MOVX    @DPTR,A
// 2959     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_109:
        MOV     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine211_0 & 0xFFFF
// 2960     msg += sizeof( uint16 );
// 2961     pRsp->cnt = cnt;
??CrossCallReturnLabel_480:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V4
        LCALL   ?Subroutine39 & 0xFFFF
// 2962     msg++; // pass cnt
// 2963     osal_memcpy( pRsp->epList, msg, cnt );
// 2964   }
??CrossCallReturnLabel_56:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R4,?V0
        MOV     R5,#0x0
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_565:
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 2965 
// 2966   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LJMP    ??Subroutine194_0 & 0xFFFF
// 2967 }
          CFI EndBlock cfiBlock1027

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond1028 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function ZDO_ParseEPListRsp
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+-2
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+-2
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1031 Using cfiCommon1
          CFI (cfiPicker1031) NoFunction
          CFI (cfiPicker1031) Picker
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_251:
        RET
          CFI (cfiCond1028) CFA_SP SP+0
          CFI (cfiCond1029) CFA_SP SP+0
          CFI (cfiCond1030) CFA_SP SP+0
          CFI (cfiPicker1031) CFA_SP SP+0
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiPicker1031

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond1032 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function ZDO_ParseEPListRsp
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_56
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1033) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-4
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_57
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+-4
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_54
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+-4
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_55
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1036) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-4
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1037 Using cfiCommon1
          CFI (cfiPicker1037) NoFunction
          CFI (cfiPicker1037) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        RET
          CFI (cfiCond1032) CFA_SP SP+-2
          CFI (cfiCond1033) CFA_SP SP+-2
          CFI (cfiCond1034) CFA_SP SP+-2
          CFI (cfiCond1035) CFA_SP SP+-2
          CFI (cfiCond1036) CFA_SP SP+-2
          CFI (cfiPicker1037) CFA_SP SP+0
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiPicker1037
// 2968 
// 2969 /*********************************************************************
// 2970  * @fn          ZDO_ParseServerDiscRsp
// 2971  *
// 2972  * @brief       Parse the Server_Discovery_rsp message.
// 2973  *
// 2974  * @param       inMsg - incoming message.
// 2975  * @param       pRsp - place to put the parsed information.
// 2976  *
// 2977  * @return      none
// 2978  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2979 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock1038 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 2980 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2981   pRsp->status = inMsg->asdu[0];
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_575:
        LCALL   ?Subroutine43 & 0xFFFF
// 2982   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_64:
        LCALL   ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_380:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        LCALL   ?Subroutine41 & 0xFFFF
// 2983 }
??CrossCallReturnLabel_483:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock1038

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond1039 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1040) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1040) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1040) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1040) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1040) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1040) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1040) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1040) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1040) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+-2
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1041) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1041) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1041) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1041) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1041) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1041) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1041) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1041) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-2
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1042 Using cfiCommon0
          CFI (cfiCond1042) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1042) CFA_SP SP+-2
          CFI (cfiCond1042) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1043 Using cfiCommon1
          CFI (cfiPicker1043) NoFunction
          CFI (cfiPicker1043) Picker
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_243:
        RET
          CFI (cfiCond1039) CFA_SP SP+0
          CFI (cfiCond1040) CFA_SP SP+0
          CFI (cfiCond1041) CFA_SP SP+0
          CFI (cfiCond1042) CFA_SP SP+0
          CFI (cfiPicker1043) CFA_SP SP+0
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiPicker1043

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond1044 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_32
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_SP SP+-4
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_61
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1046) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1046) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1046) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1046) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1046) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1046) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1046) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+-4
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1047 Using cfiCommon0
          CFI (cfiCond1047) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_62
          CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1047) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1047) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1047) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1047) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1047) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1047) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1047) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1047) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1047) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1047) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1047) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1047) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1047) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1047) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1047) CFA_SP SP+-4
          CFI (cfiCond1047) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_63
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1048) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1048) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1048) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1048) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1048) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1048) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1048) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1048) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1048) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1048) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1048) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+-4
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_64
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-4
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_59
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1050) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1050) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1050) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-4
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_60
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1051) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1051) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1051) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+-4
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1052 Using cfiCommon1
          CFI (cfiPicker1052) NoFunction
          CFI (cfiPicker1052) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1044) CFA_SP SP+-2
          CFI (cfiCond1045) CFA_SP SP+-2
          CFI (cfiCond1046) CFA_SP SP+-2
          CFI (cfiCond1047) CFA_SP SP+-2
          CFI (cfiCond1048) CFA_SP SP+-2
          CFI (cfiCond1049) CFA_SP SP+-2
          CFI (cfiCond1050) CFA_SP SP+-2
          CFI (cfiCond1051) CFA_SP SP+-2
          CFI (cfiPicker1052) CFA_SP SP+0
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiPicker1052
// 2984 
// 2985 /*********************************************************************
// 2986  * @fn          ZDO_ParseMgmtLqiRsp
// 2987  *
// 2988  * @brief       This function parses the incoming Management
// 2989  *              LQI response
// 2990  *
// 2991  * @param       inMsg - incoming message
// 2992  *
// 2993  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2994  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2995  *          by the calling function [osal_mem_free()].
// 2996  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2997 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock1053 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 2998 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2999   ZDO_MgmtLqiRsp_t *pRsp;
// 3000   uint8 status;
// 3001   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 3002   uint8 neighborLqiCount = 0;
        MOV     ?V4,#0x0
// 3003   uint8 neighborLqiEntries = 0;
        MOV     ?V6,#0x0
// 3004   uint8 *msg;
// 3005 
// 3006   msg = inMsg->asdu;
        LCALL   ?Subroutine62 & 0xFFFF
// 3007 
// 3008   status = *msg++;
??CrossCallReturnLabel_549:
        MOV     ?V7,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3009   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtLqiRsp_0
// 3010   {
// 3011     neighborLqiEntries = *msg++;
        MOVX    A,@DPTR
        MOV     ?V6,A
// 3012     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
// 3013     neighborLqiCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_0
        INC     R7
// 3014   }
// 3015 
// 3016   // Allocate a buffer big enough to handle the list.
// 3017   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 3018             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( ZDP_MgmtLqiItem_t )) );
??ZDO_ParseMgmtLqiRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x1a
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_213:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 3019   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_1 & 0xFFFF
// 3020   {
// 3021     uint8 x;
// 3022     ZDP_MgmtLqiItem_t *pList = pRsp->list;
        LCALL   ?Subroutine128 & 0xFFFF
// 3023     pRsp->status = status;
??CrossCallReturnLabel_216:
        LCALL   ?Subroutine11 & 0xFFFF
// 3024     pRsp->neighborLqiEntries = neighborLqiEntries;
// 3025     pRsp->startIndex = startIndex;
// 3026     pRsp->neighborLqiCount = neighborLqiCount;
// 3027 
// 3028     for ( x = 0; x < neighborLqiCount; x++ )
??CrossCallReturnLabel_2:
        LJMP    ??ZDO_ParseMgmtLqiRsp_2 & 0xFFFF
// 3029     {
// 3030       uint8 tmp;
// 3031 
// 3032       pList->panID = 0; // This isn't in the record, why is it in the structure?
??ZDO_ParseMgmtLqiRsp_3:
        MOV     DPL,?V0
        MOV     DPH,?V1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 3033       osal_cpyExtAddr(pList->extPanID, msg);   //Copy extended PAN ID
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_374:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3034       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_4
        INC     R7
// 3035 
// 3036       osal_cpyExtAddr(pList->extAddr, msg);   //Copy extended address
??ZDO_ParseMgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
        LCALL   ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_536:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3037       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_5
        INC     R7
// 3038 
// 3039       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtLqiRsp_5:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_543:
        MOV     R0,A
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_525:
        MOV     A,R0
        LCALL   ?Subroutine21 & 0xFFFF
// 3040       msg += 2;
// 3041 
// 3042       tmp = *msg++;
??CrossCallReturnLabel_554:
        MOV     R0,A
// 3043       pList->devType = tmp & 0x03;
        MOV     A,#0x3
        ANL     A,R0
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x14
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_526:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3044       pList->rxOnIdle = (tmp >> 2) & 0x03;
        MOV     A,R0
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_527:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3045       pList->relation = (tmp >> 4) & 0x07;
        MOV     A,R0
        SWAP    A
        ANL     A,#0xf
        ANL     A,#0x7
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x16
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_528:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
// 3046 
// 3047       pList->permit = (*msg++) & 0x03;
??CrossCallReturnLabel_14:
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x17
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_529:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine142 & 0xFFFF
// 3048 
// 3049       pList->depth = *msg++;
??CrossCallReturnLabel_247:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x18
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_530:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine32 & 0xFFFF
// 3050 
// 3051       pList->lqi = *msg++;
??CrossCallReturnLabel_42:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x19
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_531:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x6
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_6
        INC     R7
// 3052       pList++;
??ZDO_ParseMgmtLqiRsp_6:
        MOV     A,?V0
        ADD     A,#0x1a
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmtLqiRsp_7
        INC     ?V1
// 3053     }
??ZDO_ParseMgmtLqiRsp_7:
        INC     ?V5
??ZDO_ParseMgmtLqiRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_3 & 0xFFFF
// 3054   }
// 3055 
// 3056   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_1:
        LJMP    ?Subroutine3 & 0xFFFF
// 3057 }
          CFI EndBlock cfiBlock1053

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond1054 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_524
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1055 Using cfiCommon0
          CFI (cfiCond1055) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1055) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1055) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1055) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1055) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1055) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1055) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1055) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1055) CFA_SP SP+-2
          CFI (cfiCond1055) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_526
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1056) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1056) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1056) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_527
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1057) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1058 Using cfiCommon0
          CFI (cfiCond1058) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1058) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1058) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1058) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1058) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1058) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1058) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1058) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1059 Using cfiCommon0
          CFI (cfiCond1059) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1059) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1059) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1059) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1059) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1059) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1059) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1059) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1059) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1060 Using cfiCommon0
          CFI (cfiCond1060) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1060) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1060) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1060) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1060) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1060) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_531
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1061) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1062) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1063 Using cfiCommon0
          CFI (cfiCond1063) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1063) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1063) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1063) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1063) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1063) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1064 Using cfiCommon1
          CFI (cfiPicker1064) NoFunction
          CFI (cfiPicker1064) Picker
        MOV     DPL,A
        CLR     A
          CFI EndBlock cfiCond1054
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiCond1058
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiPicker1064
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine217_0:
          CFI Block cfiCond1065 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_523
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1066 Using cfiCommon0
          CFI (cfiCond1066) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_524
          CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1066) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1066) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1066) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1066) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1066) CFA_SP SP+-2
          CFI (cfiCond1066) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1067 Using cfiCommon0
          CFI (cfiCond1067) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1067) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1067) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1067) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1067) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1067) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1067) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1067) CFA_SP SP+-2
          CFI (cfiCond1067) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1068 Using cfiCommon0
          CFI (cfiCond1068) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_526
          CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1068) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1068) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1068) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1068) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1068) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1069 Using cfiCommon0
          CFI (cfiCond1069) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_527
          CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1069) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1069) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1069) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1071 Using cfiCommon0
          CFI (cfiCond1071) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1071) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1071) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1071) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1071) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1071) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1071) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1071) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1072) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1072) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1072) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_531
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1074) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1075) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1075) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1075) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1076 Using cfiCommon1
          CFI (cfiPicker1076) NoFunction
          CFI (cfiPicker1076) Picker
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI (cfiCond1065) CFA_SP SP+0
          CFI (cfiCond1066) CFA_SP SP+0
          CFI (cfiCond1067) CFA_SP SP+0
          CFI (cfiCond1068) CFA_SP SP+-1
          CFI (cfiCond1069) CFA_SP SP+-1
          CFI (cfiCond1070) CFA_SP SP+-1
          CFI (cfiCond1071) CFA_SP SP+-1
          CFI (cfiCond1072) CFA_SP SP+-1
          CFI (cfiCond1073) CFA_SP SP+-1
          CFI (cfiCond1074) CFA_SP SP+-1
          CFI (cfiCond1075) CFA_SP SP+-1
          CFI (cfiPicker1076) CFA_SP SP+0
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiCond1068
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiPicker1076

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond1077 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_538
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1078 Using cfiCommon0
          CFI (cfiCond1078) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1078) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1078) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1078) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1078) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1078) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1078) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1078) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1078) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1078) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1078) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1078) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1078) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1078) CFA_SP SP+-2
          CFI (cfiCond1078) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker1079 Using cfiCommon1
          CFI (cfiPicker1079) NoFunction
          CFI (cfiPicker1079) Picker
        MOV     A,R2
          CFI EndBlock cfiCond1077
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiPicker1079
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine218_0:
          CFI Block cfiCond1080 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_534
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1081 Using cfiCommon0
          CFI (cfiCond1081) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1081) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1081) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1081) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1081) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1081) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1081) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1081) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1081) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1081) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1081) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1081) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1081) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1081) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1081) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1081) CFA_SP SP+-2
          CFI (cfiCond1081) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1082 Using cfiCommon0
          CFI (cfiCond1082) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_536
          CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1082) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1082) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1082) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1082) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1082) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1082) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1082) CFA_SP SP+-2
          CFI (cfiCond1082) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_537
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1083) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1083) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1083) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1083) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1083) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1083) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1083) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1083) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1083) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+-2
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1084 Using cfiCommon0
          CFI (cfiCond1084) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_538
          CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1084) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1084) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1084) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1084) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1084) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1084) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1084) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1084) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1084) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1084) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1084) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1084) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1084) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1084) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1084) CFA_SP SP+-2
          CFI (cfiCond1084) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1085 Using cfiCommon0
          CFI (cfiCond1085) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1085) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1085) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1085) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1085) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1085) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1085) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1085) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1085) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1085) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1085) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1085) CFA_SP SP+-2
          CFI (cfiCond1085) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker1086 Using cfiCommon1
          CFI (cfiPicker1086) NoFunction
          CFI (cfiPicker1086) Picker
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        RET
          CFI (cfiCond1080) CFA_SP SP+0
          CFI (cfiCond1081) CFA_SP SP+0
          CFI (cfiCond1082) CFA_SP SP+0
          CFI (cfiCond1083) CFA_SP SP+0
          CFI (cfiCond1084) CFA_SP SP+0
          CFI (cfiCond1085) CFA_SP SP+0
          CFI (cfiPicker1086) CFA_SP SP+0
          CFI EndBlock cfiCond1080
          CFI EndBlock cfiCond1081
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiCond1084
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiPicker1086

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond1087 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_542
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1088 Using cfiCommon0
          CFI (cfiCond1088) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_543
          CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1088) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1088) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1088) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1088) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1088) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1088) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1088) CFA_SP SP+-2
          CFI (cfiCond1088) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1089 Using cfiCommon0
          CFI (cfiCond1089) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_544
          CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1089) CFA_SP SP+-2
          CFI (cfiCond1089) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1090 Using cfiCommon1
          CFI (cfiPicker1090) NoFunction
          CFI (cfiPicker1090) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiPicker1090
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine219_0:
          CFI Block cfiCond1091 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_540
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1092 Using cfiCommon0
          CFI (cfiCond1092) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_541
          CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1092) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1092) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1092) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1092) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1092) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1092) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1092) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1092) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1092) CFA_SP SP+-2
          CFI (cfiCond1092) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1093 Using cfiCommon0
          CFI (cfiCond1093) Function ZDO_ParseAddrRsp
          CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_542
          CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1093) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1093) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1093) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1093) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1093) CFA_SP SP+-2
          CFI (cfiCond1093) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_543
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+-2
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1095 Using cfiCommon0
          CFI (cfiCond1095) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_544
          CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1095) CFA_SP SP+-2
          CFI (cfiCond1095) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1096 Using cfiCommon1
          CFI (cfiPicker1096) NoFunction
          CFI (cfiPicker1096) Picker
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_548:
        RET
          CFI (cfiCond1091) CFA_SP SP+0
          CFI (cfiCond1092) CFA_SP SP+0
          CFI (cfiCond1093) CFA_SP SP+0
          CFI (cfiCond1094) CFA_SP SP+0
          CFI (cfiCond1095) CFA_SP SP+0
          CFI (cfiPicker1096) CFA_SP SP+0
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiCond1092
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiPicker1096

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond1097 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_542
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_543
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-4
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1099 Using cfiCommon0
          CFI (cfiCond1099) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_544
          CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1099) CFA_SP SP+-4
          CFI (cfiCond1099) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1100 Using cfiCommon0
          CFI (cfiCond1100) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_540
          CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1100) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1100) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1100) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1100) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1100) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1100) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1100) CFA_SP SP+-4
          CFI (cfiCond1100) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1101 Using cfiCommon0
          CFI (cfiCond1101) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_541
          CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1101) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1101) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1101) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1101) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1101) CFA_SP SP+-4
          CFI (cfiCond1101) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_78
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+-4
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1103 Using cfiCommon0
          CFI (cfiCond1103) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_79
          CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1103) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1103) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1103) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1103) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1103) CFA_SP SP+-4
          CFI (cfiCond1103) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1104 Using cfiCommon0
          CFI (cfiCond1104) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_104
          CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1104) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1104) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1104) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1104) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1104) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1104) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1104) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1104) CFA_SP SP+-4
          CFI (cfiCond1104) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1105 Using cfiCommon0
          CFI (cfiCond1105) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_105
          CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1105) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1105) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1105) CFA_SP SP+-4
          CFI (cfiCond1105) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1106 Using cfiCommon0
          CFI (cfiCond1106) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_82
          CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1106) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1106) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1106) CFA_SP SP+-4
          CFI (cfiCond1106) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1107 Using cfiCommon0
          CFI (cfiCond1107) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_83
          CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1107) CFA_SP SP+-4
          CFI (cfiCond1107) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1108 Using cfiCommon1
          CFI (cfiPicker1108) NoFunction
          CFI (cfiPicker1108) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        RET
          CFI (cfiCond1097) CFA_SP SP+-2
          CFI (cfiCond1098) CFA_SP SP+-2
          CFI (cfiCond1099) CFA_SP SP+-2
          CFI (cfiCond1100) CFA_SP SP+-2
          CFI (cfiCond1101) CFA_SP SP+-2
          CFI (cfiCond1102) CFA_SP SP+-2
          CFI (cfiCond1103) CFA_SP SP+-2
          CFI (cfiCond1104) CFA_SP SP+-2
          CFI (cfiCond1105) CFA_SP SP+-2
          CFI (cfiCond1106) CFA_SP SP+-2
          CFI (cfiCond1107) CFA_SP SP+-2
          CFI (cfiPicker1108) CFA_SP SP+0
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiCond1100
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiCond1103
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiCond1106
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiPicker1108

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1109 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_549
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-2
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1111 Using cfiCommon1
          CFI (cfiPicker1111) NoFunction
          CFI (cfiPicker1111) Picker
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_271:
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiPicker1111
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine220_0:
          CFI Block cfiCond1112 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_551
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_549
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-2
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1114 Using cfiCommon0
          CFI (cfiCond1114) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1114) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1114) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1114) CFA_SP SP+-2
          CFI (cfiCond1114) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1115 Using cfiCommon1
          CFI (cfiPicker1115) NoFunction
          CFI (cfiPicker1115) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_552:
        RET
          CFI (cfiCond1112) CFA_SP SP+0
          CFI (cfiCond1113) CFA_SP SP+0
          CFI (cfiCond1114) CFA_SP SP+0
          CFI (cfiPicker1115) CFA_SP SP+0
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiCond1114
          CFI EndBlock cfiPicker1115

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond1116 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_549
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1117 Using cfiCommon0
          CFI (cfiCond1117) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_550
          CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1117) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1117) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1117) CFA_SP SP+-4
          CFI (cfiCond1117) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1118 Using cfiCommon0
          CFI (cfiCond1118) Function ZDO_ParseAddrRsp
          CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_551
          CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1118) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1118) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1118) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1118) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1118) CFA_SP SP+-4
          CFI (cfiCond1118) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1119 Using cfiCommon0
          CFI (cfiCond1119) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_86
          CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1119) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1119) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1119) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1119) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1119) CFA_SP SP+-4
          CFI (cfiCond1119) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1120 Using cfiCommon0
          CFI (cfiCond1120) Function ZDO_ParseParentAnnce
          CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_87
          CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1120) CFA_SP SP+-4
          CFI (cfiCond1120) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1121 Using cfiCommon1
          CFI (cfiPicker1121) NoFunction
          CFI (cfiPicker1121) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1116) CFA_SP SP+-2
          CFI (cfiCond1117) CFA_SP SP+-2
          CFI (cfiCond1118) CFA_SP SP+-2
          CFI (cfiCond1119) CFA_SP SP+-2
          CFI (cfiCond1120) CFA_SP SP+-2
          CFI (cfiPicker1121) CFA_SP SP+0
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiCond1117
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiCond1119
          CFI EndBlock cfiCond1120
          CFI EndBlock cfiPicker1121

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond1122 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1123 Using cfiCommon0
          CFI (cfiCond1123) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond1123) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1123) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1123) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1123) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1123) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1123) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1123) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1123) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1123) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1123) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1123) CFA_SP SP+-2
          CFI (cfiCond1123) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1124 Using cfiCommon1
          CFI (cfiPicker1124) NoFunction
          CFI (cfiPicker1124) Picker
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_233:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1122) CFA_SP SP+0
          CFI (cfiCond1123) CFA_SP SP+0
          CFI (cfiPicker1124) CFA_SP SP+0
          CFI EndBlock cfiCond1122
          CFI EndBlock cfiCond1123
          CFI EndBlock cfiPicker1124

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond1125 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_554
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1126 Using cfiCommon0
          CFI (cfiCond1126) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_555
          CFI (cfiCond1126) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1126) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1126) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1126) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1126) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1126) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1126) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1126) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1126) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1126) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1126) CFA_SP SP+-2
          CFI (cfiCond1126) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1127 Using cfiCommon1
          CFI (cfiPicker1127) NoFunction
          CFI (cfiPicker1127) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond1125
          CFI EndBlock cfiCond1126
          CFI EndBlock cfiPicker1127
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine221_0:
          CFI Block cfiCond1128 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_556
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1129 Using cfiCommon0
          CFI (cfiCond1129) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_554
          CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1129) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1129) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1129) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1129) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1129) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1129) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1129) CFA_SP SP+-2
          CFI (cfiCond1129) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1130 Using cfiCommon0
          CFI (cfiCond1130) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_555
          CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1130) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1130) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1130) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1130) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1130) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1130) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1130) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1130) CFA_SP SP+-2
          CFI (cfiCond1130) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1131 Using cfiCommon1
          CFI (cfiPicker1131) NoFunction
          CFI (cfiPicker1131) Picker
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_559:
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1128) CFA_SP SP+0
          CFI (cfiCond1129) CFA_SP SP+0
          CFI (cfiCond1130) CFA_SP SP+0
          CFI (cfiPicker1131) CFA_SP SP+0
          CFI EndBlock cfiCond1128
          CFI EndBlock cfiCond1129
          CFI EndBlock cfiCond1130
          CFI EndBlock cfiPicker1131

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond1132 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_409
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1133 Using cfiCommon0
          CFI (cfiCond1133) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_410
          CFI (cfiCond1133) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1133) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1133) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1133) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1133) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1133) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1133) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1133) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1133) CFA_SP SP+-4
          CFI (cfiCond1133) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1134 Using cfiCommon0
          CFI (cfiCond1134) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_411
          CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1134) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1134) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1134) CFA_SP SP+-4
          CFI (cfiCond1134) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1135 Using cfiCommon0
          CFI (cfiCond1135) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_23
          CFI (cfiCond1135) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1135) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1135) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1135) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1135) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1135) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1135) CFA_SP SP+-4
          CFI (cfiCond1135) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1136 Using cfiCommon0
          CFI (cfiCond1136) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_24
          CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1136) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1136) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1136) CFA_SP SP+-4
          CFI (cfiCond1136) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1137 Using cfiCommon0
          CFI (cfiCond1137) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1137) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_554
          CFI (cfiCond1137) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1137) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1137) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1137) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1137) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1137) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1137) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1137) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1137) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1137) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1137) CFA_SP SP+-4
          CFI (cfiCond1137) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1138 Using cfiCommon0
          CFI (cfiCond1138) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_555
          CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1138) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1138) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1138) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1138) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1138) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1138) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1138) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1138) CFA_SP SP+-4
          CFI (cfiCond1138) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1139 Using cfiCommon0
          CFI (cfiCond1139) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_556
          CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1139) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1139) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1139) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1139) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1139) CFA_SP SP+-4
          CFI (cfiCond1139) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1140 Using cfiCommon0
          CFI (cfiCond1140) Function ZDO_ParseAddrRsp
          CFI (cfiCond1140) Conditional ??CrossCallReturnLabel_560, ??CrossCallReturnLabel_52
          CFI (cfiCond1140) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1140) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1140) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1140) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1140) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1140) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1140) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1140) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1140) CFA_SP SP+-4
          CFI (cfiCond1140) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1141 Using cfiCommon0
          CFI (cfiCond1141) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1141) Conditional ??CrossCallReturnLabel_560, ??CrossCallReturnLabel_53
          CFI (cfiCond1141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1141) CFA_SP SP+-4
          CFI (cfiCond1141) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1142 Using cfiCommon1
          CFI (cfiPicker1142) NoFunction
          CFI (cfiPicker1142) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI (cfiCond1132) CFA_SP SP+-2
          CFI (cfiCond1133) CFA_SP SP+-2
          CFI (cfiCond1134) CFA_SP SP+-2
          CFI (cfiCond1135) CFA_SP SP+-2
          CFI (cfiCond1136) CFA_SP SP+-2
          CFI (cfiCond1137) CFA_SP SP+-2
          CFI (cfiCond1138) CFA_SP SP+-2
          CFI (cfiCond1139) CFA_SP SP+-2
          CFI (cfiCond1140) CFA_SP SP+-2
          CFI (cfiCond1141) CFA_SP SP+-2
          CFI (cfiPicker1142) CFA_SP SP+0
          CFI EndBlock cfiCond1132
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiCond1134
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiCond1136
          CFI EndBlock cfiCond1137
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiCond1139
          CFI EndBlock cfiCond1140
          CFI EndBlock cfiCond1141
          CFI EndBlock cfiPicker1142

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond1143 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_13
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1144 Using cfiCommon0
          CFI (cfiCond1144) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1144) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond1144) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1144) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1144) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1144) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1144) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1144) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1144) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1144) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1144) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1144) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1144) CFA_SP SP+-2
          CFI (cfiCond1144) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1145 Using cfiCommon0
          CFI (cfiCond1145) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond1145) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1145) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1145) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1145) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1145) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1145) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1145) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1145) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1145) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1145) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1145) CFA_SP SP+-2
          CFI (cfiCond1145) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1146 Using cfiCommon1
          CFI (cfiPicker1146) NoFunction
          CFI (cfiPicker1146) Picker
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_248:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1143) CFA_SP SP+0
          CFI (cfiCond1144) CFA_SP SP+0
          CFI (cfiCond1145) CFA_SP SP+0
          CFI (cfiPicker1146) CFA_SP SP+0
          CFI EndBlock cfiCond1143
          CFI EndBlock cfiCond1144
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiPicker1146

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond1147 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1148 Using cfiCommon0
          CFI (cfiCond1148) Function ZDO_ParseAddrRsp
          CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_13
          CFI (cfiCond1148) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1148) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1148) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1148) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1148) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1148) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1148) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1148) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1148) CFA_SP SP+-4
          CFI (cfiCond1148) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1149 Using cfiCommon0
          CFI (cfiCond1149) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_14
          CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1149) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1149) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1149) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1149) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1149) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1149) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1149) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1149) CFA_SP SP+-4
          CFI (cfiCond1149) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1150 Using cfiCommon0
          CFI (cfiCond1150) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_15
          CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1150) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1150) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1150) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1150) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1150) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1150) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1150) CFA_SP SP+-4
          CFI (cfiCond1150) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1151 Using cfiCommon1
          CFI (cfiPicker1151) NoFunction
          CFI (cfiPicker1151) Picker
        LCALL   ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_294:
        RET
          CFI (cfiCond1147) CFA_SP SP+0
          CFI (cfiCond1148) CFA_SP SP+-2
          CFI (cfiCond1149) CFA_SP SP+-2
          CFI (cfiCond1150) CFA_SP SP+-2
          CFI (cfiPicker1151) CFA_SP SP+0
          CFI EndBlock cfiCond1147
          CFI EndBlock cfiCond1148
          CFI EndBlock cfiCond1149
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiPicker1151

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine168:
          CFI Block cfiCond1152 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1153 Using cfiCommon0
          CFI (cfiCond1153) Function ZDO_ParseAddrRsp
          CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_13
          CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1153) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1153) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1153) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1153) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1153) CFA_SP SP+-6
          CFI (cfiCond1153) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1154 Using cfiCommon0
          CFI (cfiCond1154) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_14
          CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1154) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1154) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1154) CFA_SP SP+-6
          CFI (cfiCond1154) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1155 Using cfiCommon0
          CFI (cfiCond1155) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_15
          CFI (cfiCond1155) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1155) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1155) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1155) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1155) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1155) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1155) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1155) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1155) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1155) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1155) CFA_SP SP+-6
          CFI (cfiCond1155) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1156 Using cfiCommon0
          CFI (cfiCond1156) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1156) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_41
          CFI (cfiCond1156) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1156) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1156) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1156) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1156) CFA_SP SP+-6
          CFI (cfiCond1156) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1157 Using cfiCommon0
          CFI (cfiCond1157) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_42
          CFI (cfiCond1157) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1157) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1157) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1157) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1157) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1157) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1157) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1157) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1157) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1157) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1157) CFA_SP SP+-6
          CFI (cfiCond1157) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1158 Using cfiCommon0
          CFI (cfiCond1158) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_16
          CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1158) CFA_SP SP+-6
          CFI (cfiCond1158) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_17
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+-6
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1160 Using cfiCommon1
          CFI (cfiPicker1160) NoFunction
          CFI (cfiPicker1160) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond1152) CFA_SP SP+-2
          CFI (cfiCond1153) CFA_SP SP+-4
          CFI (cfiCond1154) CFA_SP SP+-4
          CFI (cfiCond1155) CFA_SP SP+-4
          CFI (cfiCond1156) CFA_SP SP+-4
          CFI (cfiCond1157) CFA_SP SP+-4
          CFI (cfiCond1158) CFA_SP SP+-4
          CFI (cfiCond1159) CFA_SP SP+-4
          CFI (cfiPicker1160) CFA_SP SP+0
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiCond1154
          CFI EndBlock cfiCond1155
          CFI EndBlock cfiCond1156
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiPicker1160
// 3058 
// 3059 /*********************************************************************
// 3060  * @fn          ZDO_ParseMgmNwkDiscRsp
// 3061  *
// 3062  * @brief       This function parses the incoming Management
// 3063  *              Network Discover response.
// 3064  *
// 3065  * @param       inMsg - incoming message
// 3066  *
// 3067  * @return      pointer to parsed response.  This structure was
// 3068  *          allocated using osal_mem_alloc, so it must be freed
// 3069  *          by the calling function [osal_mem_free()].
// 3070  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3071 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock1161 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 3072 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3073   ZDO_MgmNwkDiscRsp_t *pRsp;
// 3074   uint8 status;
// 3075   uint8 networkCount = 0;
        MOV     ?V1,#0x0
// 3076   uint8 startIndex = 0;
        MOV     ?V0,#0x0
// 3077   uint8 networkListCount = 0;
        MOV     ?V4,#0x0
// 3078   uint8 *msg;
// 3079 
// 3080   msg = inMsg->asdu;
        LCALL   ?Subroutine62 & 0xFFFF
// 3081   status = *msg++;
??CrossCallReturnLabel_550:
        MOV     ?V5,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3082 
// 3083   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmNwkDiscRsp_0
// 3084   {
// 3085     networkCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V1,A
// 3086     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
// 3087     networkListCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_0
        INC     R7
// 3088   }
// 3089 
// 3090   // Allocate a buffer big enough to handle the list.
// 3091   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 3092                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V2,?V4
        MOV     ?V3,#0x0
        MOV     A,#0x4
        MOV     R0,#?V2
        LCALL   ?S_SHL
        MOV     A,?V2
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_562:
        ADDC    A,?V3
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 3093   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 3094   {
// 3095     uint8 x;
// 3096     mgmtNwkDiscItem_t *pList;
// 3097 
// 3098     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V5
        MOVX    @DPTR,A
// 3099     pRsp->networkCount = networkCount;
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine30 & 0xFFFF
// 3100     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_37:
        MOV     A,?V0
        LCALL   ?Subroutine19 & 0xFFFF
// 3101     pRsp->networkListCount = networkListCount;
??CrossCallReturnLabel_19:
        MOV     A,?V4
        MOVX    @DPTR,A
// 3102     pList = pRsp->list;
        LCALL   ?Subroutine128 & 0xFFFF
// 3103 
// 3104     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_217:
        MOV     ?V5,#0x0
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_2 & 0xFFFF
// 3105     {
// 3106       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3107       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_82:
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine18 & 0xFFFF
// 3108       msg += Z_EXTADDR_LEN;
// 3109 
// 3110       pList->logicalChannel = *msg++;
??CrossCallReturnLabel_17:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3111       pList->stackProfile = (*msg) & 0x0F;
        MOV     A,R6
        ADD     A,#0x9
        MOV     R0,A
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_166:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xb
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_532:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine42 & 0xFFFF
// 3112       pList->version = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_59:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_196:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3113       pList->beaconOrder = (*msg) & 0x0F;
        MOV     A,R6
        ADD     A,#0xa
        INC     R0
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_167:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xd
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_533:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine42 & 0xFFFF
// 3114       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_60:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_169:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3115       pList->permitJoining = *msg++;
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_386:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_178:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0xc
        MOV     R6,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_4
        INC     R7
// 3116       pList++;
??ZDO_ParseMgmNwkDiscRsp_4:
        MOV     A,?V0
        ADD     A,#0x10
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_5
        INC     ?V1
// 3117     }
??ZDO_ParseMgmNwkDiscRsp_5:
        INC     ?V5
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_3 & 0xFFFF
// 3118   }
// 3119 
// 3120   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        LJMP    ?Subroutine3 & 0xFFFF
// 3121 }
          CFI EndBlock cfiBlock1161

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond1162 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_216
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1163 Using cfiCommon0
          CFI (cfiCond1163) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond1163) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1163) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1163) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1163) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1163) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1163) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1163) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1163) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1163) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1163) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1163) CFA_SP SP+-2
          CFI (cfiCond1163) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1164 Using cfiCommon1
          CFI (cfiPicker1164) NoFunction
          CFI (cfiPicker1164) Picker
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V0,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V1,A
        RET
          CFI (cfiCond1162) CFA_SP SP+0
          CFI (cfiCond1163) CFA_SP SP+0
          CFI (cfiPicker1164) CFA_SP SP+0
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiCond1163
          CFI EndBlock cfiPicker1164

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond1165 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1166 Using cfiCommon0
          CFI (cfiCond1166) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1166) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1166) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1166) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1166) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1166) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1166) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1166) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1167 Using cfiCommon1
          CFI (cfiPicker1167) NoFunction
          CFI (cfiPicker1167) Picker
        MOV     A,?V0
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI (cfiCond1165) CFA_SP SP+-1
          CFI (cfiCond1166) CFA_SP SP+-1
          CFI (cfiPicker1167) CFA_SP SP+0
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiPicker1167

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond1168 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1169 Using cfiCommon0
          CFI (cfiCond1169) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1169) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1170 Using cfiCommon1
          CFI (cfiPicker1170) NoFunction
          CFI (cfiPicker1170) Picker
        MOV     A,?V0
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_278:
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI (cfiCond1168) CFA_SP SP+0
          CFI (cfiCond1169) CFA_SP SP+-1
          CFI (cfiPicker1170) CFA_SP SP+0
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiPicker1170

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond1171 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond1172 Using cfiCommon0
          CFI (cfiCond1172) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond1172) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1172) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1172) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1172) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1172) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1172) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1172) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1172) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1172) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1172) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1172) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1173 Using cfiCommon1
          CFI (cfiPicker1173) NoFunction
          CFI (cfiPicker1173) Picker
        MOV     A,?V0
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_268:
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI (cfiCond1171) CFA_SP SP+0
          CFI (cfiCond1172) CFA_SP SP+-1
          CFI (cfiPicker1173) CFA_SP SP+0
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiCond1172
          CFI EndBlock cfiPicker1173

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond1174 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1175 Using cfiCommon0
          CFI (cfiCond1175) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond1175) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1175) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1175) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1175) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1175) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1175) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1175) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1175) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1175) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1175) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1175) CFA_SP SP+-2
          CFI (cfiCond1175) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1176 Using cfiCommon1
          CFI (cfiPicker1176) NoFunction
          CFI (cfiPicker1176) Picker
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ANL     A,#0xf
        RET
          CFI (cfiCond1174) CFA_SP SP+0
          CFI (cfiCond1175) CFA_SP SP+0
          CFI (cfiPicker1176) CFA_SP SP+0
          CFI EndBlock cfiCond1174
          CFI EndBlock cfiCond1175
          CFI EndBlock cfiPicker1176

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond1177 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1178 Using cfiCommon0
          CFI (cfiCond1178) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1178) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond1178) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1178) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1178) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1178) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1178) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1178) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1178) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1178) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1178) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1178) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1178) CFA_SP SP+-2
          CFI (cfiCond1178) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1179 Using cfiCommon1
          CFI (cfiPicker1179) NoFunction
          CFI (cfiPicker1179) Picker
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_244:
        SWAP    A
        ANL     A,#0xf
        RET
          CFI (cfiCond1177) CFA_SP SP+0
          CFI (cfiCond1178) CFA_SP SP+0
          CFI (cfiPicker1179) CFA_SP SP+0
          CFI EndBlock cfiCond1177
          CFI EndBlock cfiCond1178
          CFI EndBlock cfiPicker1179

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond1180 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1181 Using cfiCommon0
          CFI (cfiCond1181) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond1181) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1181) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1181) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1181) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1181) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1181) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1181) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1181) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1181) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1181) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1181) CFA_SP SP+-2
          CFI (cfiCond1181) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1182 Using cfiCommon0
          CFI (cfiCond1182) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1182) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1182) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1182) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1182) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1182) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1182) CFA_SP SP+-2
          CFI (cfiCond1182) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1183 Using cfiCommon1
          CFI (cfiPicker1183) NoFunction
          CFI (cfiPicker1183) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_239:
        INC     DPTR
        RET
          CFI (cfiCond1180) CFA_SP SP+0
          CFI (cfiCond1181) CFA_SP SP+0
          CFI (cfiCond1182) CFA_SP SP+0
          CFI (cfiPicker1183) CFA_SP SP+0
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiCond1181
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiPicker1183

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond1184 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_241
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1185 Using cfiCommon0
          CFI (cfiCond1185) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1185) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_36
          CFI (cfiCond1185) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1185) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1185) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1185) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1185) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1185) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1185) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1185) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1185) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1185) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1185) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1185) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1185) CFA_SP SP+-4
          CFI (cfiCond1185) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1186 Using cfiCommon0
          CFI (cfiCond1186) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_37
          CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1186) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1186) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1186) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1186) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1186) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1186) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1186) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1186) CFA_SP SP+-4
          CFI (cfiCond1186) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1187 Using cfiCommon0
          CFI (cfiCond1187) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_38
          CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1187) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1187) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1187) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1187) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1187) CFA_SP SP+-4
          CFI (cfiCond1187) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1188 Using cfiCommon0
          CFI (cfiCond1188) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1188) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_2
          CFI (cfiCond1188) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1188) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1188) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1188) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1188) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1188) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1188) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1188) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1188) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1188) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1188) CFA_SP SP+-4
          CFI (cfiCond1188) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1189 Using cfiCommon0
          CFI (cfiCond1189) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1189) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_3
          CFI (cfiCond1189) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1189) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1189) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1189) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1189) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1189) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1189) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1189) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1189) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1189) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1189) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1189) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1189) CFA_SP SP+-4
          CFI (cfiCond1189) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1190 Using cfiCommon1
          CFI (cfiPicker1190) NoFunction
          CFI (cfiPicker1190) Picker
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_290:
        INC     DPTR
        RET
          CFI (cfiCond1184) CFA_SP SP+0
          CFI (cfiCond1185) CFA_SP SP+-2
          CFI (cfiCond1186) CFA_SP SP+-2
          CFI (cfiCond1187) CFA_SP SP+-2
          CFI (cfiCond1188) CFA_SP SP+-2
          CFI (cfiCond1189) CFA_SP SP+-2
          CFI (cfiPicker1190) CFA_SP SP+0
          CFI EndBlock cfiCond1184
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiCond1186
          CFI EndBlock cfiCond1187
          CFI EndBlock cfiCond1188
          CFI EndBlock cfiCond1189
          CFI EndBlock cfiPicker1190

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine166:
          CFI Block cfiCond1191 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_287
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1192 Using cfiCommon0
          CFI (cfiCond1192) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1192) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond1192) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1192) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1192) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1192) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1192) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1192) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1192) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1192) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1192) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1192) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1192) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1192) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1192) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1192) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1192) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1192) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1192) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1192) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1192) CFA_SP SP+-2
          CFI (cfiCond1192) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1193 Using cfiCommon0
          CFI (cfiCond1193) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1193) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_27
          CFI (cfiCond1193) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1193) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1193) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1193) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1193) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1193) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1193) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1193) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1193) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1193) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1193) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1193) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1193) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1193) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1193) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1193) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1193) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1193) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1193) CFA_SP SP+-4
          CFI (cfiCond1193) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1194 Using cfiCommon0
          CFI (cfiCond1194) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_28
          CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1194) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1194) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1194) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1194) CFA_SP SP+-4
          CFI (cfiCond1194) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1195 Using cfiCommon0
          CFI (cfiCond1195) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_29
          CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1195) CFA_SP SP+-4
          CFI (cfiCond1195) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1196 Using cfiCommon0
          CFI (cfiCond1196) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_30
          CFI (cfiCond1196) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1196) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1196) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1196) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1196) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1196) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1196) CFA_SP SP+-4
          CFI (cfiCond1196) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1197 Using cfiCommon0
          CFI (cfiCond1197) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_241
          CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1197) CFA_SP SP+-4
          CFI (cfiCond1197) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1198 Using cfiCommon0
          CFI (cfiCond1198) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_36
          CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1198) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1198) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1198) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1198) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1198) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1198) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1198) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1198) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1198) CFA_SP SP+-6
          CFI (cfiCond1198) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1199 Using cfiCommon0
          CFI (cfiCond1199) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_37
          CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1199) CFA_SP SP+-6
          CFI (cfiCond1199) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1200 Using cfiCommon0
          CFI (cfiCond1200) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1200) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_38
          CFI (cfiCond1200) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1200) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1200) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1200) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1200) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1200) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1200) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1200) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1200) CFA_SP SP+-6
          CFI (cfiCond1200) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1201 Using cfiCommon0
          CFI (cfiCond1201) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1201) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_2
          CFI (cfiCond1201) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1201) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1201) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1201) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1201) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1201) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1201) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1201) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1201) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1201) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1201) CFA_SP SP+-6
          CFI (cfiCond1201) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1202 Using cfiCommon0
          CFI (cfiCond1202) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1202) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_3
          CFI (cfiCond1202) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1202) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1202) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1202) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1202) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1202) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1202) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1202) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1202) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1202) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1202) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1202) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1202) CFA_SP SP+-6
          CFI (cfiCond1202) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1203 Using cfiCommon0
          CFI (cfiCond1203) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1203) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_18
          CFI (cfiCond1203) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1203) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1203) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1203) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1203) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1203) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1203) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1203) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1203) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1203) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1203) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1203) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1203) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1203) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1203) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1203) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1203) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1203) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1203) CFA_SP SP+-6
          CFI (cfiCond1203) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1204 Using cfiCommon0
          CFI (cfiCond1204) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1204) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_19
          CFI (cfiCond1204) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1204) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1204) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1204) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1204) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1204) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1204) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1204) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1204) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1204) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1204) CFA_SP SP+-6
          CFI (cfiCond1204) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1205 Using cfiCommon0
          CFI (cfiCond1205) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_20
          CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1205) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1205) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1205) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1205) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1205) CFA_SP SP+-6
          CFI (cfiCond1205) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1206 Using cfiCommon0
          CFI (cfiCond1206) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_2
          CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1206) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1206) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1206) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1206) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1206) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1206) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1206) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1206) CFA_SP SP+-6
          CFI (cfiCond1206) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1207 Using cfiCommon0
          CFI (cfiCond1207) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_3
          CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1207) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1207) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1207) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1207) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1207) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1207) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1207) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1207) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1207) CFA_SP SP+-6
          CFI (cfiCond1207) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1208 Using cfiCommon0
          CFI (cfiCond1208) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1208) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_6
          CFI (cfiCond1208) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1208) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1208) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1208) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1208) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1208) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1208) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1208) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1208) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1208) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1208) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1208) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1208) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1208) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1208) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1208) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1208) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1208) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1208) CFA_SP SP+-6
          CFI (cfiCond1208) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1209 Using cfiCommon0
          CFI (cfiCond1209) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_7
          CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1209) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1209) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1209) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1209) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1209) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1209) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1209) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1209) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1209) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1209) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1209) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1209) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1209) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1209) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1209) CFA_SP SP+-6
          CFI (cfiCond1209) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1210 Using cfiCommon0
          CFI (cfiCond1210) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_8
          CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1210) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1210) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1210) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1210) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1210) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1210) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1210) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1210) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1210) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1210) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1210) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1210) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1210) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1210) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1210) CFA_SP SP+-6
          CFI (cfiCond1210) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1211 Using cfiCommon1
          CFI (cfiPicker1211) NoFunction
          CFI (cfiPicker1211) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI (cfiCond1191) CFA_SP SP+0
          CFI (cfiCond1192) CFA_SP SP+0
          CFI (cfiCond1193) CFA_SP SP+-2
          CFI (cfiCond1194) CFA_SP SP+-2
          CFI (cfiCond1195) CFA_SP SP+-2
          CFI (cfiCond1196) CFA_SP SP+-2
          CFI (cfiCond1197) CFA_SP SP+-2
          CFI (cfiCond1198) CFA_SP SP+-4
          CFI (cfiCond1199) CFA_SP SP+-4
          CFI (cfiCond1200) CFA_SP SP+-4
          CFI (cfiCond1201) CFA_SP SP+-4
          CFI (cfiCond1202) CFA_SP SP+-4
          CFI (cfiCond1203) CFA_SP SP+-4
          CFI (cfiCond1204) CFA_SP SP+-4
          CFI (cfiCond1205) CFA_SP SP+-4
          CFI (cfiCond1206) CFA_SP SP+-4
          CFI (cfiCond1207) CFA_SP SP+-4
          CFI (cfiCond1208) CFA_SP SP+-4
          CFI (cfiCond1209) CFA_SP SP+-4
          CFI (cfiCond1210) CFA_SP SP+-4
          CFI (cfiPicker1211) CFA_SP SP+0
          CFI EndBlock cfiCond1191
          CFI EndBlock cfiCond1192
          CFI EndBlock cfiCond1193
          CFI EndBlock cfiCond1194
          CFI EndBlock cfiCond1195
          CFI EndBlock cfiCond1196
          CFI EndBlock cfiCond1197
          CFI EndBlock cfiCond1198
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiCond1200
          CFI EndBlock cfiCond1201
          CFI EndBlock cfiCond1202
          CFI EndBlock cfiCond1203
          CFI EndBlock cfiCond1204
          CFI EndBlock cfiCond1205
          CFI EndBlock cfiCond1206
          CFI EndBlock cfiCond1207
          CFI EndBlock cfiCond1208
          CFI EndBlock cfiCond1209
          CFI EndBlock cfiCond1210
          CFI EndBlock cfiPicker1211

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond1212 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1213 Using cfiCommon0
          CFI (cfiCond1213) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1213) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond1213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1213) CFA_SP SP+-2
          CFI (cfiCond1213) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1214 Using cfiCommon0
          CFI (cfiCond1214) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1214) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1214) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1214) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1214) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1214) CFA_SP SP+-2
          CFI (cfiCond1214) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1215 Using cfiCommon1
          CFI (cfiPicker1215) NoFunction
          CFI (cfiPicker1215) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_228:
        RET
          CFI (cfiCond1212) CFA_SP SP+0
          CFI (cfiCond1213) CFA_SP SP+0
          CFI (cfiCond1214) CFA_SP SP+0
          CFI (cfiPicker1215) CFA_SP SP+0
          CFI EndBlock cfiCond1212
          CFI EndBlock cfiCond1213
          CFI EndBlock cfiCond1214
          CFI EndBlock cfiPicker1215

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond1216 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1217 Using cfiCommon0
          CFI (cfiCond1217) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1217) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_19
          CFI (cfiCond1217) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1217) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1217) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1217) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1217) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1217) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1217) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1217) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1217) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1217) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1217) CFA_SP SP+-4
          CFI (cfiCond1217) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1218 Using cfiCommon0
          CFI (cfiCond1218) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_20
          CFI (cfiCond1218) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1218) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1218) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1218) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1218) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1218) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1218) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1218) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1218) CFA_SP SP+-4
          CFI (cfiCond1218) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1219 Using cfiCommon0
          CFI (cfiCond1219) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_2
          CFI (cfiCond1219) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1219) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1219) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1219) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1219) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1219) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1219) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1219) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1219) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1219) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1219) CFA_SP SP+-4
          CFI (cfiCond1219) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1220 Using cfiCommon0
          CFI (cfiCond1220) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1220) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_3
          CFI (cfiCond1220) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1220) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1220) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1220) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1220) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1220) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1220) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1220) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1220) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1220) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1220) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1220) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1220) CFA_SP SP+-4
          CFI (cfiCond1220) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1221 Using cfiCommon0
          CFI (cfiCond1221) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1221) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_6
          CFI (cfiCond1221) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1221) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1221) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1221) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1221) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1221) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1221) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1221) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1221) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1221) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1221) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1221) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1221) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1221) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1221) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1221) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1221) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1221) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1221) CFA_SP SP+-4
          CFI (cfiCond1221) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1222 Using cfiCommon0
          CFI (cfiCond1222) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_7
          CFI (cfiCond1222) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1222) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1222) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1222) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1222) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1222) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1222) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1222) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1222) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1222) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1222) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1222) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1222) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1222) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1222) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1222) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1222) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1222) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1222) CFA_SP SP+-4
          CFI (cfiCond1222) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1223 Using cfiCommon0
          CFI (cfiCond1223) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_8
          CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1223) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1223) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1223) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1223) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1223) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1223) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1223) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1223) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1223) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1223) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1223) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1223) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1223) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1223) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1223) CFA_SP SP+-4
          CFI (cfiCond1223) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1224 Using cfiCommon1
          CFI (cfiPicker1224) NoFunction
          CFI (cfiPicker1224) Picker
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_291:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond1216) CFA_SP SP+-2
          CFI (cfiCond1217) CFA_SP SP+-2
          CFI (cfiCond1218) CFA_SP SP+-2
          CFI (cfiCond1219) CFA_SP SP+-2
          CFI (cfiCond1220) CFA_SP SP+-2
          CFI (cfiCond1221) CFA_SP SP+-2
          CFI (cfiCond1222) CFA_SP SP+-2
          CFI (cfiCond1223) CFA_SP SP+-2
          CFI (cfiPicker1224) CFA_SP SP+0
          CFI EndBlock cfiCond1216
          CFI EndBlock cfiCond1217
          CFI EndBlock cfiCond1218
          CFI EndBlock cfiCond1219
          CFI EndBlock cfiCond1220
          CFI EndBlock cfiCond1221
          CFI EndBlock cfiCond1222
          CFI EndBlock cfiCond1223
          CFI EndBlock cfiPicker1224

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond1225 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1226 Using cfiCommon0
          CFI (cfiCond1226) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1226) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond1226) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1226) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1226) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1226) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1226) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1226) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1226) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1226) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1226) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1226) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1226) CFA_SP SP+-2
          CFI (cfiCond1226) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1227 Using cfiCommon1
          CFI (cfiPicker1227) NoFunction
          CFI (cfiPicker1227) Picker
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_234:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1225) CFA_SP SP+0
          CFI (cfiCond1226) CFA_SP SP+0
          CFI (cfiPicker1227) CFA_SP SP+0
          CFI EndBlock cfiCond1225
          CFI EndBlock cfiCond1226
          CFI EndBlock cfiPicker1227

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond1228 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1229 Using cfiCommon0
          CFI (cfiCond1229) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_42
          CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1229) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1229) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1229) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1229) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1229) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1229) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1229) CFA_SP SP+-4
          CFI (cfiCond1229) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1230 Using cfiCommon0
          CFI (cfiCond1230) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_16
          CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1230) CFA_SP SP+-4
          CFI (cfiCond1230) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1231 Using cfiCommon0
          CFI (cfiCond1231) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_17
          CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1231) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1231) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1231) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1231) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1231) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1231) CFA_SP SP+-4
          CFI (cfiCond1231) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1232 Using cfiCommon1
          CFI (cfiPicker1232) NoFunction
          CFI (cfiPicker1232) Picker
        LCALL   ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_295:
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond1228) CFA_SP SP+-2
          CFI (cfiCond1229) CFA_SP SP+-2
          CFI (cfiCond1230) CFA_SP SP+-2
          CFI (cfiCond1231) CFA_SP SP+-2
          CFI (cfiPicker1232) CFA_SP SP+0
          CFI EndBlock cfiCond1228
          CFI EndBlock cfiCond1229
          CFI EndBlock cfiCond1230
          CFI EndBlock cfiCond1231
          CFI EndBlock cfiPicker1232
// 3122 
// 3123 /*********************************************************************
// 3124  * @fn          ZDO_ParseMgmtRtgRsp
// 3125  *
// 3126  * @brief       This function parses the incoming Management
// 3127  *              Routing response.
// 3128  *
// 3129  * @param       inMsg - incoming message
// 3130  *
// 3131  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3132  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3133  *          by the calling function [osal_mem_free()].
// 3134  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3135 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock1233 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 3136 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3137   ZDO_MgmtRtgRsp_t *pRsp;
// 3138   uint8 status;
// 3139   uint8 rtgCount = 0;
        MOV     ?V2,#0x0
// 3140   uint8 startIndex = 0;
        MOV     ?V1,#0x0
// 3141   uint8 rtgListCount = 0;
        MOV     ?V0,#0x0
// 3142   uint8 *msg;
// 3143 
// 3144   msg = inMsg->asdu;
        LCALL   ?Subroutine61 & 0xFFFF
// 3145 
// 3146   status = *msg++;
// 3147   if ( status == ZSuccess )
??CrossCallReturnLabel_86:
        JNZ     ??ZDO_ParseMgmtRtgRsp_0
// 3148   {
// 3149     rtgCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V2,A
// 3150     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
// 3151     rtgListCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtRtgRsp_0
        INC     R7
// 3152   }
// 3153 
// 3154   // Allocate a buffer big enough to handle the list
// 3155   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 3156           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0
        MOV     B,#0x7
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_214:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
// 3157   if ( pRsp )
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_ParseMgmtRtgRsp_1
// 3158   {
// 3159     uint8 x;
// 3160     rtgItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
// 3161     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
// 3162     pRsp->rtgCount = rtgCount;
        INC     DPTR
        MOV     A,?V2
        LCALL   ?Subroutine30 & 0xFFFF
// 3163     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_38:
        MOV     A,?V1
        LCALL   ?Subroutine19 & 0xFFFF
// 3164     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_20:
        MOV     A,?V0
        MOVX    @DPTR,A
// 3165 
// 3166     for ( x = 0; x < rtgListCount; x++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_ParseMgmtRtgRsp_2
// 3167     {
// 3168       uint8 statOpt;
// 3169 
// 3170       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_141:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine221_0 & 0xFFFF
// 3171       msg += 2;
// 3172       statOpt = *msg++;
??CrossCallReturnLabel_556:
        MOV     R4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtRtgRsp_4
        INC     R7
// 3173       pList->status = (statOpt & 0x07);
??ZDO_ParseMgmtRtgRsp_4:
        MOV     A,#0x7
        ANL     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3174       pList->options = ((statOpt >> 3) & 0x07);
        MOV     A,R4
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        ANL     A,#0x7
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine199_0 & 0xFFFF
// 3175       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_411:
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_142:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine227_0 & 0xFFFF
// 3176       msg += 2;
??CrossCallReturnLabel_585:
        JNC     ??ZDO_ParseMgmtRtgRsp_5
        INC     R7
// 3177       pList++;
??ZDO_ParseMgmtRtgRsp_5:
        MOV     A,R0
        ADD     A,#0x7
        MOV     R0,A
        JNC     ??ZDO_ParseMgmtRtgRsp_6
        INC     R1
// 3178     }
??ZDO_ParseMgmtRtgRsp_6:
        INC     ?V1
??ZDO_ParseMgmtRtgRsp_2:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V0
        JC      ??ZDO_ParseMgmtRtgRsp_3
// 3179   }
// 3180 
// 3181   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP    ?Subroutine5 & 0xFFFF
// 3182 }
          CFI EndBlock cfiBlock1233

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond1234 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_213
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1235 Using cfiCommon0
          CFI (cfiCond1235) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1235) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1235) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1235) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1235) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1235) CFA_SP SP+-2
          CFI (cfiCond1235) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1236 Using cfiCommon0
          CFI (cfiCond1236) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1236) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1236) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1236) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1236) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1236) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1236) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1236) CFA_SP SP+-2
          CFI (cfiCond1236) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1237 Using cfiCommon1
          CFI (cfiPicker1237) NoFunction
          CFI (cfiPicker1237) Picker
        MUL     AB
        MOV     R1,B
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_564:
        ADDC    A,R1
        MOV     R3,A
        RET
          CFI (cfiCond1234) CFA_SP SP+0
          CFI (cfiCond1235) CFA_SP SP+0
          CFI (cfiCond1236) CFA_SP SP+0
          CFI (cfiPicker1237) CFA_SP SP+0
          CFI EndBlock cfiCond1234
          CFI EndBlock cfiCond1235
          CFI EndBlock cfiCond1236
          CFI EndBlock cfiPicker1237

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine163:
          CFI Block cfiCond1238 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_565
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1239 Using cfiCommon0
          CFI (cfiCond1239) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1239) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1239) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1239) CFA_SP SP+-2
          CFI (cfiCond1239) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1240 Using cfiCommon1
          CFI (cfiPicker1240) NoFunction
          CFI (cfiPicker1240) Picker
        MOV     A,R6
          CFI EndBlock cfiCond1238
          CFI EndBlock cfiCond1239
          CFI EndBlock cfiPicker1240
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine222_0:
          CFI Block cfiCond1241 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_561
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1242 Using cfiCommon0
          CFI (cfiCond1242) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1242) Conditional ??CrossCallReturnLabel_562
          CFI (cfiCond1242) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1242) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1242) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1242) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1242) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1242) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1242) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1242) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1242) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1242) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1242) CFA_SP SP+-2
          CFI (cfiCond1242) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1243 Using cfiCommon0
          CFI (cfiCond1243) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1243) Conditional ??CrossCallReturnLabel_564, ??CrossCallReturnLabel_213
          CFI (cfiCond1243) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1243) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1243) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1243) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1243) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1243) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1243) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1243) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1243) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1243) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1243) CFA_SP SP+-4
          CFI (cfiCond1243) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1244 Using cfiCommon0
          CFI (cfiCond1244) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1244) Conditional ??CrossCallReturnLabel_564, ??CrossCallReturnLabel_214
          CFI (cfiCond1244) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1244) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1244) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1244) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1244) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1244) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1244) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1244) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1244) CFA_SP SP+-4
          CFI (cfiCond1244) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1245 Using cfiCommon0
          CFI (cfiCond1245) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1245) Conditional ??CrossCallReturnLabel_564, ??CrossCallReturnLabel_215
          CFI (cfiCond1245) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1245) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1245) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1245) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1245) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1245) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1245) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1245) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1245) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1245) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1245) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1245) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1245) CFA_SP SP+-4
          CFI (cfiCond1245) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1246 Using cfiCommon0
          CFI (cfiCond1246) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1246) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1246) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1246) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1246) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1246) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1246) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1246) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1246) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1246) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1246) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1246) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1246) CFA_SP SP+-2
          CFI (cfiCond1246) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1247 Using cfiCommon0
          CFI (cfiCond1247) Function ZDO_ParseEPListRsp
          CFI (cfiCond1247) Conditional ??CrossCallReturnLabel_565
          CFI (cfiCond1247) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1247) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1247) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1247) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1247) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1247) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1247) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1247) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1247) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1247) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1247) CFA_SP SP+-2
          CFI (cfiCond1247) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1248 Using cfiCommon0
          CFI (cfiCond1248) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1248) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1248) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1248) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1248) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1248) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1248) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1248) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1248) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1248) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1248) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1248) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1248) CFA_SP SP+-2
          CFI (cfiCond1248) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1249 Using cfiCommon1
          CFI (cfiPicker1249) NoFunction
          CFI (cfiPicker1249) Picker
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        RET
          CFI (cfiCond1241) CFA_SP SP+0
          CFI (cfiCond1242) CFA_SP SP+0
          CFI (cfiCond1243) CFA_SP SP+-2
          CFI (cfiCond1244) CFA_SP SP+-2
          CFI (cfiCond1245) CFA_SP SP+-2
          CFI (cfiCond1246) CFA_SP SP+0
          CFI (cfiCond1247) CFA_SP SP+0
          CFI (cfiCond1248) CFA_SP SP+0
          CFI (cfiPicker1249) CFA_SP SP+0
          CFI EndBlock cfiCond1241
          CFI EndBlock cfiCond1242
          CFI EndBlock cfiCond1243
          CFI EndBlock cfiCond1244
          CFI EndBlock cfiCond1245
          CFI EndBlock cfiCond1246
          CFI EndBlock cfiCond1247
          CFI EndBlock cfiCond1248
          CFI EndBlock cfiPicker1249

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond1250 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1251 Using cfiCommon0
          CFI (cfiCond1251) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1251) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond1251) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1251) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1251) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1251) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1251) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1251) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1251) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1251) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1251) CFA_SP SP+-2
          CFI (cfiCond1251) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1252 Using cfiCommon1
          CFI (cfiPicker1252) NoFunction
          CFI (cfiPicker1252) Picker
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,?V2
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI (cfiCond1250) CFA_SP SP+0
          CFI (cfiCond1251) CFA_SP SP+0
          CFI (cfiPicker1252) CFA_SP SP+0
          CFI EndBlock cfiCond1250
          CFI EndBlock cfiCond1251
          CFI EndBlock cfiPicker1252
// 3183 
// 3184 /*********************************************************************
// 3185  * @fn          ZDO_ParseMgmtBindRsp
// 3186  *
// 3187  * @brief       This function parses the incoming Management
// 3188  *              Binding response.
// 3189  *
// 3190  * @param       inMsg - pointer to message to parse
// 3191  *
// 3192  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3193  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3194  *          by the calling function [osal_mem_free()].
// 3195  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3196 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock1253 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 3197 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
// 3198   ZDO_MgmtBindRsp_t *pRsp;
// 3199   uint8 status;
// 3200   uint8 bindingCount = 0;
        MOV     ?V6,#0x0
// 3201   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 3202   uint8 bindingListCount = 0;
        MOV     ?V4,#0x0
// 3203   uint8 *msg;
// 3204 
// 3205   msg = inMsg->asdu;
        LCALL   ?Subroutine79 & 0xFFFF
// 3206 
// 3207   status = *msg++;
??CrossCallReturnLabel_114:
        MOV     ?V7,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
// 3208   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtBindRsp_0
// 3209   {
// 3210     bindingCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V6,A
// 3211     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
// 3212     bindingListCount = *msg++;
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,?V2
        ADD     A,#0x3
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_0
        INC     ?V3
// 3213   }
// 3214 
// 3215   // Allocate a buffer big enough to handle the list
// 3216   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 3217           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??ZDO_ParseMgmtBindRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x15
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_215:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 3218   if ( pRsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtBindRsp_1 & 0xFFFF
// 3219   {
// 3220     uint8 x;
// 3221     apsBindingItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R6,A
        CLR     A
        ADDC    A,?V1
        MOV     R7,A
// 3222     pRsp->status = status;
        LCALL   ?Subroutine11 & 0xFFFF
// 3223     pRsp->bindingCount = bindingCount;
// 3224     pRsp->startIndex = startIndex;
// 3225     pRsp->bindingListCount = bindingListCount;
// 3226 
// 3227     for ( x = 0; x < bindingListCount; x++ )
??CrossCallReturnLabel_3:
        SJMP    ??ZDO_ParseMgmtBindRsp_2
// 3228     {
// 3229       osal_cpyExtAddr( pList->srcAddr, msg );
// 3230       msg += Z_EXTADDR_LEN;
// 3231       pList->srcEP = *msg++;
// 3232 
// 3233       // Get the Cluster ID
// 3234 
// 3235       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 3236       msg += 2;
// 3237       pList->dstAddr.addrMode = *msg++;
// 3238       if ( pList->dstAddr.addrMode == Addr64Bit )
// 3239       {
// 3240         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 3241         msg += Z_EXTADDR_LEN;
// 3242         pList->dstEP = *msg++;
// 3243       }
// 3244       else
// 3245       {
// 3246         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_3:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine81 & 0xFFFF
// 3247         msg += 2;
// 3248       }
??CrossCallReturnLabel_116:
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_44:
        JNC     ??ZDO_ParseMgmtBindRsp_4
        INC     ?V3
// 3249 
// 3250       pList++;
??ZDO_ParseMgmtBindRsp_4:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtBindRsp_5
        INC     R7
??ZDO_ParseMgmtBindRsp_5:
        INC     ?V5
??ZDO_ParseMgmtBindRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     ??ZDO_ParseMgmtBindRsp_1
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_97:
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_34:
        JNC     ??ZDO_ParseMgmtBindRsp_6
        INC     ?V3
??ZDO_ParseMgmtBindRsp_6:
        MOV     DPL,A
        MOV     DPH,?V3
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_79:
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_55:
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_159:
        MOV     A,?V2
        ADD     A,#0x3
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_7
        INC     ?V3
??ZDO_ParseMgmtBindRsp_7:
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_200:
        JNZ     ??ZDO_ParseMgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine125 & 0xFFFF
// 3251     }
// 3252   }
??CrossCallReturnLabel_202:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_35:
        JNC     ??ZDO_ParseMgmtBindRsp_4
        INC     ?V3
??ZDO_ParseMgmtBindRsp_8:
        SJMP    ??ZDO_ParseMgmtBindRsp_4
// 3253 
// 3254   return ( pRsp );
??ZDO_ParseMgmtBindRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ??Subroutine213_0 & 0xFFFF
// 3255 }
          CFI EndBlock cfiBlock1253

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond1254 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1255 Using cfiCommon0
          CFI (cfiCond1255) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1255) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond1255) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1255) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1255) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1255) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1255) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1255) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1255) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1255) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1255) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1255) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1255) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1255) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1255) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1256 Using cfiCommon1
          CFI (cfiPicker1256) NoFunction
          CFI (cfiPicker1256) Picker
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI (cfiCond1254) CFA_SP SP+-1
          CFI (cfiCond1255) CFA_SP SP+-1
          CFI (cfiPicker1256) CFA_SP SP+0
          CFI EndBlock cfiCond1254
          CFI EndBlock cfiCond1255
          CFI EndBlock cfiPicker1256

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond1257 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_199
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1258 Using cfiCommon0
          CFI (cfiCond1258) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond1258) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1258) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1258) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1258) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1258) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1258) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1258) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1258) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1258) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1258) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1258) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1258) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1258) CFA_SP SP+-2
          CFI (cfiCond1258) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1259 Using cfiCommon1
          CFI (cfiPicker1259) NoFunction
          CFI (cfiPicker1259) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,#0x3
        XRL     A,R0
        RET
          CFI (cfiCond1257) CFA_SP SP+0
          CFI (cfiCond1258) CFA_SP SP+0
          CFI (cfiPicker1259) CFA_SP SP+0
          CFI EndBlock cfiCond1257
          CFI EndBlock cfiCond1258
          CFI EndBlock cfiPicker1259

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond1260 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_158
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1261 Using cfiCommon0
          CFI (cfiCond1261) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1261) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond1261) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1261) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1261) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1261) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1261) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1261) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1261) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1261) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1261) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1261) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1261) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1261) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1261) CFA_SP SP+-2
          CFI (cfiCond1261) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1262 Using cfiCommon1
          CFI (cfiPicker1262) NoFunction
          CFI (cfiPicker1262) Picker
        MOV     R0,A
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_281:
        MOV     A,R0
        MOVX    @DPTR,A
        RET
          CFI (cfiCond1260) CFA_SP SP+0
          CFI (cfiCond1261) CFA_SP SP+0
          CFI (cfiPicker1262) CFA_SP SP+0
          CFI EndBlock cfiCond1260
          CFI EndBlock cfiCond1261
          CFI EndBlock cfiPicker1262

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine162:
          CFI Block cfiCond1263 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1264 Using cfiCommon0
          CFI (cfiCond1264) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1264) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_327
          CFI (cfiCond1264) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1264) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1264) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1264) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1264) CFA_SP SP+-4
          CFI (cfiCond1264) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1265 Using cfiCommon0
          CFI (cfiCond1265) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1265) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_158
          CFI (cfiCond1265) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1265) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1265) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1265) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1265) CFA_SP SP+-4
          CFI (cfiCond1265) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1266 Using cfiCommon0
          CFI (cfiCond1266) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1266) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_159
          CFI (cfiCond1266) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1266) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1266) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1266) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1266) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1266) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1266) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1266) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1266) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1266) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1266) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1266) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1266) CFA_SP SP+-4
          CFI (cfiCond1266) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1267 Using cfiCommon1
          CFI (cfiPicker1267) NoFunction
          CFI (cfiPicker1267) Picker
        LCALL   ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_300:
        RET
          CFI (cfiCond1263) CFA_SP SP+-2
          CFI (cfiCond1264) CFA_SP SP+-2
          CFI (cfiCond1265) CFA_SP SP+-2
          CFI (cfiCond1266) CFA_SP SP+-2
          CFI (cfiPicker1267) CFA_SP SP+0
          CFI EndBlock cfiCond1263
          CFI EndBlock cfiCond1264
          CFI EndBlock cfiCond1265
          CFI EndBlock cfiCond1266
          CFI EndBlock cfiPicker1267

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine173:
          CFI Block cfiCond1268 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1269 Using cfiCommon0
          CFI (cfiCond1269) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1269) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_72
          CFI (cfiCond1269) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1269) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1269) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1269) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1269) CFA_SP SP+-6
          CFI (cfiCond1269) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1270 Using cfiCommon0
          CFI (cfiCond1270) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1270) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_84
          CFI (cfiCond1270) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1270) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1270) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1270) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1270) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1270) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1270) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1270) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1270) CFA_SP SP+-6
          CFI (cfiCond1270) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1271 Using cfiCommon0
          CFI (cfiCond1271) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1271) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_85
          CFI (cfiCond1271) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1271) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1271) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1271) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1271) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1271) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1271) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1271) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1271) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1271) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1271) CFA_SP SP+-6
          CFI (cfiCond1271) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1272 Using cfiCommon0
          CFI (cfiCond1272) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1272) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_326
          CFI (cfiCond1272) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1272) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1272) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1272) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1272) CFA_SP SP+-6
          CFI (cfiCond1272) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1273 Using cfiCommon0
          CFI (cfiCond1273) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_327
          CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1273) CFA_SP SP+-6
          CFI (cfiCond1273) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1274 Using cfiCommon0
          CFI (cfiCond1274) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1274) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_158
          CFI (cfiCond1274) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1274) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1274) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1274) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1274) CFA_SP SP+-6
          CFI (cfiCond1274) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1275 Using cfiCommon0
          CFI (cfiCond1275) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1275) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_159
          CFI (cfiCond1275) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1275) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1275) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1275) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1275) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1275) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1275) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1275) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1275) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1275) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1275) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1275) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1275) CFA_SP SP+-6
          CFI (cfiCond1275) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1276 Using cfiCommon1
          CFI (cfiPicker1276) NoFunction
          CFI (cfiPicker1276) Picker
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI (cfiCond1268) CFA_SP SP+-4
          CFI (cfiCond1269) CFA_SP SP+-4
          CFI (cfiCond1270) CFA_SP SP+-4
          CFI (cfiCond1271) CFA_SP SP+-4
          CFI (cfiCond1272) CFA_SP SP+-4
          CFI (cfiCond1273) CFA_SP SP+-4
          CFI (cfiCond1274) CFA_SP SP+-4
          CFI (cfiCond1275) CFA_SP SP+-4
          CFI (cfiPicker1276) CFA_SP SP+0
          CFI EndBlock cfiCond1268
          CFI EndBlock cfiCond1269
          CFI EndBlock cfiCond1270
          CFI EndBlock cfiCond1271
          CFI EndBlock cfiCond1272
          CFI EndBlock cfiCond1273
          CFI EndBlock cfiCond1274
          CFI EndBlock cfiCond1275
          CFI EndBlock cfiPicker1276

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond1277 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1278 Using cfiCommon0
          CFI (cfiCond1278) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1278) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond1278) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1278) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1278) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1278) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1278) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1278) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1278) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1278) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1278) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1278) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1278) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1278) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1278) CFA_SP SP+-2
          CFI (cfiCond1278) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1279 Using cfiCommon1
          CFI (cfiPicker1279) NoFunction
          CFI (cfiPicker1279) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R4
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI (cfiCond1277) CFA_SP SP+0
          CFI (cfiCond1278) CFA_SP SP+0
          CFI (cfiPicker1279) CFA_SP SP+0
          CFI EndBlock cfiCond1277
          CFI EndBlock cfiCond1278
          CFI EndBlock cfiPicker1279

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond1280 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1281 Using cfiCommon0
          CFI (cfiCond1281) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1281) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond1281) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1281) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1281) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1281) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1281) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1281) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1281) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1281) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1281) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1281) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1281) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1281) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1281) CFA_SP SP+-2
          CFI (cfiCond1281) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1282 Using cfiCommon1
          CFI (cfiPicker1282) NoFunction
          CFI (cfiPicker1282) Picker
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_272:
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1280) CFA_SP SP+0
          CFI (cfiCond1281) CFA_SP SP+0
          CFI (cfiPicker1282) CFA_SP SP+0
          CFI EndBlock cfiCond1280
          CFI EndBlock cfiCond1281
          CFI EndBlock cfiPicker1282

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond1283 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1284 Using cfiCommon0
          CFI (cfiCond1284) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1284) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond1284) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1284) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1284) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1284) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1284) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1284) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1284) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1284) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1284) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1284) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1284) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1284) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1284) CFA_SP SP+-2
          CFI (cfiCond1284) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1285 Using cfiCommon1
          CFI (cfiPicker1285) NoFunction
          CFI (cfiPicker1285) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond1283) CFA_SP SP+0
          CFI (cfiCond1284) CFA_SP SP+0
          CFI (cfiPicker1285) CFA_SP SP+0
          CFI EndBlock cfiCond1283
          CFI EndBlock cfiCond1284
          CFI EndBlock cfiPicker1285

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond1286 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1287 Using cfiCommon0
          CFI (cfiCond1287) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1287) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1287) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1287) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1287) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1287) CFA_SP SP+-2
          CFI (cfiCond1287) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1288 Using cfiCommon1
          CFI (cfiPicker1288) NoFunction
          CFI (cfiPicker1288) Picker
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_545:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        RET
          CFI (cfiCond1286) CFA_SP SP+0
          CFI (cfiCond1287) CFA_SP SP+0
          CFI (cfiPicker1288) CFA_SP SP+0
          CFI EndBlock cfiCond1286
          CFI EndBlock cfiCond1287
          CFI EndBlock cfiPicker1288

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond1289 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1290 Using cfiCommon0
          CFI (cfiCond1290) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1290) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond1290) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1290) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1290) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1290) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1290) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1290) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1290) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1290) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1290) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1290) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1290) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1290) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1290) CFA_SP SP+-2
          CFI (cfiCond1290) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1291 Using cfiCommon1
          CFI (cfiPicker1291) NoFunction
          CFI (cfiPicker1291) Picker
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_252:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond1289) CFA_SP SP+0
          CFI (cfiCond1290) CFA_SP SP+0
          CFI (cfiPicker1291) CFA_SP SP+0
          CFI EndBlock cfiCond1289
          CFI EndBlock cfiCond1290
          CFI EndBlock cfiPicker1291

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond1292 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1293 Using cfiCommon0
          CFI (cfiCond1293) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1293) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond1293) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1293) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1293) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1293) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1293) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1293) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1293) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1293) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1293) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1293) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1293) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1293) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1293) CFA_SP SP+-2
          CFI (cfiCond1293) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1294 Using cfiCommon1
          CFI (cfiPicker1294) NoFunction
          CFI (cfiPicker1294) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,?V2
        ADD     A,#0x2
        MOV     ?V2,A
        RET
          CFI (cfiCond1292) CFA_SP SP+0
          CFI (cfiCond1293) CFA_SP SP+0
          CFI (cfiPicker1294) CFA_SP SP+0
          CFI EndBlock cfiCond1292
          CFI EndBlock cfiCond1293
          CFI EndBlock cfiPicker1294

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond1295 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1296 Using cfiCommon0
          CFI (cfiCond1296) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1296) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond1296) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1296) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1296) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1296) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1296) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1296) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1296) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1296) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1296) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1296) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1296) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1296) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1296) CFA_SP SP+-2
          CFI (cfiCond1296) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1297 Using cfiCommon0
          CFI (cfiCond1297) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1297) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond1297) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1297) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1297) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1297) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1297) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1297) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1297) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1297) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1297) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1297) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1297) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1297) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1297) CFA_SP SP+-2
          CFI (cfiCond1297) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1298 Using cfiCommon1
          CFI (cfiPicker1298) NoFunction
          CFI (cfiPicker1298) Picker
        MOVX    @DPTR,A
        MOV     A,?V2
        ADD     A,#0x9
        MOV     ?V2,A
        RET
          CFI (cfiCond1295) CFA_SP SP+0
          CFI (cfiCond1296) CFA_SP SP+0
          CFI (cfiCond1297) CFA_SP SP+0
          CFI (cfiPicker1298) CFA_SP SP+0
          CFI EndBlock cfiCond1295
          CFI EndBlock cfiCond1296
          CFI EndBlock cfiCond1297
          CFI EndBlock cfiPicker1298

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond1299 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1300 Using cfiCommon0
          CFI (cfiCond1300) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1300) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1300) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1300) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1300) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1300) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1300) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1300) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1300) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1300) CFA_SP SP+-2
          CFI (cfiCond1300) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1301 Using cfiCommon1
          CFI (cfiPicker1301) NoFunction
          CFI (cfiPicker1301) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V6
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_240:
        INC     DPTR
        MOV     A,?V5
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_229:
        MOV     A,?V4
        MOVX    @DPTR,A
        MOV     ?V5,#0x0
        RET
          CFI (cfiCond1299) CFA_SP SP+0
          CFI (cfiCond1300) CFA_SP SP+0
          CFI (cfiPicker1301) CFA_SP SP+0
          CFI EndBlock cfiCond1299
          CFI EndBlock cfiCond1300
          CFI EndBlock cfiPicker1301
// 3256 
// 3257 /*********************************************************************
// 3258  * @fn          ZDO_ParseUserDescRsp
// 3259  *
// 3260  * @brief       This function parses the incoming User
// 3261  *              Descriptor Response.
// 3262  *
// 3263  * @param       inMsg - incoming response message
// 3264  *
// 3265  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3266  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3267  *          by the calling function [osal_mem_free()].
// 3268  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3269 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock1302 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3270 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3271   ZDO_UserDescRsp_t *pRsp;
// 3272   uint8 *msg;
// 3273   uint8 descLen = 0;
        MOV     ?V4,#0x0
// 3274 
// 3275   msg = inMsg->asdu;
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_462:
        MOV     ?V2,R0
        MOV     ?V3,R1
// 3276 
// 3277   if ( msg[0] == ZSuccess )
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??ZDO_ParseUserDescRsp_0
// 3278   {
// 3279     descLen = msg[3];
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
// 3280   }
// 3281 
// 3282   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        MOV     R6,?V4
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_566:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 3283   if ( pRsp )
        MOV     A,R2
        ORL     A,?V1
        JZ      ??ZDO_ParseUserDescRsp_1
// 3284   {
// 3285     pRsp->status = msg[0];
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_570:
        LCALL   ?Subroutine39 & 0xFFFF
// 3286     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_57:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_127:
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_110:
        MOV     A,R2
        MOV     DPL,?V0
        MOV     DPH,R3
        LCALL   ??Subroutine211_0 & 0xFFFF
// 3287     pRsp->length = descLen;
??CrossCallReturnLabel_481:
        MOV     DPL,?V0
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
// 3288     if ( descLen )
        JZ      ??ZDO_ParseUserDescRsp_1
// 3289     {
// 3290       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V2
        ADD     A,#0x4
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V5,A
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R6
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,?V0
        LCALL   ??Subroutine222_0 & 0xFFFF
// 3291     }
// 3292   }
??CrossCallReturnLabel_563:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 3293 
// 3294   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ??Subroutine194_0 & 0xFFFF
// 3295 }
          CFI EndBlock cfiBlock1302

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond1303 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_149
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1304 Using cfiCommon0
          CFI (cfiCond1304) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond1304) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond1304) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1304) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1304) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1304) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1304) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1304) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1304) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1304) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1304) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1304) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1304) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1304) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1304) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1304) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1304) CFA_SP SP+-2
          CFI (cfiCond1304) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1305 Using cfiCommon0
          CFI (cfiCond1305) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1305) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond1305) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1305) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1305) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1305) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1305) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1305) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1305) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1305) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1305) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1305) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1305) CFA_SP SP+-2
          CFI (cfiCond1305) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1306 Using cfiCommon0
          CFI (cfiCond1306) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1306) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond1306) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1306) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1306) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1306) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1306) CFA_SP SP+-2
          CFI (cfiCond1306) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1307 Using cfiCommon0
          CFI (cfiCond1307) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1307) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond1307) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1307) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1307) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1307) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1307) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1307) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1307) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1307) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1307) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1307) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1307) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1307) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1307) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1307) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1307) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1307) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1307) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1307) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1307) CFA_SP SP+-2
          CFI (cfiCond1307) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1308 Using cfiCommon1
          CFI (cfiPicker1308) NoFunction
          CFI (cfiPicker1308) Picker
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_273:
        RET
          CFI (cfiCond1303) CFA_SP SP+0
          CFI (cfiCond1304) CFA_SP SP+0
          CFI (cfiCond1305) CFA_SP SP+0
          CFI (cfiCond1306) CFA_SP SP+0
          CFI (cfiCond1307) CFA_SP SP+0
          CFI (cfiPicker1308) CFA_SP SP+0
          CFI EndBlock cfiCond1303
          CFI EndBlock cfiCond1304
          CFI EndBlock cfiCond1305
          CFI EndBlock cfiCond1306
          CFI EndBlock cfiCond1307
          CFI EndBlock cfiPicker1308

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine159:
          CFI Block cfiCond1309 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_549
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1310 Using cfiCommon0
          CFI (cfiCond1310) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1310) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_550
          CFI (cfiCond1310) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1310) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1310) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1310) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1310) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1310) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1310) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1310) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1310) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1310) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1310) CFA_SP SP+-4
          CFI (cfiCond1310) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1311 Using cfiCommon0
          CFI (cfiCond1311) Function ZDO_ParseEPListRsp
          CFI (cfiCond1311) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_113
          CFI (cfiCond1311) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1311) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1311) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1311) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1311) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1311) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1311) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1311) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1311) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1311) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1311) CFA_SP SP+-4
          CFI (cfiCond1311) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1312 Using cfiCommon0
          CFI (cfiCond1312) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1312) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_114
          CFI (cfiCond1312) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1312) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1312) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1312) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1312) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1312) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1312) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1312) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1312) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1312) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1312) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1312) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1312) CFA_SP SP+-4
          CFI (cfiCond1312) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1313 Using cfiCommon0
          CFI (cfiCond1313) Function ZDO_ProcessParentAnnce
          CFI (cfiCond1313) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_149
          CFI (cfiCond1313) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1313) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1313) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1313) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1313) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1313) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1313) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1313) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1313) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1313) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1313) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1313) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1313) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1313) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1313) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1313) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1313) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1313) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1313) CFA_SP SP+-4
          CFI (cfiCond1313) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1314 Using cfiCommon0
          CFI (cfiCond1314) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond1314) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_150
          CFI (cfiCond1314) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1314) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1314) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1314) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1314) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1314) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1314) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1314) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1314) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1314) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1314) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1314) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1314) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1314) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1314) CFA_SP SP+-4
          CFI (cfiCond1314) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1315 Using cfiCommon0
          CFI (cfiCond1315) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_151
          CFI (cfiCond1315) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1315) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1315) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1315) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1315) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1315) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1315) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1315) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1315) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1315) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1315) CFA_SP SP+-4
          CFI (cfiCond1315) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1316 Using cfiCommon0
          CFI (cfiCond1316) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1316) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_152
          CFI (cfiCond1316) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1316) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1316) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1316) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1316) CFA_SP SP+-4
          CFI (cfiCond1316) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1317 Using cfiCommon0
          CFI (cfiCond1317) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1317) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_153
          CFI (cfiCond1317) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1317) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1317) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1317) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1317) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1317) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1317) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1317) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1317) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1317) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1317) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1317) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1317) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1317) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1317) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1317) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1317) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1317) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1317) CFA_SP SP+-4
          CFI (cfiCond1317) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1318 Using cfiCommon0
          CFI (cfiCond1318) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_86
          CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1318) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1318) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1318) CFA_SP SP+-4
          CFI (cfiCond1318) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1319 Using cfiCommon0
          CFI (cfiCond1319) Function ZDO_ParseParentAnnce
          CFI (cfiCond1319) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_87
          CFI (cfiCond1319) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1319) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1319) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1319) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1319) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1319) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1319) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1319) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1319) CFA_SP SP+-4
          CFI (cfiCond1319) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1320 Using cfiCommon1
          CFI (cfiPicker1320) NoFunction
          CFI (cfiPicker1320) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV     DPH,A
        RET
          CFI (cfiCond1309) CFA_SP SP+-2
          CFI (cfiCond1310) CFA_SP SP+-2
          CFI (cfiCond1311) CFA_SP SP+-2
          CFI (cfiCond1312) CFA_SP SP+-2
          CFI (cfiCond1313) CFA_SP SP+-2
          CFI (cfiCond1314) CFA_SP SP+-2
          CFI (cfiCond1315) CFA_SP SP+-2
          CFI (cfiCond1316) CFA_SP SP+-2
          CFI (cfiCond1317) CFA_SP SP+-2
          CFI (cfiCond1318) CFA_SP SP+-2
          CFI (cfiCond1319) CFA_SP SP+-2
          CFI (cfiPicker1320) CFA_SP SP+0
          CFI EndBlock cfiCond1309
          CFI EndBlock cfiCond1310
          CFI EndBlock cfiCond1311
          CFI EndBlock cfiCond1312
          CFI EndBlock cfiCond1313
          CFI EndBlock cfiCond1314
          CFI EndBlock cfiCond1315
          CFI EndBlock cfiCond1316
          CFI EndBlock cfiCond1317
          CFI EndBlock cfiCond1318
          CFI EndBlock cfiCond1319
          CFI EndBlock cfiPicker1320

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond1321 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1322 Using cfiCommon0
          CFI (cfiCond1322) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1322) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond1322) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1322) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1322) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1322) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1322) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1322) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1322) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1322) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1322) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1322) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1322) CFA_SP SP+-2
          CFI (cfiCond1322) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1323 Using cfiCommon1
          CFI (cfiPicker1323) NoFunction
          CFI (cfiPicker1323) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        RET
          CFI (cfiCond1321) CFA_SP SP+0
          CFI (cfiCond1322) CFA_SP SP+0
          CFI (cfiPicker1323) CFA_SP SP+0
          CFI EndBlock cfiCond1321
          CFI EndBlock cfiCond1322
          CFI EndBlock cfiPicker1323

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond1324 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1325 Using cfiCommon0
          CFI (cfiCond1325) Function ZDO_ParseEPListRsp
          CFI (cfiCond1325) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond1325) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1325) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1325) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1325) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1325) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1325) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1325) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1325) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1325) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1325) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1325) CFA_SP SP+-2
          CFI (cfiCond1325) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1326 Using cfiCommon0
          CFI (cfiCond1326) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1326) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond1326) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1326) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1326) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1326) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1326) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1326) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1326) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1326) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1326) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1326) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1326) CFA_SP SP+-2
          CFI (cfiCond1326) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1327 Using cfiCommon0
          CFI (cfiCond1327) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1327) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond1327) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1327) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1327) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1327) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1327) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1327) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1327) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1327) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1327) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1327) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1327) CFA_SP SP+-2
          CFI (cfiCond1327) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1328 Using cfiCommon0
          CFI (cfiCond1328) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1328) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond1328) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1328) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1328) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1328) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1328) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1328) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1328) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1328) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1328) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1328) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1328) CFA_SP SP+-2
          CFI (cfiCond1328) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1329 Using cfiCommon1
          CFI (cfiPicker1329) NoFunction
          CFI (cfiPicker1329) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        RET
          CFI (cfiCond1324) CFA_SP SP+0
          CFI (cfiCond1325) CFA_SP SP+0
          CFI (cfiCond1326) CFA_SP SP+0
          CFI (cfiCond1327) CFA_SP SP+0
          CFI (cfiCond1328) CFA_SP SP+0
          CFI (cfiPicker1329) CFA_SP SP+0
          CFI EndBlock cfiCond1324
          CFI EndBlock cfiCond1325
          CFI EndBlock cfiCond1326
          CFI EndBlock cfiCond1327
          CFI EndBlock cfiCond1328
          CFI EndBlock cfiPicker1329

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond1330 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_571
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1331 Using cfiCommon0
          CFI (cfiCond1331) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1331) Conditional ??CrossCallReturnLabel_572
          CFI (cfiCond1331) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1331) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1331) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1331) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1331) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1331) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1331) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1331) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1331) CFA_SP SP+-2
          CFI (cfiCond1331) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1332 Using cfiCommon0
          CFI (cfiCond1332) Function ZDO_ParseAddrRsp
          CFI (cfiCond1332) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1332) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1332) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1332) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1332) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1332) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1332) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1332) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1332) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1332) CFA_SP SP+-2
          CFI (cfiCond1332) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1333 Using cfiCommon1
          CFI (cfiPicker1333) NoFunction
          CFI (cfiPicker1333) Picker
        INC     DPTR
          CFI EndBlock cfiCond1330
          CFI EndBlock cfiCond1331
          CFI EndBlock cfiCond1332
          CFI EndBlock cfiPicker1333
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine223_0:
          CFI Block cfiCond1334 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_567
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1335 Using cfiCommon0
          CFI (cfiCond1335) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1335) Conditional ??CrossCallReturnLabel_568
          CFI (cfiCond1335) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1335) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1335) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1335) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1335) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1335) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1335) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1335) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1335) CFA_SP SP+-2
          CFI (cfiCond1335) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1336 Using cfiCommon0
          CFI (cfiCond1336) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1336) Conditional ??CrossCallReturnLabel_569
          CFI (cfiCond1336) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1336) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1336) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1336) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1336) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1336) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1336) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1336) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1336) CFA_SP SP+-2
          CFI (cfiCond1336) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1337 Using cfiCommon0
          CFI (cfiCond1337) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_570
          CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1337) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1337) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1337) CFA_SP SP+-2
          CFI (cfiCond1337) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1338 Using cfiCommon0
          CFI (cfiCond1338) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1338) Conditional ??CrossCallReturnLabel_571
          CFI (cfiCond1338) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1338) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1338) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1338) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1338) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1338) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1338) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1338) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1338) CFA_SP SP+-2
          CFI (cfiCond1338) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1339 Using cfiCommon0
          CFI (cfiCond1339) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1339) Conditional ??CrossCallReturnLabel_572
          CFI (cfiCond1339) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1339) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1339) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1339) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1339) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1339) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1339) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1339) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1339) CFA_SP SP+-2
          CFI (cfiCond1339) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1340 Using cfiCommon0
          CFI (cfiCond1340) Function ZDO_ParseAddrRsp
          CFI (cfiCond1340) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1340) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1340) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1340) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1340) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1340) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1340) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1340) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1340) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1340) CFA_SP SP+-2
          CFI (cfiCond1340) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1341 Using cfiCommon1
          CFI (cfiPicker1341) NoFunction
          CFI (cfiPicker1341) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI (cfiCond1334) CFA_SP SP+0
          CFI (cfiCond1335) CFA_SP SP+0
          CFI (cfiCond1336) CFA_SP SP+0
          CFI (cfiCond1337) CFA_SP SP+0
          CFI (cfiCond1338) CFA_SP SP+0
          CFI (cfiCond1339) CFA_SP SP+0
          CFI (cfiCond1340) CFA_SP SP+0
          CFI (cfiPicker1341) CFA_SP SP+0
          CFI EndBlock cfiCond1334
          CFI EndBlock cfiCond1335
          CFI EndBlock cfiCond1336
          CFI EndBlock cfiCond1337
          CFI EndBlock cfiCond1338
          CFI EndBlock cfiCond1339
          CFI EndBlock cfiCond1340
          CFI EndBlock cfiPicker1341
// 3296 
// 3297 /*********************************************************************
// 3298  * @fn          ZDO_ParseSimpleDescBuf
// 3299  *
// 3300  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3301  *
// 3302  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3303  * @param       desc - SimpleDescriptionFormat_t *
// 3304  *
// 3305  *              This routine allocates storage for the cluster IDs because
// 3306  *              they are 16-bit and need to be aligned to be properly processed.
// 3307  *              This routine returns non-zero if an allocation fails.
// 3308  *
// 3309  *              NOTE: This means that the caller or user of the input structure
// 3310  *                    is responsible for freeing the memory
// 3311  *
// 3312  * @return      0: success
// 3313  *              1: failure due to malloc failure.
// 3314  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3315 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock1342 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3316 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3317   uint8 num, i;
// 3318 
// 3319   desc->EndPoint = *buf++;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_576:
        LCALL   ?Subroutine37 & 0xFFFF
// 3320   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_53:
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_104:
        LCALL   ?Subroutine28 & 0xFFFF
// 3321   buf += 2;
??CrossCallReturnLabel_583:
        JNC     ??ZDO_ParseSimpleDescBuf_0
        INC     R7
// 3322   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_0:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_105:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine21 & 0xFFFF
// 3323   buf += 2;
// 3324   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_555:
        SWAP    A
        ANL     A,#0xf
// 3325 
// 3326   desc->Reserved = 0;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine16 & 0xFFFF
// 3327   buf++;
// 3328 
// 3329   // move in input cluster list (if any). allocate aligned memory.
// 3330   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_15:
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseSimpleDescBuf_1
        INC     R7
??ZDO_ParseSimpleDescBuf_1:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V4
        MOVX    @DPTR,A
// 3331   if ( num )
        MOV     A,R4
        ADD     A,#0x7
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V3,A
        MOV     A,?V4
        JZ      ??ZDO_ParseSimpleDescBuf_2
// 3332   {
// 3333     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_581:
        ORL     A,R3
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3334     {
// 3335       // malloc failed. we're done.
// 3336       return 1;
// 3337     }
// 3338     for (i=0; i<num; ++i)
        MOV     R4,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_4
// 3339     {
// 3340       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_5:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V6,A
        LCALL   ?Subroutine78 & 0xFFFF
// 3341       buf += 2;
// 3342     }
??CrossCallReturnLabel_111:
        MOV     A,?V6
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     ?V7,A
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_161:
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_586:
        JNC     ??ZDO_ParseSimpleDescBuf_6
        INC     R7
??ZDO_ParseSimpleDescBuf_6:
        INC     R4
??ZDO_ParseSimpleDescBuf_4:
        MOV     A,R4
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ParseSimpleDescBuf_5
// 3343   }
// 3344 
// 3345   // move in output cluster list (if any). allocate aligned memory.
// 3346   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3347   if (num)
        JZ      ??ZDO_ParseSimpleDescBuf_7
// 3348   {
// 3349     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_582:
        ORL     A,R3
        JNZ     ??ZDO_ParseSimpleDescBuf_8
// 3350     {
// 3351       // malloc failed. free input cluster list memory if there is any
// 3352       if ( desc->pAppInClusterList != NULL )
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_331:
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3353       {
// 3354         osal_mem_free(desc->pAppInClusterList);
        ; Setup parameters for call to function osal_mem_free
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3355 
// 3356         desc->pAppInClusterList = NULL;
        MOV     DPL,?V2
        MOV     DPH,?V3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 3357       }
// 3358       return 1;
??ZDO_ParseSimpleDescBuf_3:
        MOV     R1,#0x1
        SJMP    ??ZDO_ParseSimpleDescBuf_9
// 3359     }
// 3360     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_8:
        MOV     R4,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_10
// 3361     {
// 3362       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_11:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0,A
        LCALL   ?Subroutine78 & 0xFFFF
// 3363       buf += 2;
// 3364     }
??CrossCallReturnLabel_112:
        MOV     A,?V0
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_194:
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_587:
        JNC     ??ZDO_ParseSimpleDescBuf_12
        INC     R7
??ZDO_ParseSimpleDescBuf_12:
        INC     R4
??ZDO_ParseSimpleDescBuf_10:
        MOV     A,R4
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ParseSimpleDescBuf_11
// 3365   }
// 3366   return 0;
??ZDO_ParseSimpleDescBuf_7:
        MOV     R1,#0x0
??ZDO_ParseSimpleDescBuf_9:
        LJMP    ??Subroutine194_0 & 0xFFFF
// 3367 }
          CFI EndBlock cfiBlock1342

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond1343 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1344 Using cfiCommon0
          CFI (cfiCond1344) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1344) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1344) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1344) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1344) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1344) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1344) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1344) CFA_SP SP+-2
          CFI (cfiCond1344) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1345 Using cfiCommon1
          CFI (cfiPicker1345) NoFunction
          CFI (cfiPicker1345) Picker
        MOV     A,R4
        ADD     A,0xE0 /* A   */
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        RET
          CFI (cfiCond1343) CFA_SP SP+0
          CFI (cfiCond1344) CFA_SP SP+0
          CFI (cfiPicker1345) CFA_SP SP+0
          CFI EndBlock cfiCond1343
          CFI EndBlock cfiCond1344
          CFI EndBlock cfiPicker1345

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond1346 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1347 Using cfiCommon0
          CFI (cfiCond1347) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1347) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1347) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1347) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1347) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1347) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1347) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1347) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1347) CFA_SP SP+-2
          CFI (cfiCond1347) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1348 Using cfiCommon1
          CFI (cfiPicker1348) NoFunction
          CFI (cfiPicker1348) Picker
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,?V6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V7
        RET
          CFI (cfiCond1346) CFA_SP SP+0
          CFI (cfiCond1347) CFA_SP SP+0
          CFI (cfiPicker1348) CFA_SP SP+0
          CFI EndBlock cfiCond1346
          CFI EndBlock cfiCond1347
          CFI EndBlock cfiPicker1348

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond1349 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_577
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1350 Using cfiCommon0
          CFI (cfiCond1350) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1350) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1350) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1350) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1350) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1350) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1350) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1350) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1350) CFA_SP SP+-2
          CFI (cfiCond1350) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1351 Using cfiCommon1
          CFI (cfiPicker1351) NoFunction
          CFI (cfiPicker1351) Picker
        INC     DPTR
          CFI EndBlock cfiCond1349
          CFI EndBlock cfiCond1350
          CFI EndBlock cfiPicker1351
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine224_0:
          CFI Block cfiCond1352 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_574
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1353 Using cfiCommon0
          CFI (cfiCond1353) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1353) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1353) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1353) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1353) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1353) CFA_SP SP+-2
          CFI (cfiCond1353) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1354 Using cfiCommon0
          CFI (cfiCond1354) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1354) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1354) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1354) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1354) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1354) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1354) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1354) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1354) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1354) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1354) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1354) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1354) CFA_SP SP+-2
          CFI (cfiCond1354) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1355 Using cfiCommon0
          CFI (cfiCond1355) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1355) Conditional ??CrossCallReturnLabel_577
          CFI (cfiCond1355) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1355) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1355) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1355) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1355) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1355) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1355) CFA_SP SP+-2
          CFI (cfiCond1355) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1356 Using cfiCommon0
          CFI (cfiCond1356) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1356) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1356) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1356) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1356) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1356) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1356) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1356) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1356) CFA_SP SP+-2
          CFI (cfiCond1356) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1357 Using cfiCommon1
          CFI (cfiPicker1357) NoFunction
          CFI (cfiPicker1357) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI (cfiCond1352) CFA_SP SP+0
          CFI (cfiCond1353) CFA_SP SP+0
          CFI (cfiCond1354) CFA_SP SP+0
          CFI (cfiCond1355) CFA_SP SP+0
          CFI (cfiCond1356) CFA_SP SP+0
          CFI (cfiPicker1357) CFA_SP SP+0
          CFI EndBlock cfiCond1352
          CFI EndBlock cfiCond1353
          CFI EndBlock cfiCond1354
          CFI EndBlock cfiCond1355
          CFI EndBlock cfiCond1356
          CFI EndBlock cfiPicker1357

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond1358 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1359 Using cfiCommon0
          CFI (cfiCond1359) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1359) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond1359) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1359) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1359) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1359) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1359) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1359) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1359) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1359) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1359) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1359) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1359) CFA_SP SP+-2
          CFI (cfiCond1359) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1360 Using cfiCommon1
          CFI (cfiPicker1360) NoFunction
          CFI (cfiPicker1360) Picker
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_547:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI (cfiCond1358) CFA_SP SP+0
          CFI (cfiCond1359) CFA_SP SP+0
          CFI (cfiPicker1360) CFA_SP SP+0
          CFI EndBlock cfiCond1358
          CFI EndBlock cfiCond1359
          CFI EndBlock cfiPicker1360

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond1361 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_579
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1362 Using cfiCommon0
          CFI (cfiCond1362) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1362) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1362) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1362) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1362) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1362) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1362) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1362) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1362) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1362) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1362) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1362) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1362) CFA_SP SP+-2
          CFI (cfiCond1362) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1363 Using cfiCommon1
          CFI (cfiPicker1363) NoFunction
          CFI (cfiPicker1363) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond1361
          CFI EndBlock cfiCond1362
          CFI EndBlock cfiPicker1363
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine225_0:
          CFI Block cfiCond1364 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_581
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1365 Using cfiCommon0
          CFI (cfiCond1365) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1365) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1365) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1365) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1365) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1365) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1365) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1365) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1365) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1365) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1365) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1365) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1365) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1365) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1365) CFA_SP SP+-2
          CFI (cfiCond1365) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1366 Using cfiCommon0
          CFI (cfiCond1366) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1366) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1366) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1366) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1366) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1366) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1366) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1366) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1366) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1366) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1366) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1366) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1366) CFA_SP SP+-2
          CFI (cfiCond1366) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1367 Using cfiCommon1
          CFI (cfiPicker1367) NoFunction
          CFI (cfiPicker1367) Picker
        MOV     A,R0
          CFI EndBlock cfiCond1364
          CFI EndBlock cfiCond1365
          CFI EndBlock cfiCond1366
          CFI EndBlock cfiPicker1367
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine226_0:
          CFI Block cfiCond1368 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_580
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1369 Using cfiCommon0
          CFI (cfiCond1369) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1369) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1369) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1369) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1369) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1369) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1369) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1369) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1369) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1369) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1369) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1369) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1369) CFA_SP SP+-2
          CFI (cfiCond1369) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1370 Using cfiCommon0
          CFI (cfiCond1370) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1370) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1370) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1370) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1370) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1370) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1370) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1370) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1370) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1370) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1370) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1370) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1370) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1370) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1370) CFA_SP SP+-2
          CFI (cfiCond1370) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1371 Using cfiCommon0
          CFI (cfiCond1371) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1371) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1371) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1371) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1371) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1371) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1371) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1371) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1371) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1371) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1371) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1371) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1371) CFA_SP SP+-2
          CFI (cfiCond1371) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1372 Using cfiCommon1
          CFI (cfiPicker1372) NoFunction
          CFI (cfiPicker1372) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,R2
        RET
          CFI (cfiCond1368) CFA_SP SP+0
          CFI (cfiCond1369) CFA_SP SP+0
          CFI (cfiCond1370) CFA_SP SP+0
          CFI (cfiCond1371) CFA_SP SP+0
          CFI (cfiPicker1372) CFA_SP SP+0
          CFI EndBlock cfiCond1368
          CFI EndBlock cfiCond1369
          CFI EndBlock cfiCond1370
          CFI EndBlock cfiCond1371
          CFI EndBlock cfiPicker1372

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond1373 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1374 Using cfiCommon0
          CFI (cfiCond1374) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1374) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond1374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1374) CFA_SP SP+-2
          CFI (cfiCond1374) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1375 Using cfiCommon1
          CFI (cfiPicker1375) NoFunction
          CFI (cfiPicker1375) Picker
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_560:
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI (cfiCond1373) CFA_SP SP+0
          CFI (cfiCond1374) CFA_SP SP+0
          CFI (cfiPicker1375) CFA_SP SP+0
          CFI EndBlock cfiCond1373
          CFI EndBlock cfiCond1374
          CFI EndBlock cfiPicker1375

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond1376 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_583
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1377 Using cfiCommon0
          CFI (cfiCond1377) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_584
          CFI (cfiCond1377) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1377) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1377) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1377) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1377) CFA_SP SP+-2
          CFI (cfiCond1377) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1378 Using cfiCommon1
          CFI (cfiPicker1378) NoFunction
          CFI (cfiPicker1378) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond1376
          CFI EndBlock cfiCond1377
          CFI EndBlock cfiPicker1378
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine227_0:
          CFI Block cfiCond1379 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_585
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1380 Using cfiCommon0
          CFI (cfiCond1380) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1380) Conditional ??CrossCallReturnLabel_586
          CFI (cfiCond1380) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1380) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1380) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1380) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1380) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1380) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1380) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1380) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1380) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1380) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1380) CFA_SP SP+-2
          CFI (cfiCond1380) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1381 Using cfiCommon0
          CFI (cfiCond1381) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1381) Conditional ??CrossCallReturnLabel_587
          CFI (cfiCond1381) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1381) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1381) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1381) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1381) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1381) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1381) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1381) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1381) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1381) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1381) CFA_SP SP+-2
          CFI (cfiCond1381) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1382 Using cfiCommon0
          CFI (cfiCond1382) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1382) Conditional ??CrossCallReturnLabel_583
          CFI (cfiCond1382) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1382) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1382) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1382) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1382) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1382) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1382) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1382) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1382) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1382) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1382) CFA_SP SP+-2
          CFI (cfiCond1382) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1383 Using cfiCommon0
          CFI (cfiCond1383) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1383) Conditional ??CrossCallReturnLabel_584
          CFI (cfiCond1383) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1383) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1383) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1383) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1383) CFA_SP SP+-2
          CFI (cfiCond1383) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1384 Using cfiCommon1
          CFI (cfiPicker1384) NoFunction
          CFI (cfiPicker1384) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI (cfiCond1379) CFA_SP SP+0
          CFI (cfiCond1380) CFA_SP SP+0
          CFI (cfiCond1381) CFA_SP SP+0
          CFI (cfiCond1382) CFA_SP SP+0
          CFI (cfiCond1383) CFA_SP SP+0
          CFI (cfiPicker1384) CFA_SP SP+0
          CFI EndBlock cfiCond1379
          CFI EndBlock cfiCond1380
          CFI EndBlock cfiCond1381
          CFI EndBlock cfiCond1382
          CFI EndBlock cfiCond1383
          CFI EndBlock cfiPicker1384
// 3368 
// 3369 /*********************************************************************
// 3370  * @fn          ZDO_ParseDeviceAnnce
// 3371  *
// 3372  * @brief       Parse a Device Announce message.
// 3373  *
// 3374  * @param       inMsg - Incoming message
// 3375  * @param       pAnnce - place to put the parsed information
// 3376  *
// 3377  * @return      none
// 3378  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3379 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1385 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3380 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3381   uint8 *msg;
// 3382 
// 3383   // Parse incoming message
// 3384   msg = inMsg->asdu;
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL   ?Subroutine85 & 0xFFFF
// 3385   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_123:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_544:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine28 & 0xFFFF
// 3386   msg += 2;
??CrossCallReturnLabel_584:
        JNC     ??ZDO_ParseDeviceAnnce_0
        INC     R7
// 3387   osal_cpyExtAddr( pAnnce->extAddr, msg );
??ZDO_ParseDeviceAnnce_0:
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_375:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3388   msg += Z_EXTADDR_LEN;
// 3389   pAnnce->capabilities = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_98:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3390 }
        LJMP    ??Subroutine178_0 & 0xFFFF
          CFI EndBlock cfiBlock1385

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond1386 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1387 Using cfiCommon0
          CFI (cfiCond1387) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1387) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond1387) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1387) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1387) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1387) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1387) CFA_SP SP+-2
          CFI (cfiCond1387) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1388 Using cfiCommon1
          CFI (cfiPicker1388) NoFunction
          CFI (cfiPicker1388) Picker
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_403:
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        RET
          CFI (cfiCond1386) CFA_SP SP+0
          CFI (cfiCond1387) CFA_SP SP+0
          CFI (cfiPicker1388) CFA_SP SP+0
          CFI EndBlock cfiCond1386
          CFI EndBlock cfiCond1387
          CFI EndBlock cfiPicker1388
// 3391 
// 3392 /*********************************************************************
// 3393  * @fn          ZDO_ParseParentAnnce
// 3394  *
// 3395  * @brief       Parse Parent Announce and Parent Announce Rsp messages,
// 3396  *              both messages have the same payload.
// 3397  *
// 3398  * @param       inMsg - Incoming message
// 3399  *
// 3400  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3401  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3402  *          by the calling function [osal_mem_free()].
// 3403  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3404 ZDO_ParentAnnce_t *ZDO_ParseParentAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ParseParentAnnce:
          CFI Block cfiBlock1389 Using cfiCommon0
          CFI Function ZDO_ParseParentAnnce
        CODE
// 3405 {
        FUNCALL ZDO_ParseParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseParentAnnce, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3406   ZDO_ParentAnnce_t *pRcvdMsg;
// 3407   uint8 *msg;
// 3408   uint8 numChildren;
// 3409 
// 3410   msg = inMsg->asdu;
        LCALL   ?Subroutine61 & 0xFFFF
// 3411   numChildren = *msg++;
// 3412 
// 3413   // Allocate a buffer big enough to handle the list
// 3414   pRcvdMsg = (ZDO_ParentAnnce_t *)osal_mem_alloc(
// 3415              (sizeof(ZDO_ParentAnnce_t) + (numChildren * sizeof(ZDO_ChildInfo_t))));
??CrossCallReturnLabel_87:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     B,#0xc
        MUL     AB
        MOV     R1,B
        ADD     A,#0x1
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
// 3416 
// 3417   if ( pRcvdMsg )
        MOV     A,R2
        ORL     A,?V5
        JZ      ??ZDO_ParseParentAnnce_0
// 3418   {
// 3419     uint8 x;
// 3420     ZDO_ChildInfo_t *pList = pRcvdMsg->childInfo;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     ?V0,DPL
        MOV     ?V1,DPH
// 3421 
// 3422     pRcvdMsg->numOfChildren = numChildren;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
// 3423 
// 3424     for ( x = 0; x < numChildren; x++ )
        MOV     ?V2,#0x0
        SJMP    ??ZDO_ParseParentAnnce_1
// 3425     {
// 3426       osal_cpyExtAddr( pList->extAddr, msg );
??ZDO_ParseParentAnnce_2:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3427       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseParentAnnce_3
        INC     R7
// 3428 
// 3429       pList->age = osal_build_uint32( msg, 4 );
??ZDO_ParseParentAnnce_3:
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XSTORE_R0123
// 3430       msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseParentAnnce_4
        INC     R7
// 3431 
// 3432       pList++;
??ZDO_ParseParentAnnce_4:
        MOV     A,?V0
        ADD     A,#0xc
        MOV     ?V0,A
        JNC     ??ZDO_ParseParentAnnce_5
        INC     ?V1
// 3433     }
??ZDO_ParseParentAnnce_5:
        INC     ?V2
??ZDO_ParseParentAnnce_1:
        MOV     A,?V2
        CLR     C
        SUBB    A,?V3
        JC      ??ZDO_ParseParentAnnce_2
// 3434   }
// 3435 
// 3436   return ( pRcvdMsg );
??ZDO_ParseParentAnnce_0:
        MOV     R2,?V4
        MOV     R3,?V5
        LJMP    ?Subroutine5 & 0xFFFF
// 3437 }
          CFI EndBlock cfiBlock1389

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond1390 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1391 Using cfiCommon0
          CFI (cfiCond1391) Function ZDO_ParseParentAnnce
          CFI (cfiCond1391) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond1391) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1391) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1391) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1391) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1391) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1391) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1391) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1391) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1391) CFA_SP SP+-2
          CFI (cfiCond1391) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1392 Using cfiCommon1
          CFI (cfiPicker1392) NoFunction
          CFI (cfiPicker1392) Picker
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_270:
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_553:
        MOV     ?V3,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI (cfiCond1390) CFA_SP SP+0
          CFI (cfiCond1391) CFA_SP SP+0
          CFI (cfiPicker1392) CFA_SP SP+0
          CFI EndBlock cfiCond1390
          CFI EndBlock cfiCond1391
          CFI EndBlock cfiPicker1392
// 3438 
// 3439 /*********************************************************************
// 3440  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3441  *
// 3442  * @brief       This function handles parsing of the incoming Management
// 3443  *              Network Update notify.
// 3444  *
// 3445  * @param       inMsg - incoming message (request)
// 3446  *
// 3447  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3448  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3449  *          by the calling function [osal_mem_free()].
// 3450  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3451 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1393 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3452 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
// 3453   uint8 status;
// 3454   uint32 scannedChannels = 0;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
        MOV     ?V6,#0x0
        MOV     ?V7,#0x0
// 3455   uint16 totalTransmissions = 0;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
// 3456   uint16 transmissionFailures = 0;
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
// 3457   uint8 listCount = 0;
        MOV     ?V10,#0x0
// 3458   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_153:
        MOVX    A,@DPTR
        MOV     ?V8,A
        INC     DPTR
        MOVX    A,@DPTR
// 3459   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3460 
// 3461   status = *msg++;
        MOV     DPL,?V8
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V11,A
        INC     DPTR
        MOV     ?V8,DPL
        MOV     ?V9,DPH
// 3462   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3463   {
// 3464     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 3465     msg += 4;
        MOV     A,?V8
        ADD     A,#0x4
        MOV     ?V8,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_1
        INC     ?V9
// 3466     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_1:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_589:
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 3467     msg += 2;
        MOV     A,?V8
        ADD     A,#0x2
        MOV     ?V8,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_2
        INC     ?V9
// 3468     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_2:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_590:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
// 3469     msg += 2;
// 3470     listCount = *msg++;
        MOV     DPL,?V8
        MOV     DPH,?V9
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V10,A
        MOV     A,?V8
        ADD     A,#0x3
        MOV     ?V8,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_0
        INC     ?V9
// 3471   }
// 3472 
// 3473   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        MOV     R6,?V10
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        LCALL   ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_537:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V14,R2
        MOV     ?V15,R3
// 3474 
// 3475   if ( pRsp )
        MOV     A,R2
        ORL     A,?V15
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3476   {
// 3477     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V11
        MOVX    @DPTR,A
// 3478     pRsp->scannedChannels = scannedChannels;
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
// 3479     pRsp->totalTransmissions = totalTransmissions;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine13 & 0xFFFF
// 3480     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_7:
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        LCALL   ?Subroutine13 & 0xFFFF
// 3481     pRsp->listCount = listCount;
??CrossCallReturnLabel_8:
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
// 3482 
// 3483     // Allocate a buffer big enough to handle the list.
// 3484     if ( listCount > 0 )
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3485     {
// 3486       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V10,#0x0
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R6
        MOV     R4,A
        MOV     R5,#0x0
        LCALL   ?Subroutine121 & 0xFFFF
// 3487     }
// 3488   }
??CrossCallReturnLabel_539:
        ADDC    A,?V15
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 3489 
// 3490   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_3:
        MOV     R2,?V14
        MOV     R3,?V15
        LJMP    ??Subroutine186_0 & 0xFFFF
// 3491 }
          CFI EndBlock cfiBlock1393

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond1394 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_589
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1395 Using cfiCommon0
          CFI (cfiCond1395) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1395) Conditional ??CrossCallReturnLabel_590
          CFI (cfiCond1395) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1395) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1395) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1395) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1395) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1395) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1395) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1395) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1395) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1395) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1395) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1395) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1395) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1395) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1395) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1395) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1395) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1395) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1395) CFA_SP SP+-2
          CFI (cfiCond1395) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1396 Using cfiCommon1
          CFI (cfiPicker1396) NoFunction
          CFI (cfiPicker1396) Picker
        MOV     DPL,A
        MOV     DPH,?V9
          CFI EndBlock cfiCond1394
          CFI EndBlock cfiCond1395
          CFI EndBlock cfiPicker1396
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine228_0:
          CFI Block cfiCond1397 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_588
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1398 Using cfiCommon0
          CFI (cfiCond1398) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1398) Conditional ??CrossCallReturnLabel_589
          CFI (cfiCond1398) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1398) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1398) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1398) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1398) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1398) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1398) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1398) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1398) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1398) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1398) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1398) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1398) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1398) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1398) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1398) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1398) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1398) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1398) CFA_SP SP+-2
          CFI (cfiCond1398) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1399 Using cfiCommon0
          CFI (cfiCond1399) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_590
          CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1399) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1399) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1399) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1399) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1399) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1399) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1399) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1399) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1399) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1399) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1399) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1399) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1399) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1399) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1399) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1399) CFA_SP SP+-2
          CFI (cfiCond1399) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1400 Using cfiCommon1
          CFI (cfiPicker1400) NoFunction
          CFI (cfiPicker1400) Picker
        LCALL   ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_592:
        RET
          CFI (cfiCond1397) CFA_SP SP+0
          CFI (cfiCond1398) CFA_SP SP+0
          CFI (cfiCond1399) CFA_SP SP+0
          CFI (cfiPicker1400) CFA_SP SP+0
          CFI EndBlock cfiCond1397
          CFI EndBlock cfiCond1398
          CFI EndBlock cfiCond1399
          CFI EndBlock cfiPicker1400

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine169:
          CFI Block cfiCond1401 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1402 Using cfiCommon0
          CFI (cfiCond1402) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1402) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_72
          CFI (cfiCond1402) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1402) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1402) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1402) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1402) CFA_SP SP+-6
          CFI (cfiCond1402) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1403 Using cfiCommon0
          CFI (cfiCond1403) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_84
          CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1403) CFA_SP SP+-6
          CFI (cfiCond1403) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1404 Using cfiCommon0
          CFI (cfiCond1404) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_85
          CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1404) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1404) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1404) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1404) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1404) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1404) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1404) CFA_SP SP+-6
          CFI (cfiCond1404) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1405 Using cfiCommon0
          CFI (cfiCond1405) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1405) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_589
          CFI (cfiCond1405) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1405) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1405) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1405) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1405) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1405) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1405) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1405) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1405) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1405) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1405) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1405) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1405) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1405) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1405) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1405) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1405) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1405) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1405) CFA_SP SP+-4
          CFI (cfiCond1405) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1406 Using cfiCommon0
          CFI (cfiCond1406) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1406) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_590
          CFI (cfiCond1406) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1406) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1406) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1406) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1406) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1406) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1406) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1406) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1406) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1406) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1406) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1406) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1406) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1406) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1406) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1406) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1406) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1406) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1406) CFA_SP SP+-4
          CFI (cfiCond1406) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1407 Using cfiCommon0
          CFI (cfiCond1407) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1407) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_588
          CFI (cfiCond1407) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1407) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1407) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1407) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1407) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1407) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1407) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1407) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1407) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1407) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1407) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1407) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1407) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1407) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1407) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1407) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1407) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1407) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1407) CFA_SP SP+-4
          CFI (cfiCond1407) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker1408 Using cfiCommon1
          CFI (cfiPicker1408) NoFunction
          CFI (cfiPicker1408) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        RET
          CFI (cfiCond1401) CFA_SP SP+-4
          CFI (cfiCond1402) CFA_SP SP+-4
          CFI (cfiCond1403) CFA_SP SP+-4
          CFI (cfiCond1404) CFA_SP SP+-4
          CFI (cfiCond1405) CFA_SP SP+-2
          CFI (cfiCond1406) CFA_SP SP+-2
          CFI (cfiCond1407) CFA_SP SP+-2
          CFI (cfiPicker1408) CFA_SP SP+0
          CFI EndBlock cfiCond1401
          CFI EndBlock cfiCond1402
          CFI EndBlock cfiCond1403
          CFI EndBlock cfiCond1404
          CFI EndBlock cfiCond1405
          CFI EndBlock cfiCond1406
          CFI EndBlock cfiCond1407
          CFI EndBlock cfiPicker1408

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond1409 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1410 Using cfiCommon0
          CFI (cfiCond1410) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1410) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1410) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1410) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1410) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1410) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1410) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1410) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1410) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1410) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1410) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1410) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1410) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1410) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1410) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1410) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1410) CFA_SP SP+-2
          CFI (cfiCond1410) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1411 Using cfiCommon0
          CFI (cfiCond1411) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1411) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond1411) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1411) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1411) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1411) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1411) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1411) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1411) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1411) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1411) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1411) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1411) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1411) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1411) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1411) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1411) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1411) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1411) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1411) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1411) CFA_SP SP+-2
          CFI (cfiCond1411) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1412 Using cfiCommon1
          CFI (cfiPicker1412) NoFunction
          CFI (cfiPicker1412) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_230:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond1409) CFA_SP SP+0
          CFI (cfiCond1410) CFA_SP SP+0
          CFI (cfiCond1411) CFA_SP SP+0
          CFI (cfiPicker1412) CFA_SP SP+0
          CFI EndBlock cfiCond1409
          CFI EndBlock cfiCond1410
          CFI EndBlock cfiCond1411
          CFI EndBlock cfiPicker1412
// 3492 
// 3493 /*********************************************************************
// 3494  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3495  *
// 3496  * @brief       This function handles parsing the incoming Management
// 3497  *              Network Update request and starts the request (if needed).
// 3498  *
// 3499  * @param       inMsg - incoming message (request)
// 3500  * @param       pReq - pointer to place to parse message to
// 3501  *
// 3502  * @return      none
// 3503  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3504 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1413 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3505 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3506   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_157:
        LCALL   ?Subroutine77 & 0xFFFF
// 3507 
// 3508   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_107:
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?XSTORE_R0123
// 3509   msg += 4;
// 3510   pReq->scanDuration = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,?V0
        ADD     A,#0x4
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
// 3511 
// 3512   if ( pReq->scanDuration <= 0x05 )
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_0
// 3513   {
// 3514     // Request is to scan over channelMask
// 3515     pReq->scanCount = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine150 & 0xFFFF
// 3516   }
??CrossCallReturnLabel_257:
        SJMP    ??ZDO_ParseMgmtNwkUpdateReq_1
// 3517   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV     A,#-0x2
        XRL     A,R2
        JZ      ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3518   {
// 3519     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3520     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_99:
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x6
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_4
        INC     R7
// 3521 
// 3522     if ( pReq->scanDuration == 0xFF )
??ZDO_ParseMgmtNwkUpdateReq_4:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3523     {
// 3524       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine57 & 0xFFFF
// 3525     }
// 3526   }
??CrossCallReturnLabel_83:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX    @DPTR,A
// 3527 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP    ??Subroutine178_0 & 0xFFFF
          CFI EndBlock cfiBlock1413

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond1414 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1415 Using cfiCommon0
          CFI (cfiCond1415) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1415) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond1415) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1415) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1415) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1415) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1415) CFA_SP SP+-2
          CFI (cfiCond1415) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1416 Using cfiCommon1
          CFI (cfiPicker1416) NoFunction
          CFI (cfiPicker1416) Picker
        MOV     DPH,A
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_264:
        MOV     R7,A
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
          CFI (cfiCond1414) CFA_SP SP+0
          CFI (cfiCond1415) CFA_SP SP+0
          CFI (cfiPicker1416) CFA_SP SP+0
          CFI EndBlock cfiCond1414
          CFI EndBlock cfiCond1415
          CFI EndBlock cfiPicker1416

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond1417 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1418 Using cfiCommon0
          CFI (cfiCond1418) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1418) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond1418) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1418) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1418) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1418) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1418) CFA_SP SP+-2
          CFI (cfiCond1418) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1419 Using cfiCommon1
          CFI (cfiPicker1419) NoFunction
          CFI (cfiPicker1419) Picker
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_258:
        INC     DPTR
        RET
          CFI (cfiCond1417) CFA_SP SP+0
          CFI (cfiCond1418) CFA_SP SP+0
          CFI (cfiPicker1419) CFA_SP SP+0
          CFI EndBlock cfiCond1417
          CFI EndBlock cfiCond1418
          CFI EndBlock cfiPicker1419

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond1420 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_257
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1421 Using cfiCommon0
          CFI (cfiCond1421) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1421) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_98
          CFI (cfiCond1421) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1421) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1421) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1421) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1421) CFA_SP SP+-4
          CFI (cfiCond1421) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1422 Using cfiCommon0
          CFI (cfiCond1422) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1422) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_99
          CFI (cfiCond1422) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1422) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1422) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1422) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1422) CFA_SP SP+-4
          CFI (cfiCond1422) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1423 Using cfiCommon1
          CFI (cfiPicker1423) NoFunction
          CFI (cfiPicker1423) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond1420) CFA_SP SP+0
          CFI (cfiCond1421) CFA_SP SP+-2
          CFI (cfiCond1422) CFA_SP SP+-2
          CFI (cfiPicker1423) CFA_SP SP+0
          CFI EndBlock cfiCond1420
          CFI EndBlock cfiCond1421
          CFI EndBlock cfiCond1422
          CFI EndBlock cfiPicker1423

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond1424 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1425 Using cfiCommon0
          CFI (cfiCond1425) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1425) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond1425) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1425) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1425) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1425) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1425) CFA_SP SP+-2
          CFI (cfiCond1425) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1426 Using cfiCommon1
          CFI (cfiPicker1426) NoFunction
          CFI (cfiPicker1426) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_546:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond1424) CFA_SP SP+0
          CFI (cfiCond1425) CFA_SP SP+0
          CFI (cfiPicker1426) CFA_SP SP+0
          CFI EndBlock cfiCond1424
          CFI EndBlock cfiCond1425
          CFI EndBlock cfiPicker1426

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zdpExternalStateTaskID>`:
        DATA16
        DW -1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_Init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_StartDevice::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdoSendStateChangeMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdoSendStateChangeMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateNwkStatus::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CompareClusterLists::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CompareClusterLists

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_AnyClusterMatches::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessPowerDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessActiveEPReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ConvertOTAClusters::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateAddrManager::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLqiReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtRtgReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??NLME_PermitJoiningTimeout::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessParentAnnceRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessParentAnnceRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_BuildSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_MatchEndDeviceBind::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_MatchEndDeviceBind

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveMatchMemory::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveMatchMemory

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CopyMatchInfo::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CopyMatchInfo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDMatchSendState::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDMatchSendState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceBindMatchTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceBindMatchTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseAddrRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParsePowerDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEPListRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseUserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "StartDevice ERR">`:
        DB "StartDevice ERR"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "MODE unknown">`:
        DB "MODE unknown"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "End Device Bind">`:
        DB "End Device Bind"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Success Sent">`:
        DB "Success Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Timeout">`:
        DB "Timeout"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Match Desc Req">`:
        DB "Match Desc Req"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Sent">`:
        DB "Rsp Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Non Matched">`:
        DB "Rsp Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Non Matched">`:
        DB "Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        END
// 3528 
// 3529 /*********************************************************************
// 3530 *********************************************************************/
// 
// 12 979 bytes in segment BANKED_CODE
//    318 bytes in segment BANK_RELAYS
//      2 bytes in segment XDATA_I
//      2 bytes in segment XDATA_ID
//    122 bytes in segment XDATA_ROM_C
//     60 bytes in segment XDATA_Z
// 
// 13 299 bytes of CODE  memory
//    118 bytes of CONST memory (+ 4 bytes shared)
//     62 bytes of XDATA memory
//
//Errors: none
//Warnings: none
